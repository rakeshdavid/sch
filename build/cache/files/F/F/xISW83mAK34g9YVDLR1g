1665722086
waR3U4bTeM%3A6c12c99d0b3df40b370eda0d72ca7b19-cac8d4f9e70a7dbf382fdea459f5438f
s:19096:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImNhYzhkNGY5ZTcwYTdkYmYzODJmZGVhNDU5ZjU0MzhmIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjA6InVzZXJfbG9naW4uYmxhZGUucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NDE6InJlc291cmNlcy92aWV3cy9hdXRoL3VzZXJfbG9naW4uYmxhZGUucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czoxMzUwMzoiQGV4dGVuZHMoJ2xheW91dHMuYXV0aC51c2VybG9naW4nKQpAc2VjdGlvbigndGl0bGUnKQogICAgTG9naW4KQGVuZHNlY3Rpb24KQHNlY3Rpb24oJ21ldGEnKQogICAgPG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9IlNob3djYXNlaHViLCBzaWduIGluIj4KQGVuZHNlY3Rpb24KQHNlY3Rpb24oJ2NzcycpCjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii9wbGF0Zm9ybS9jc3MvbmV3Y3NzLmNzcz92PUBwaHAgZWNobyBkYXRlKCdZLW0tZC1oLWktcycpO0BlbmRwaHAiPgpAZW5kc2VjdGlvbgoKQHNlY3Rpb24oJ2NvbnRlbnQnKQogIDxzZWN0aW9uIGNsYXNzPSJsb2dpbi13cmFwcGVyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQgcC0wIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IHNpZ251cGZvcm0td2l0aC1zbGlkZXIgYWxpZ24taXRlbXMtdG9wIG0tMCIgPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTYgcC0wIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaW5kb3V0LXdyYXAiID4KICAgICAgICAgICAgICAgICAgICAgICA8IS0tICA8ZGl2IGNsYXNzPSJpbWctYm94IGQtYmxvY2sgZC1sZy1ub25lIHctMTAwIiA+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJpbWcvbG9naW4tYmcucG5nIiBhbHQ9IiIgY2xhc3M9ImltZy1mbHVpZCI+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+IC0tPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsZWZ0LWNvbnRlbnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI+PGEgaHJlZj0iIyI+PGltZyBzcmM9Ii9wbGF0Zm9ybS9pbWcvbG9nby5wbmciIGFsdD0iIiBjbGFzcz0iaW1nLWZsdWlkIj48L2E+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0iZmluZC1hcnJvdyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9wbGF0Zm9ybS9pbWcvZG93bi1hcnJvdy5wbmciIGFsdD0iIiBjbGFzcz0iaW1nLWZsdWlkIj48c3Bhbj5GaW5kIG91dCBtb3JlPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPCEtLSBGdWxsIFBhZ2UgSW1hZ2UgQ2Fyb3VzZWwgLS0+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2xpZGVyLXdyYXBwZXIiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImNhcm91c2VsRXhhbXBsZUluZGljYXRvcnMiIGNsYXNzPSJjYXJvdXNlbCBzbGlkZSIgZGF0YS1yaWRlPSJjYXJvdXNlbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b2wgY2xhc3M9ImNhcm91c2VsLWluZGljYXRvcnMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLXRhcmdldD0iI2Nhcm91c2VsRXhhbXBsZUluZGljYXRvcnMiIGRhdGEtc2xpZGUtdG89IjAiIGNsYXNzPSJhY3RpdmUiPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGRhdGEtdGFyZ2V0PSIjY2Fyb3VzZWxFeGFtcGxlSW5kaWNhdG9ycyIgZGF0YS1zbGlkZS10bz0iMSI+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGkgZGF0YS10YXJnZXQ9IiNjYXJvdXNlbEV4YW1wbGVJbmRpY2F0b3JzIiBkYXRhLXNsaWRlLXRvPSIyIj48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBkYXRhLXRhcmdldD0iI2Nhcm91c2VsRXhhbXBsZUluZGljYXRvcnMiIGRhdGEtc2xpZGUtdG89IjMiPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L29sPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaW5uZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWl0ZW0gY2Fyb3VzZWwtaXRlbS0xIGFjdGl2ZSIgc3R5bGU9ImJhY2tncm91bmQ6IHVybCgvcGxhdGZvcm0vaW1nL2JsYWNrLW1hbjEuanBnKTsiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtY2FwdGlvbiBmZWVkYmFjay1jYXB0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ28iPjxhIGhyZWY9IiMiPjxpbWcgc3JjPSIvcGxhdGZvcm0vaW1nL2xvZ28ucG5nIiBhbHQ9IiIgY2xhc3M9ImltZy1mbHVpZCI+PC9hPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxPkZlZWRiYWNrIDxicj5vbiBkZW1hbmQgaW4gPHNwYW4gY2xhc3M9InRleHQtcmVkIj4zIGVhc3kgc3RlcHM8L3NwYW4+PC9oMT4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5XZWxjb21lIHRvIHRoZSBwbGF0Zm9ybSB0aGF0IDxicj5jb25uZWN0cyBkYW5jZXJzIGFuZCBhY3RvcnMgb2YgYWxsIGxldmVscyB3aXRoIHNlYXNvbmVkIHByb2Zlc3Npb25hbHMuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbC1pdGVtIGNhcm91c2VsLWl0ZW0tMiIgc3R5bGU9ImJhY2tncm91bmQ6IHVybCgvcGxhdGZvcm0vaW1nL3NsaWRlMDEuanBnKTsiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtY2FwdGlvbiByZWNvcmQtY2FwdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2dvIj48YSBocmVmPSIjIj48aW1nIHNyYz0iL3BsYXRmb3JtL2ltZy9sb2dvLnBuZyIgYWx0PSIiIGNsYXNzPSJpbWctZmx1aWQiPjwvYT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJuby1ib3giPjAxPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxPlJlY29yZCAmIHVwbG9hZCA8c3BhbiBjbGFzcz0idGV4dC1yZWQiPnlvdXIgcGVyZm9ybWFuY2U8L3NwYW4+PC9oMT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPlN1Ym1pdCB5b3VyIGRhbmNlIHJlZWwsIHJlaGVhcnNhbCB2aWRlbyBvciBzdHVkaW8gd29yay48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWl0ZW0gY2Fyb3VzZWwtaXRlbS0zIiBzdHlsZT0iYmFja2dyb3VuZDogdXJsKC9wbGF0Zm9ybS9pbWcvc2xpZGUyLmpwZyk7IiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsLWNhcHRpb24gY2F0ZWdvcnktY2FwdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2dvIj48YSBocmVmPSIjIj48aW1nIHNyYz0iL3BsYXRmb3JtL2ltZy9sb2dvLnBuZyIgYWx0PSIiIGNsYXNzPSJpbWctZmx1aWQiPjwvYT48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5vLWJveCI+MDI8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxPlNlbGVjdCBvbmUgPHNwYW4gY2xhc3M9InRleHQtcmVkIj5jYXRlZ29yeTwvc3Bhbj48L2gxPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJjYXRlZ29yeS1saXN0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDM+Q29hY2hpbmc8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPkZlZWRiYWNrIGFuZCBndWlkYW5jZSBwcm92aWRlZCBieSB0aGUgZGFuY2Ugb3IgYWN0aW5nIHByb2Zlc3Npb25hbCBZT1Ugc2VsZWN0LjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPkF1ZGl0aW9uczwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+Sm9iIG9wcG9ydHVuaXRpZXMgcG9zdGVkIGJ5IHByb2Zlc3Npb25hbHMgbG9va2luZyBmb3IgZGFuY2VycyBvciBhY3RvcnMuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDM+Q2hhbGxlbmdlczwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+IERhbmNlIGFuZCBhY3RpbmcgY29udGVzdHMgY3JlYXRlZCBieSBwcm9mZXNzaW9uYWxzIGFuZCBzdHVkaW9zIG9mZmVyaW5nIGEgdmFyaWV0eSBvZiBnaXZlYXdheXMgYW5kIHNjaG9sYXJzaGlwcy4gPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtaXRlbSBjYXJvdXNlbC1pdGVtLTQiIHN0eWxlPSJiYWNrZ3JvdW5kOiB1cmwoL3BsYXRmb3JtL2ltZy9zbGlkZTMuanBnKTsiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2Fyb3VzZWwtY2FwdGlvbiBwcm9mZXNzaW9uYWwtY2FwdGlvbiAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibG9nbyI+PGEgaHJlZj0iIyI+PGltZyBzcmM9Ii9wbGF0Zm9ybS9pbWcvbG9nby5wbmciIGFsdD0iIiBjbGFzcz0iaW1nLWZsdWlkIj48L2E+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJuby1ib3giPjAzPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+UmVjZWl2ZSA8c3BhbiBjbGFzcz0idGV4dC1yZWQiPnByb2Zlc3Npb25hbDxicj4gZmVlZGJhY2s8L3NwYW4+PC9oMT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPkFsbCBwZXJmb3JtYW5jZXMgc3VibWl0dGVkIHdpbGwgcmVjZWl2ZSBwZXJzb25hbGl6ZWQgdmVyYmFsIGFuZCB3cml0dGVuIGZlZWRiYWNrITwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy02IHAtMCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmlnaHQtY29udGVudC13cmFwIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib3V0ZXItYm94Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRvcC1ib3giPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMj48c3Bhbj5XZWxjb21lIFRvPC9zcGFuPiBTaG93Y2FzZSBIdWI8L2gyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5GZWVkYmFjayBvbiBEZW1hbmQ8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPldoZXJlIHdlIHN1cHBseSB5b3Ugd2l0aCB0b2RheSdzIHByb2Zlc3Npb25hbHMgaW4gdGhlIHBlcmZvcm1pbmcgYXJ0cy48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlubmVyLWZvcm0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybSBjbGFzcz0ibG9naW4tZm9ybSIgaWQ9ImxvZ2luLWZvcm0iIG1ldGhvZD0iUE9TVCIgYWN0aW9uPSJ7eyB1cmwoJy9sb2dpbicpIH19Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ISEgY3NyZl9maWVsZCgpICEhfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzPkxPRyBJTjwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIDxkaXYgY2xhc3M9ImZhY2Vib29rLWJ0biI+PGEgaHJlZj0ie3t1cmwoJ2F1dGgvZmFjZWJvb2snKX19Ij48c3Bhbj48aSBjbGFzcz0iZmFiIGZhLWZhY2Vib29rLXNxdWFyZSI+PC9pPjwvc3Bhbj5Db250aW51ZSBXaXRoIEZhY2Vib29rPC9hPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib3ItYm94Ij5PUjwvZGl2PiAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAge3sgJGVycm9ycy0+aGFzKCdlbWFpbCcpID8gJyBoYXMtZXJyb3InIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbGQoJ2VtYWlsJykgPyAnIGhhcy1mb2N1cycgOiAnJ319Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgbmFtZT0iZW1haWwiIHR5cGU9ImVtYWlsIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iRW1haWwiIHZhbHVlPSJ7eyBvbGQoJ2VtYWlsJykgfX0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJlcnJvci1ibG9jayI+e3sgJGVycm9ycy0+aGFzKCdlbWFpbCcpID8gJGVycm9ycy0+Zmlyc3QoJ2VtYWlsJykgOiAnJyB9fTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iUGFzc3dvcmQiIG5hbWU9InBhc3N3b3JkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9ImZvcmdvdC1wYXNzd29yZCI+Rm9yZ290IHBhc3N3b3JkPzwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPGEgaHJlZj0iIyIgY2xhc3M9ImJ0biBidG4tbGlnaHQiPkxvZyBJbjwvYT4gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1saWdodCIgdmFsdWU9IkxvZyBJbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWdpc3RlciI+TmV3IGhlcmU/IDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSI+PHN0cm9uZz5SZWdpc3RlciBOb3c8L3N0cm9uZz48L2E+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0gY2xhc3M9InJlZ2lzdGVyLWZvcm0iIG5hbWU9ImZvcm0iIGlkPSJyZWdpc3Rlci1mb3JtIiBtZXRob2Q9IlBPU1QiIGFjdGlvbj0ie3sgdXJsKCcvcmVnaXN0ZXInKSB9fSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyEhIGNzcmZfZmllbGQoKSAhIX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5SZWdpc3RlcjwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCB7e29sZCgnZmlyc3RfbmFtZScpID8gJyBoYXMtZm9jdXMnIDogJyd9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyRlcnJvcnMtPmhhcygnZmlyc3RfbmFtZScpID8gJyBoYXMtZXJyb3InIDogJycgfX0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0iZnVsbC1uYW1lIiB0eXBlPSJ0ZXh0IiBuYW1lPSJmaXJzdF9uYW1lIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iRnVsbCBOYW1lIiB2YWx1ZT0ie3sgb2xkKCdmaXJzdF9uYW1lJykgfX0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJlcnJvci1ibG9jayI+e3skZXJyb3JzLT5maXJzdCgnZmlyc3RfbmFtZScpfX08L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0iZW1haWwiIG5hbWU9ImVtYWlsIiB0eXBlPSJlbWFpbCIgY2xhc3M9ImZvcm0tY29udHJvbCIgcGxhY2Vob2xkZXI9IkVtYWlsIiB2YWx1ZT0ie3sgb2xkKCdlbWFpbCcpIH19Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZXJyb3ItYmxvY2siPnt7ICRlcnJvcnMtPmhhcygnZW1haWwnKSA/ICRlcnJvcnMtPmZpcnN0KCdlbWFpbCcpIDogJycgfX08L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0icGFzc3dvcmQiIG5hbWU9InBhc3N3b3JkIiB0eXBlPSJwYXNzd29yZCIgY2xhc3M9ImZvcm0tY29udHJvbCIgcGxhY2Vob2xkZXI9IlBhc3N3b3JkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZXJyb3ItYmxvY2siPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJwYXNzd29yZCIgbmFtZT0icGFzc3dvcmRfY29uZmlybWF0aW9uIiB0eXBlPSJwYXNzd29yZCIgY2xhc3M9ImZvcm0tY29udHJvbCIgcGxhY2Vob2xkZXI9IkNvbmZpcm0gUGFzc3dvcmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJlcnJvci1ibG9jayI+e3skZXJyb3JzLT5maXJzdCgncGFzc3dvcmQnKX19PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9InN1Ym1pdF9jcmVhdGVfYWNjb3VudCIgdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1saWdodCIgdmFsdWU9IkNyZWF0IEFjY291bnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5CeSBjcmVhdGluZyB5b3VyIGFjY291bnQgeW91IGFncmVlIHRvIG91ciA8YSBocmVmPSIjIj5UZXJtcyAmIENvbmRpdGlvbnMuPC9hPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luIj5JIGhhdmUgYW4gYWNjb3VudCEgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIj4gPHN0cm9uZz5Mb2cgSW4gPC9zdHJvbmc+PC9hPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0gY2xhc3M9InJlc2V0LXBhc3N3b3JkIiBpZD0icGFzc3dvcmQtZm9ybSIgbWV0aG9kPSJQT1NUIiBhY3Rpb249Int7IHVybCgnL3Bhc3N3b3JkL2VtYWlsJykgfX0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgY3NyZl9maWVsZCgpIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpZiAoc2Vzc2lvbignc3RhdHVzJykpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC1zdWNjZXNzLW91dGxpbmUgYW5pbWF0ZWQgZmFkZUluIiByb2xlPSJhbGVydCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJjbG9zZSIgZGF0YS1kaXNtaXNzPSJhbGVydCIgYXJpYS1sYWJlbD0iQ2xvc2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+w5c8L3NwYW4+IDxzcGFuIGNsYXNzPSJzci1vbmx5Ij5DbG9zZTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4gPHN0cm9uZz5TdWNjZXNzITwvc3Ryb25nPiB7eyBzZXNzaW9uKCdzdGF0dXMnKSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBlbmRpZgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDM+UmVzZXQgcGFzc3dvcmQ8L2gzPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5QbGVhc2UgZW50ZXIgdGhlIGVtYWlsIGFkZHJlc3MgYXNzb2NpYXRlZCB3aXRoIHlvdXIgYWNjb3VudC48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtYi01Ij5Zb3Ugd2lsbCByZWNlaXZlIGFuIGVtYWlsIHRvIHJlc2V0IHlvdXIgcGFzc3dvcmQuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBhdXRvY29tcGxldGU9Im9mZiIgdHlwZT0iZW1haWwiIG5hbWU9ImVtYWlsIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iRW1haWwiIHZhbHVlPSJ7eyBvbGQoJ2VtYWlsJykgfX0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImVycm9yLWJsb2NrIj48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1saWdodCIgdmFsdWU9IlJlc2V0IFBhc3N3b3JkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhbmNlbCI+PGEgaHJlZj0iIyI+Q2FuY2VsPC9hPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJvdHRvbS1tZW51LXdyYXAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vaXR1bmVzLmFwcGxlLmNvbS91cy9hcHAvc2hvd2Nhc2VodWItZGFuY2UvaWQxNDE4NDQ0NzQ0P2xzPTEmbXQ9OCIgY2xhc3M9ImFwcC1pY29uIiB0YXJnZXQ9Il9ibGFuayI+PGltZyBzcmM9Ii9wbGF0Zm9ybS9pbWcvYXBwLWRvd25sb2FkLnBuZyIgY2xhc3M9ImltZy1mbHVpZCI+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJib3R0b20tbWVudXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy5zaG93Y2FzZWh1Yi5jb20vYWJvdXQtdXMuaHRtbCIgdGFyZ2V0PSJfYmxhbmsiPkFib3V0IFVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnNob3djYXNlaHViLmNvbS9zdXBwb3J0Lmh0bWwiIHRhcmdldD0iX2JsYW5rIj5TdXBwb3J0PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnNob3djYXNlaHViLmNvbS9sZWdhbC5odG1sIiB0YXJnZXQ9Il9ibGFuayI+TGVnYWw8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICA8L3NlY3Rpb24+CkBlbmRzZWN0aW9uCgpAc2VjdGlvbignanMnKQogICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpeyAKICAgICAgICAkKCcuZmluZC1hcnJvdycpLnRyaWdnZXIoJ2NsaWNrJyk7CiAgICAgICB9LCAyMDAwKTsKCiAgICAgfSkKICAgPC9zY3JpcHQ+CkBlbmRzZWN0aW9uIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";