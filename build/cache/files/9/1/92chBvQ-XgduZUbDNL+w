1665722086
waR3U4bTeM%3A235105778a2a830596f3e264b2fbd121-21638c546d911bb26d93fb795ed17ba6
s:7936:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjIxNjM4YzU0NmQ5MTFiYjI2ZDkzZmI3OTVlZDE3YmE2IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MzI6ImNyZWF0ZV9maXJzdF9zdGVwX3RlbXAuYmxhZGUucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NTU6InJlc291cmNlcy92aWV3cy9yZXZpZXcvY3JlYXRlX2ZpcnN0X3N0ZXBfdGVtcC5ibGFkZS5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjUxMDg6IkBleHRlbmRzKCdsYXlvdXRzLmFwcCcpCkBzZWN0aW9uKCdjb250ZW50JykKICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgQGlmIChzZXNzaW9uKCktPmhhcygnbWVzc2FnZScpKQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC1pbmZvIj4KICAgICAgICAgICAgICAgIDxwPnt7IHNlc3Npb24oJ21lc3NhZ2UnKSB9fTwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgQGVuZGlmCiAgICAgICAgQGlmICgkZXJyb3JzLT5hbnkoKSkKICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtZGFuZ2VyIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0VGMDAyNSI+CiAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgQGZvcmVhY2ggKCRlcnJvcnMtPmFsbCgpIGFzICRlcnJvcikKICAgICAgICAgICAgICAgICAgICAgICAgPGxpPnt7ICRlcnJvciB9fTwvbGk+CiAgICAgICAgICAgICAgICAgICAgQGVuZGZvcmVhY2gKICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIEBlbmRpZgogICAgICAgIDxoMSBjbGFzcz0iZi1zLTQ4IGNvbG9yLWRhbmdlciB0ZXh0LWNlbnRlciBmLXctNTAwIG0tYi0xNSB0ZXh0LXVwcGVyY2FzZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9wcm9maWxlL3t7ICR2aWRlby0+dXNlci0+aWQgfX0iIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6ICNkOTUzNGYgIWltcG9ydGFudCI+CiAgICAgICAgICAgICAgICB7eyAkdmlkZW8tPnVzZXItPmZpcnN0X25hbWUgLiAnICcgLiAkdmlkZW8tPnVzZXItPmxhc3RfbmFtZSB9fQogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9oMT4KICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgbS1iLTIwIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIj4KICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0idGV4dC1jZW50ZXIgbS1iLTAiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmLXMtMTggdGV4dC11cHBlcmNhc2UgZi13LTUwMCB0ZXh0LWdyYXkiPkxldmVsOjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZi1zLTE4Ij57eyAkdmlkZW8tPnBlcmZvcm1hbmNlX2xldmVsLT5uYW1lIH19PC9zcGFuPgogICAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBpZD0idmlkZW9fYmxrIiBjbGFzcz0iIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IiBpZD0iY29hY2hfcmV2aWV3IiA+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLW1kLTEwIGNvbC1tZC1vZmZzZXQtMSI+CiAgICAgICAgICAgICAgICA8ZGl2IGFsaWduPSJjZW50ZXIiIGNsYXNzPSJlbWJlZC1yZXNwb25zaXZlIGVtYmVkLXJlc3BvbnNpdmUtMTZieTkiPgogICAgICAgICAgICAgICAgICAgICAgICA8dmlkZW8gd2lkdGg9IjcyOCIgaGVpZ2h0PSI0MTAiIGNvbnRyb2xzIGlkPSJjb2FjaF9yZXZpZXdfcGxheWVyIiBjbGFzcz0iZW1iZWQtcmVzcG9uc2l2ZS1pdGVtIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzb3VyY2UgaWQ9InJldmlld19zcmMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0ie3t1cmwoJy8nKSAuIGNvbmZpZygndmlkZW8udGVtcF9yZXZpZXdfcGF0aCcpIC4gJHZpZGVvLT50ZW1wb3JhcnlfcmV2aWV3LT5yZXZpZXdfdXJsfX0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgWW91ciBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgSFRNTDUgdmlkZW8uCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdmlkZW8+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IG0tdC0xNSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLW1kLTEwIGNvbC1tZC1vZmZzZXQtMSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiIGlkPSJyZWxvYWRfYmxvY2siPgogICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYnRuIGJ0bi1kYW5nZXIiIGhyZWY9Int7cm91dGUoJ3Jldmlldy5yZXdyaXRlJywgJHZpZGVvLT5pZCl9fSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iYnRuLWljb24gZmEgZmEtY2hlY2siPjwvaT5SZS1yZWNvcmQgdmlkZW8KICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLW1kLTEwIGNvbC1tZC1vZmZzZXQtMSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IG0tdC0xNSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiBjb2wtbWQtNiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDIgY2xhc3M9InRleHQtZGFuZ2VyIGYtcy0yMiBmLXctNTAwIHRleHQtdXBwZXJjYXNlIj5Qcm9maWxlPC9oMj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz0icC1sLTI1Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+IDxzcGFuIGNsYXNzPSJ0ZXh0LXVwcGVyY2FzZSI+TG9jYXRpb246IDwvc3Bhbj4ge3sgJHZpZGVvLT51c2VyLT5sb2NhdGlvbiB9fTwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQHBocAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYWdlID0gJyc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYWdlID0gQ2FyYm9uXENhcmJvbjo6cGFyc2UoJHZpZGVvLT51c2VyLT5iaXJ0aGRheSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYWdlID0gJGFnZS0+ZGlmZkluWWVhcnMoQ2FyYm9uXENhcmJvbjo6bm93KCkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChcRXhjZXB0aW9uICRlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYWdlID0gJyc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAZW5kcGhwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPiA8c3BhbiBjbGFzcz0idGV4dC11cHBlcmNhc2UiPkFnZTogPC9zcGFuPiB7eyAkYWdlIH19PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+IDxzcGFuIGNsYXNzPSJ0ZXh0LXVwcGVyY2FzZSI+QWN0aXZpdHkgZXhwZXJpZW5jZSA8L3NwYW4+KHllYXJzKToge3sgJHZpZGVvLT5hY3Rpdml0eV9leHBlcmllbmNlIH19PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+IDxzcGFuIGNsYXNzPSJ0ZXh0LXVwcGVyY2FzZSI+U2Vla2luZyBhdWRpdGlvbnM6IDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtY2FwaXRhbGl6ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBzdHJfcmVwbGFjZSgnXycsICcgJywgJHZpZGVvLT5zZWVraW5nX2F1ZGl0aW9ucyl9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIgY29sLW1kLTYiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJ0ZXh0LWRhbmdlciBmLXMtMjIgZi13LTUwMCB0ZXh0LXVwcGVyY2FzZSI+RmVlZGJhY2sgU3VtbWFyeTwvaDI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBzdHlsZT0ib3ZlcmZsb3cteDogaGlkZGVuIiA+IHt7ICR2aWRlby0+ZGVzY3JpcHRpb24gfX08L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9InZpZGVvX2lkIiBkYXRhLXZpZGVvLWlkPSJ7eyR2aWRlby0+aWR9fSI+e3skdmlkZW8tPm5hbWV9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9InVzZXJfaWQiIGRhdGEtdXNlci1pZD0ie3skdmlkZW8tPnVzZXJfaWR9fSI+e3skdmlkZW8tPnVzZXJfZmlyc3RfbmFtZX19ICB7eyR2aWRlby0+dXNlcl9sYXN0X25hbWV9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8aHI+CiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgPGRpdiBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyIgY2xhc3M9ImNvbC14cy0xMiI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSJ7e3JvdXRlKCdyZXZpZXcuY3JlYXRlLXNlY29uZC1zdGVwJywgJHZpZGVvLT5pZCl9fSIgY2xhc3M9ImJ0biBidG4td2FybmluZyBtLXItMTAgbS1iLTEwIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iYnRuLWljb24gZmEgZmEtY2hlY2siPjwvaT5SZXBvcnQKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KQGVuZHNlY3Rpb24KQHNlY3Rpb24oJ2pzJykKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7CgogICAgICAgIH0pCiAgICA8L3NjcmlwdD4KQGVuZHNlY3Rpb24KIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e319";