1665722087
waR3U4bTeM%3A21e149d9750773ae96bb0c9d26ddcd35-e96047ccea90a7896fd56b4c32b1d86a
s:9704:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6ImU5NjA0N2NjZWE5MGE3ODk2ZmQ1NmI0YzMyYjFkODZhIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTU6InJlc2V0LmJsYWRlLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjUyOiJyZXNvdXJjZXMvdmlld3MtMTgtMDUvYXV0aC9wYXNzd29yZHMvcmVzZXQuYmxhZGUucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo2NDUyOiJAZXh0ZW5kcygnbGF5b3V0cy5hdXRoLm1haW4nKQpAc2VjdGlvbigndGl0bGUnKQogICAgUGFzc3dvcmQgcmVzZXQKQGVuZHNlY3Rpb24KQHNlY3Rpb24oJ21ldGEnKQogICAgPG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9IlNob3djYXNlaHViLHJlc2V0IHBhc3N3b3JkIj4KQGVuZHNlY3Rpb24KQHNlY3Rpb24oJ2NzcycpCiAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgIFtkYXRhLXBhbGV0dGU9InBhbGV0dGUtNCJdIC5mb3JtLWdyb3VwLmZsb2F0aW5nLWxhYmVscyBpbnB1dFt0eXBlPSJ0ZXh0Il0sIFtkYXRhLXBhbGV0dGU9InBhbGV0dGUtNCJdCiAgICAgICAgLmZvcm0tZ3JvdXAuZmxvYXRpbmctbGFiZWxzIGlucHV0W3R5cGU9InBhc3N3b3JkIl0sIFtkYXRhLXBhbGV0dGU9InBhbGV0dGUtNCJdCiAgICAgICAgLmZvcm0tZ3JvdXAuZmxvYXRpbmctbGFiZWxzIGlucHV0W3R5cGU9ImVtYWlsIl0gewogICAgICAgICAgICBjb2xvcjogI2Q5ZDlkOSAhaW1wb3J0YW50OyAvKiBpbnB1dHMgY29sb3IgZml4ICovCiAgICAgICAgfQogICAgPC9zdHlsZT4KQGVuZHNlY3Rpb24KCkBzZWN0aW9uKCdjb250ZW50JykKICAgIDxkaXYgY2xhc3M9ImZ1bGxzaXplLWJhY2tncm91bmQtaW1hZ2UtMSI+CiAgICAgICAgPGltZyBzcmM9Ii9hc3NldHMvbWFyaW5vL2Fzc2V0cy9iYWNrZ3JvdW5kcy9iZzIucG5nIiAvPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQiPgogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsb2dpbi1wYWdlIHRleHQtY2VudGVyIGFuaW1hdGVkIGZhZGVJbiBkZWxheS0yMDAwIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtLXQtNTAgY29sLXhzLW9mZnNldC0yIGNvbC14cy04IGNvbC1zbS1vZmZzZXQtMyBjb2wtc20tNiBjb2wtbWQtb2Zmc2V0LTMgY29sLW1kLTYgY29sLWxnLW9mZnNldC00IGNvbC1sZy00Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtIG5hbWU9ImZvcm0iIG5vdmFsaWRhdGUgY2xhc3M9ImZvcm0tYmctY3IiIHJvbGU9ImZvcm0iIG1ldGhvZD0iUE9TVCIgYWN0aW9uPSJ7eyB1cmwoJy9wYXNzd29yZC9yZXNldCcpIH19Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDEgY2xhc3M9Im0tdC0yMCI+UmVzZXQgcGFzc3dvcmQ8L2gxPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND5QbGVhc2UgZW50ZXIgeW91ciBlbWFpbCBhZGRyZXNzIGFuZCBuZXcgcGFzc3dvcmQ8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGNzcmZfZmllbGQoKSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InRva2VuIiB2YWx1ZT0ie3sgJHRva2VuIH19Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaWYgKHNlc3Npb24oJ3N0YXR1cycpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYWxlcnQgYWxlcnQtc3VjY2Vzcy1vdXRsaW5lIGFuaW1hdGVkIGZhZGVJbiIgcm9sZT0iYWxlcnQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0iYWxlcnQiIGFyaWEtbGFiZWw9IkNsb3NlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiPsOXPC9zcGFuPiA8c3BhbiBjbGFzcz0ic3Itb25seSI+Q2xvc2U8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+IDxzdHJvbmc+c3VjY2VzcyE8L3N0cm9uZz4ge3sgc2Vzc2lvbignc3RhdHVzJykgfX08L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGVuZGlmCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC14cy0xMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIGZsb2F0aW5nLWxhYmVscyB7eyAkZXJyb3JzLT5oYXMoJ2VtYWlsJykgPyAnIGhhcy1lcnJvcicgOiAnJyB9fSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZW1haWwiPkVtYWlsPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgc3R5bGU9ImNvbG9yOiAjZDlkOWQ5ICFpbXBvcnRhbnQ7IiBpZD0iZW1haWwiIGF1dG9mb2N1cyBhdXRvY29tcGxldGU9Im9mZiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0iZW1haWwiIG5hbWU9ImVtYWlsIiB2YWx1ZT0ie3sgb2xkKCdlbWFpbCcpIH19Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZXJyb3ItYmxvY2siPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAgZmxvYXRpbmctbGFiZWxzIHt7ICRlcnJvcnMtPmhhcygncGFzc3dvcmQnKSA/ICcgaGFzLWVycm9yJyA6ICcnIH19Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJwYXNzd29yZCI+UGFzc3dvcmQ8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0icGFzc3dvcmQiIGF1dG9mb2N1cyBzdHlsZT0iY29sb3I6ICNkOWQ5ZDkgIWltcG9ydGFudDsiIGF1dG9jb21wbGV0ZT0ib2ZmIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJwYXNzd29yZCIgbmFtZT0icGFzc3dvcmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJlcnJvci1ibG9jayI+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCBmbG9hdGluZy1sYWJlbHMge3sgJGVycm9ycy0+aGFzKCdwYXNzd29yZF9jb25maXJtYXRpb24nKSA/ICcgaGFzLWVycm9yJyA6ICcnIH19Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJwYXNzd29yZF9jb25maXJtYXRpb24iPlBhc3N3b3JkIGNvbmZpcm08L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0icGFzc3dvcmRfY29uZmlybWF0aW9uIiBhdXRvZm9jdXMgYXV0b2NvbXBsZXRlPSJvZmYiIHN0eWxlPSJjb2xvcjogI2Q5ZDlkOSAhaW1wb3J0YW50OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0icGFzc3dvcmQiIG5hbWU9InBhc3N3b3JkX2NvbmZpcm1hdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImVycm9yLWJsb2NrIj57eyAkZXJyb3JzLT5oYXMoJ3Bhc3N3b3JkX2NvbmZpcm1hdGlvbicpID8gJGVycm9ycy0+Zmlyc3QoJ3Bhc3N3b3JkX2NvbmZpcm1hdGlvbicpIDogJycgfX08L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBidXR0b25zIG0tYi0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIGNvbC1tZC02Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4tbG9naW4gYnRuIGJ0bi1sZyBidG4taW5mbyBidG4tYmxvY2sgbS1iLTIwIiB2YWx1ZT0iUmVzZXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIGNvbC1tZC02Ij4gPGEgaHJlZj0ie3sgdXJsKCcvbG9naW4nKSB9fSIgY2xhc3M9ImJ0biBidG4tbGcgYnRuLWRhbmdlciBidG4tYmxvY2sgbS1iLTIwIj5Mb2dpbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJjb3B5cmlnaHQgdGV4dC1zbSI+JmNvcHk7IENvcHlyaWdodCB7eyBkYXRlKCdZJykgfX08L3A+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxzdHlsZT4KICAgICAgICAuY29udGFpbmVyLWZsdWlkIHsKICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICAgICAgICB6LWluZGV4OiAyOwogICAgICAgICAgICBtYXJnaW46IDAgYXV0bzsKICAgICAgICAgICAgbWF4LXdpZHRoOiAxMjgwcHg7CiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICB9CiAgICAgICAgLnZpZGVvIHsKICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkOwogICAgICAgICAgICB0b3A6IDUwJTsgbGVmdDogNTAlOwogICAgICAgICAgICB6LWluZGV4OiAxOwogICAgICAgICAgICBtaW4td2lkdGg6IDEwMCU7CiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7CiAgICAgICAgICAgIHdpZHRoOiBhdXRvOwogICAgICAgICAgICBoZWlnaHQ6IGF1dG87CiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwogICAgICAgIH0KICAgICAgICBodG1sIFtkYXRhLXBhbGV0dGU9InBhbGV0dGUtNCJdW2RhdGEtbGF5b3V0PSJmdWxsc2l6ZS1iYWNrZ3JvdW5kLWltYWdlIl0gewogICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmICFpbXBvcnRhbnQ7CiAgICAgICAgfQoKICAgICAgICAuZm9ybS1iZy1jcnsKICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzY2NjI2NzsKICAgICAgICAgICAgb3BhY2l0eTogMC44IUltcG9ydGFudDsKICAgICAgICAgICAgcGFkZGluZzogMTVweDsKICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgICAgIH0KCiAgICA8L3N0eWxlPgogICAgPHZpZGVvIGlkPSJteS12aWRlbyIgY2xhc3M9InZpZGVvIiBhdXRvcGxheSBtdXRlZCBsb29wPgogICAgICAgIDxzb3VyY2Ugc3JjPSIvdmlkZW9zL2xvb3BuX3t7cmFuZCgxLCA0KX19Lm1wNCIgdHlwZT0idmlkZW8vbXA0Ij4KICAgIDwvdmlkZW8+CkBlbmRzZWN0aW9uCgpAc2VjdGlvbignanMnKQogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgIChmdW5jdGlvbigpIHsKICAgICAgICAgICAgJ3VzZSBzdHJpY3QnOwogICAgICAgICAgICAkKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgdmFyIGNvbmZpZyA9ICQubG9jYWxTdG9yYWdlLmdldCgnY29uZmlnJyk7CiAgICAgICAgICAgICAgICAkKCdib2R5JykuYXR0cignZGF0YS1sYXlvdXQnLCAnZnVsbHNpemUtYmFja2dyb3VuZC1pbWFnZScpOwogICAgICAgICAgICAgICAgJCgnYm9keScpLmF0dHIoJ2RhdGEtcGFsZXR0ZScsIGNvbmZpZy50aGVtZSk7CiAgICAgICAgICAgICAgICAkKCdib2R5JykuYXR0cignZGF0YS1kaXJlY3Rpb24nLCBjb25maWcuZGlyZWN0aW9uKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSkoKTsKICAgIDwvc2NyaXB0PgpAZW5kc2VjdGlvbiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9fQ==";