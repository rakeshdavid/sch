1665722086
waR3U4bTeM%3A5819ad73952575beee8777e4d2e8e705-02a4ba39c0d7aee4b2519c98a54d4783
s:56820:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"02a4ba39c0d7aee4b2519c98a54d4783";s:39:" phpDocumentor\Reflection\Php\File name";s:21:"PaymentController.php";s:39:" phpDocumentor\Reflection\Php\File path";s:41:"app/Api/Controllers/PaymentController.php";s:41:" phpDocumentor\Reflection\Php\File source";s:20959:"<?php

namespace App\Api\Controllers;

use App\Api\Requests\PayVideoRequest;
use Stripe\Stripe;
use App\Jobs\SendReminderEmail;
use App\Models\Notification;
use App\Models\Video;
use Stripe\Charge;
use App\Http\Helpers\Mailer;
use App\Models\User;
use App\Models\PaymentsList;
use Dingo\Api\Http\Request;
use Dingo\Api\Exception\StoreResourceFailedException;
use Stripe\EphemeralKey;
use Stripe\Customer;
use App\Models\Auditions;
use App\Models\AuditionList;
use App\Models\NewPaymentlist;
use App\Api\Requests\PayAuditionRequest;
use App\Api\Requests\ApplePayVideoRequest;
use Illuminate\Support\Facades\DB;
/**
 * Payment data representation. Requires Authorization header.
 *
 * @Resource("Payment")
 */
class PaymentController extends BaseController
{
    /**
     * Get Stripe Public Key
     *
     * @Get("/get-stripe-key")
     * @Transaction({
     *     @Request(headers={"Authorization": "Bearer <JWT>"}),
     *     @Response(200, body={"data":{"stripe_key" : "pk_test_59qE2pNVJ9MlBAfu1733L3Bu"}, "status_code": 200}),
     *     @Response(401, body={"message": "422 Unprocessable Entity.",
     *         "status_code": 401}),
     *     @Response(422, body={"message": "422 Unprocessable Entity", "status_code": 422, "errors":{"stripe public key":
     *         {".env STRIPE_PUBLISHABLE_KEY not found"}}}),
     *     @Response(500, body={"error": "Server side error message", "status_code": 500})
     * })
     * @Versions({"v1"})
     */
    public function getStripePublicKey()
    {
        $stripe_key = env('STRIPE_PUBLISHABLE_KEY', false);
        if (!$stripe_key) {
            return $this->response->array([
                'message' => "422 Unprocessable Entity",
                'errors' => ['stripe public key' => ['.env STRIPE_PUBLISHABLE_KEY not found']],
                'status_code' => 422,
            ])->setStatusCode(422);
        } else {

            return response()->json(['data' => compact('stripe_key'), 'status_code' => 200]);
        }
    }

    /**
     * Store payment
     *
     * Update video status.
     *
     * @param PayVideoRequest $request
     *
     * @Post("/pay-video")
     * @Transaction({
     *     @Request(body={"source": "tok_amex", "video_id" : 72, "customer":"cus_DEvPAHtPC2PRMR", "need_customer_id":false}
     *     , headers={"Authorization": "Bearer <JWT>"}),
     *     @Response(200, body={"data": { "message": "Success pay!" }, "status_code": 200}),
     *     @Response(401, body={"message": "Failed to authenticate because of bad credentials or an invalid authorization header.",
     *         "status_code": 401}),
     *     @Response(422, body={"message": "Error pay", "status_code": 422}),
     *     @Response(500, body={"error":"Server side error message", "status_code": 500})
     * })
     * @Versions({"v1"})
     */
    public function payVideo(PayVideoRequest $request)
    {
        Stripe::setApiKey(config('services.stripe.secret')); //auth
        $video = Video::select('id', 'user_id', 'coach_id', 'video_price', 'pay_status')
            ->where('id', (int)$request->video_id)->first();
        $video_tax = DB::table('taxrate')->select('taxrate')->where('name','video_tax')->first();
        $price = $video->video_price;
        if($video_tax){
            $price = number_format(($video->video_price + ($video->video_price * (int)$video_tax->taxrate / 100)),2 );
        }
        $charge_array = [
            'currency' => 'USD',
            'amount' => $price*100,
            'description' => "Charge main balance, paid video " . $video->id,
        ];
        if($request->source) $charge_array['source'] = $request->source;
        if($request->need_customer_id){
            if(auth()->user()->stripe_customer_id){
                $stripe_customer_id = self::checkStripeCustomer();
                $charge_array['customer'] = $stripe_customer_id;
            }else{
                $stripe_customer = Customer::create([
                    'email' => auth()->user()->email,
                    'description' => 'User for stripe ephemeral key',
                ]);
                $charge_array['customer'] = $stripe_customer->id;
                User::whereId(auth()->user()->id)->update(['stripe_customer_id' => $stripe_customer->id]);
            }
        }else{
            if($request->customer) $charge_array['customer'] = $request->customer;
        }
      
        try {
            $charge = Charge::create($charge_array);
        } catch (\Exception $e) {
            return response()->json(["message" => "Error pay Exception", 'status_code' => 422,'response'=>$e]);
        }

        if ($charge['status'] == 'succeeded') { // success
            //create payment in database
            $new_pay = new PaymentsList();
            $new_pay->user_id = $video->user_id;
            $new_pay->coach_id = $video->coach_id;
            $new_pay->video_id = $video->id;
            $new_pay->amount = (float)$charge['amount'];
            $new_pay->stripe_id = (string)$charge['id'];
            $new_pay->save();

            //change video status
            $video->pay_status = 1;
            $video->update();

            $user = User::select('first_name', 'last_name', 'email')->where('id', $video->user_id)->first();
            //not
            $nt_data = [];
            $nt_data["user_id"] = $video->coach_id;
            $nt_data["sender_id"] = $video->user_id;
            $nt_data["video_id"] = $video->id;
            $nt_data["status"] = 1;
            $nt_data["message"] = '<a href="/profile/' . $video->user_id . '">' . $user->first_name . ' ' . $user->last_name
                . '</a> paid video!';
            $nt_data["created_at"] = mysql_date();
            $nt_data["updated_at"] = mysql_date();
            Notification::saveNotification($nt_data);
            //not

            $coach = User::select('first_name', 'email')->where('id', $video->coach_id)->first();
            $mail_to_performer = new Mailer();
            $mail_to_performer->subject = 'Thank you for your payment';
            $mail_to_performer->to_email = ($request->stripeEmail == $user->email) ? $user->email : $request->stripeEmail;
            $mail_to_performer->sendMail('auth.emails.paymentReceived',
                [
                    'first_name' => $user->first_name,
                    'date' => date('F d, Y h:i a'),
                    'amount' => (float)$charge['amount'] / 100,
                    'coach_name' => $coach->first_name,
                    'card_ending' => $charge['source']['exp_month'] . '/' . $charge['source']['exp_year'],
                    'card_type' => $charge['source']['brand'],
                    'card_last4' => $charge['source']['last4']
                ]);

            $mail_to_coach = new Mailer();
            $mail_to_coach->subject = 'Payment from the user';
            $mail_to_coach->to_email = $coach->email;
            $mail_to_coach->sendMail('auth.emails.paymentFromUser',
                [
                    'user_name' => $user->first_name,
                    'coach_name' => $coach->first_name
                ]);

            /* reminder functionality */
            $params = [
                'video_id' => $video->id,
                'performer_name' => $user->first_name,
                'coach_name' => $coach->first_name,
                'coach_email' => $coach->email,
                'date' => mysql_date(),
                'days_left' => 3
            ];

            $job_3_days = (new SendReminderEmail($params))->delay(4 * 24 * 60 * 60);

            $params['days_left'] = 2;
            $job_2_days = (new SendReminderEmail($params))->delay(5 * 24 * 60 * 60);

            $params['days_left'] = 1;
            $job_1_days = (new SendReminderEmail($params))->delay(6 * 24 * 60 * 60);

            dispatch($job_3_days);
            dispatch($job_2_days);
            dispatch($job_1_days);

            return response()->json(["message" => "Success pay!", 'status_code' => 200]);
        } else {
            return response()->json(["message" => "Error pay", 'status_code' => 422]);
        }
    }


    /**
     * Get Stripe Ephemeral Key
     *
     * @Get("/get-stripe-ephemeral-key")
     * * @Parameters({
     *      @Parameter("api_version", required=true, description="stripe api changelog date, example 2018-05-21")
     * })
     * @Transaction({
     *     @Request(headers={"Authorization": "Bearer <JWT>"}),
     *     @Response(200, body={"data": {"key": {"id": "ephkey_1CkSjoADFWrjvdJzots3UHTm","object": "ephemeral_key",
     * "associated_objects": {{"id": "cus_AsWX5ajtkcsbPB","type": "customer"}},"created": 1530778972,"expires": 1530782572,
     *     "livemode": false,"secret": "ek_test_YWNjdF8xQVdsZXcmp2ZEp6LFRZbVlNWU1NY1RrQnJkV3RWcmNGZDFyUEZ"}}, "status_code": 200}),
     *     @Response(401, body={"message": "422 Unprocessable Entity.",
     *         "status_code": 401}),
     *     @Response(422, body={"message": "422 Unprocessable Entity", "status_code": 422, "errors":{"api_version":
     *         {"Api version required!"}}}),
     *     @Response(500, body={"error": "Server side error message", "status_code": 500})
     * })
     * @Versions({"v1"})
     */
    public function getStripeEphemeralKey(Request $request)
    {
        if(!$request->api_version){
            throw new StoreResourceFailedException(
                'Request params error!',
                ['api_version' => ['Api version required!']]
            );
        }
        Stripe::setApiKey(config('services.stripe.secret'));
        if(auth()->user()->stripe_customer_id){
            $stripe_customer_id = self::checkStripeCustomer();
        }else{
            $stripe_customer = Customer::create([
                'email' => auth()->user()->email,
                'description' => 'User for stripe ephemeral key',
            ]);
            $stripe_customer_id = $stripe_customer->id;
            User::whereId(auth()->user()->id)->update(['stripe_customer_id' => $stripe_customer_id]);
        }

        $key = EphemeralKey::create(
            ["customer" => $stripe_customer_id],
            ["stripe_version" => $request->api_version] //'2018-05-21'
        );

            return response()->json(['data' => compact('key'), 'status_code' => 200]);
    }

    public function checkStripeCustomer()
    {
        try {
            $stripe_customer = Customer::retrieve(auth()->user()->stripe_customer_id);
        } catch (\Exception $e) {
            $stripe_customer = Customer::create([
                'email' => auth()->user()->email,
                'description' => 'User for stripe ephemeral key',
            ]);
            $stripe_customer_id = $stripe_customer->id;
            User::whereId(auth()->user()->id)->update(['stripe_customer_id' => $stripe_customer_id]);
        }

        if($stripe_customer->deleted){
            $stripe_customer = Customer::create([
                'email' => auth()->user()->email,
                'description' => 'User for stripe ephemeral key',
            ]);
            $stripe_customer_id = $stripe_customer->id;
            User::whereId(auth()->user()->id)->update(['stripe_customer_id' => $stripe_customer_id]);
        }else{
            $stripe_customer_id = $stripe_customer->id;
        }

        return $stripe_customer_id;
    }

    //Pay for audition 

    public function payAudition(PayAuditionRequest $request){
            Stripe::setApiKey(config('services.stripe.secret')); //auth
            $participantdetail = AuditionList::select('id','audition_id','user_id','payment_status','agency_id','stripe_id')->where('id','=',(int)$request->participant_id)->first(); 
            $audition = Auditions::where('id','=',$participantdetail->audition_id)->first();
            //$video = Video::select('id', 'user_id', 'coach_id', 'video_price', 'pay_status')
            //    ->where('id', (int)$request->video_id)->first();
            $charge_array = [
                'currency' => 'USD',
                'amount' => $audition->audition_fee,
                'description' => "Charge main balance, paid audition participant " . $participantdetail->id,
            ];
            if($request->source) $charge_array['source'] = $request->source;
            if($request->need_customer_id){
                if(auth()->user()->stripe_customer_id){
                    $stripe_customer_id = self::checkStripeCustomer();
                    $charge_array['customer'] = $stripe_customer_id;
                }else{
                    $stripe_customer = Customer::create([
                        'email' => auth()->user()->email,
                        'description' => 'User for stripe ephemeral key',
                    ]);
                    $charge_array['customer'] = $stripe_customer->id;
                    User::whereId(auth()->user()->id)->update(['stripe_customer_id' => $stripe_customer->id]);
                }
            }else{
                if($request->customer) $charge_array['customer'] = $request->customer;
            }
            //try charge
            print_r($charge_array);
            die();
            try {
                $charge = Charge::create($charge_array);
            } catch (\Exception $e) {
                return response()->json(["message" => "Error pay", 'status_code' => 422]);
            }

            if ($charge['status'] == 'succeeded') { // success
                //create payment in database
                $new_pay = new NewPaymentlist();
                $new_pay->user_id = $participantdetail->user_id;
                $new_pay->participant_id = $participantdetail->id;
                $new_pay->type = 'audition';
                $new_pay->amount = (int)$charge['amount'];
                $new_pay->stripe_id = (string)$charge['id'];
                $new_pay->save();

                //change video status
                $participantdetail->pay_status = 1;
                $participantdetail->stripe_id = (string)$charge['id'];
                $participantdetail->update();

                $user = User::select('first_name', 'last_name', 'email')->where('id', $participantdetail->user_id)->first();
                //not
                // $nt_data = [];
                // $nt_data["user_id"] = $video->coach_id;
                // $nt_data["sender_id"] = $video->user_id;
                // $nt_data["video_id"] = $video->id;
                // $nt_data["status"] = 1;
                // $nt_data["message"] = '<a href="/profile/' . $video->user_id . '">' . $user->first_name . ' ' . $user->last_name
                //     . '</a> paid video!';
                // $nt_data["created_at"] = mysql_date();
                // $nt_data["updated_at"] = mysql_date();
                // Notification::saveNotification($nt_data);
                //not

                $coach = User::select('first_name', 'email')->where('id', $participantdetail->agency_id)->first();
                $mail_to_performer = new Mailer();
                $mail_to_performer->subject = 'Thank you for your payment';
                $mail_to_performer->to_email = ($request->stripeEmail == $user->email) ? $user->email : $request->stripeEmail;
                $mail_to_performer->sendMail('auth.emails.paymentReceived',
                    [
                        'first_name' => $user->first_name,
                        'date' => date('F d, Y h:i a'),
                        'amount' => (int)$charge['amount'] / 100,
                        'coach_name' => $coach->first_name,
                        'card_ending' => $charge['source']['exp_month'] . '/' . $charge['source']['exp_year'],
                        'card_type' => $charge['source']['brand'],
                        'card_last4' => $charge['source']['last4']
                    ]);

                $mail_to_coach = new Mailer();
                $mail_to_coach->subject = 'Payment from the user';
                $mail_to_coach->to_email = $coach->email;
                $mail_to_coach->sendMail('auth.emails.paymentFromUser',
                    [
                        'user_name' => $user->first_name,
                        'coach_name' => $coach->first_name
                    ]);

                /* reminder functionality */
                // $params = [
                //     'video_id' => $video->id,
                //     'performer_name' => $user->first_name,
                //     'coach_name' => $coach->first_name,
                //     'coach_email' => $coach->email,
                //     'date' => mysql_date(),
                //     'days_left' => 3
                // ];

                // $job_3_days = (new SendReminderEmail($params))->delay(4 * 24 * 60 * 60);

                // $params['days_left'] = 2;
                // $job_2_days = (new SendReminderEmail($params))->delay(5 * 24 * 60 * 60);

                // $params['days_left'] = 1;
                // $job_1_days = (new SendReminderEmail($params))->delay(6 * 24 * 60 * 60);

                // dispatch($job_3_days);
                // dispatch($job_2_days);
                // dispatch($job_1_days);

                return response()->json(["message" => "Success pay!", 'status_code' => 200]);
            } else {
                return response()->json(["message" => "Error pay", 'status_code' => 422]);
            }
        
        }

    //Apple Pay update status for video payment
    public function applePayVideo(ApplePayVideoRequest $request)
    {
        
        $video = Video::select('id', 'user_id', 'coach_id', 'video_price', 'pay_status')
            ->where('id', (int)$request->video_id)->first();
        
        if ($request->status == 200) { // success
            //create payment in database
            $new_pay = new PaymentsList();
            $new_pay->user_id = $video->user_id;
            $new_pay->coach_id = $video->coach_id;
            $new_pay->video_id = $video->id;
            $new_pay->amount = $request->amount;
            $new_pay->stripe_id = $request->transaction_id;
            $new_pay->save();

            //change video status
            $video->pay_status = 1;
            $video->update();

            $user = User::select('first_name', 'last_name', 'email')->where('id', $video->user_id)->first();
            //not
            $nt_data = [];
            $nt_data["user_id"] = $video->coach_id;
            $nt_data["sender_id"] = $video->user_id;
            $nt_data["video_id"] = $video->id;
            $nt_data["status"] = 1;
            $nt_data["message"] = '<a href="/profile/' . $video->user_id . '">' . $user->first_name . ' ' . $user->last_name
                . '</a> paid video!';
            $nt_data["created_at"] = mysql_date();
            $nt_data["updated_at"] = mysql_date();
            Notification::saveNotification($nt_data);
            //not

            $coach = User::select('first_name', 'email')->where('id', $video->coach_id)->first();
            $mail_to_performer = new Mailer();
            $mail_to_performer->subject = 'Thank you for your payment';
            $mail_to_performer->to_email =  $user->email;
            $mail_to_performer->sendMail('auth.emails.paymentReceived',
                [
                    'first_name' => $user->first_name,
                    'date' => date('F d, Y h:i a'),
                    'amount' => $request->amount,
                    'coach_name' => $coach->first_name,
                    'card_ending' => 'Using Apple pay',
                    'card_type' => '',
                    'card_last4' => ''
                ]);

            $mail_to_coach = new Mailer();
            $mail_to_coach->subject = 'Payment from the user';
            $mail_to_coach->to_email = $coach->email;
            $mail_to_coach->sendMail('auth.emails.paymentFromUser',
                [
                    'user_name' => $user->first_name,
                    'coach_name' => $coach->first_name
                ]);

            /* reminder functionality */
            $params = [
                'video_id' => $video->id,
                'performer_name' => $user->first_name,
                'coach_name' => $coach->first_name,
                'coach_email' => $coach->email,
                'date' => mysql_date(),
                'days_left' => 3
            ];

            $job_3_days = (new SendReminderEmail($params))->delay(4 * 24 * 60 * 60);

            $params['days_left'] = 2;
            $job_2_days = (new SendReminderEmail($params))->delay(5 * 24 * 60 * 60);

            $params['days_left'] = 1;
            $job_1_days = (new SendReminderEmail($params))->delay(6 * 24 * 60 * 60);

            dispatch($job_3_days);
            dispatch($job_2_days);
            dispatch($job_1_days);

            return response()->json(["message" => "Success pay!", 'status_code' => 200]);
        } else {
            return response()->json(["message" => "Error while updating", 'status_code' => 422]);
        }
    }
     
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:20:"\App\Api\Controllers";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:20:"\App\Api\Controllers";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Controllers";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:38:"\App\Api\Controllers\PaymentController";O:35:"phpDocumentor\Reflection\Php\Class_":11:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:38:"\App\Api\Controllers\PaymentController";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"PaymentController";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:59:"Payment data representation. Requires Authorization header.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:8:"Resource";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:11:"("Payment")";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:19:"App\Api\Controllers";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:19:{s:15:"PayVideoRequest";s:32:"App\Api\Requests\PayVideoRequest";s:6:"Stripe";s:13:"Stripe\Stripe";s:17:"SendReminderEmail";s:26:"App\Jobs\SendReminderEmail";s:12:"Notification";s:23:"App\Models\Notification";s:5:"Video";s:16:"App\Models\Video";s:6:"Charge";s:13:"Stripe\Charge";s:6:"Mailer";s:23:"App\Http\Helpers\Mailer";s:4:"User";s:15:"App\Models\User";s:12:"PaymentsList";s:23:"App\Models\PaymentsList";s:7:"Request";s:22:"Dingo\Api\Http\Request";s:28:"StoreResourceFailedException";s:48:"Dingo\Api\Exception\StoreResourceFailedException";s:12:"EphemeralKey";s:19:"Stripe\EphemeralKey";s:8:"Customer";s:15:"Stripe\Customer";s:9:"Auditions";s:20:"App\Models\Auditions";s:12:"AuditionList";s:23:"App\Models\AuditionList";s:14:"NewPaymentlist";s:25:"App\Models\NewPaymentlist";s:18:"PayAuditionRequest";s:35:"App\Api\Requests\PayAuditionRequest";s:20:"ApplePayVideoRequest";s:37:"App\Api\Requests\ApplePayVideoRequest";s:2:"DB";s:29:"Illuminate\Support\Facades\DB";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:35:"\App\Api\Controllers\BaseController";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"BaseController";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:6:{s:60:"\App\Api\Controllers\PaymentController::getStripePublicKey()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:21:"Get Stripe Public Key";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:3:"Get";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:19:"("/get-stripe-key")";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:11:"Transaction";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:517:"({
    @Request(headers={"Authorization": "Bearer <JWT>"}),
    @Response(200, body={"data":{"stripe_key" : "pk_test_59qE2pNVJ9MlBAfu1733L3Bu"}, "status_code": 200}),
    @Response(401, body={"message": "422 Unprocessable Entity.",
        "status_code": 401}),
    @Response(422, body={"message": "422 Unprocessable Entity", "status_code": 422, "errors":{"stripe public key":
        {".env STRIPE_PUBLISHABLE_KEY not found"}}}),
    @Response(500, body={"error": "Server side error message", "status_code": 500})
})";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:8:"Versions";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:8:"({"v1"})";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:30;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:60:"\App\Api\Controllers\PaymentController::getStripePublicKey()";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"getStripePublicKey";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:46;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:50:"\App\Api\Controllers\PaymentController::payVideo()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:13:"Store payment";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:20:"Update video status.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:4:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:7:"request";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\App\Api\Requests\PayVideoRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"PayVideoRequest";}}s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:4:"Post";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:14:"("/pay-video")";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:11:"Transaction";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:567:"({
    @Request(body={"source": "tok_amex", "video_id" : 72, "customer":"cus_DEvPAHtPC2PRMR", "need_customer_id":false}
    , headers={"Authorization": "Bearer <JWT>"}),
    @Response(200, body={"data": { "message": "Success pay!" }, "status_code": 200}),
    @Response(401, body={"message": "Failed to authenticate because of bad credentials or an invalid authorization header.",
        "status_code": 401}),
    @Response(422, body={"message": "Error pay", "status_code": 422}),
    @Response(500, body={"error":"Server side error message", "status_code": 500})
})";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:3;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:8:"Versions";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:8:"({"v1"})";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:30;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:50:"\App\Api\Controllers\PaymentController::payVideo()";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"payVideo";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:33:"\App\Api\Requests\PayVideoRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"PayVideoRequest";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:80;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:63:"\App\Api\Controllers\PaymentController::getStripeEphemeralKey()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:24:"Get Stripe Ephemeral Key";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:3:"Get";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:155:"("/get-stripe-ephemeral-key")
* @Parameters({
     @Parameter("api_version", required=true, description="stripe api changelog date, example 2018-05-21")
})";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:11:"Transaction";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:739:"({
    @Request(headers={"Authorization": "Bearer <JWT>"}),
    @Response(200, body={"data": {"key": {"id": "ephkey_1CkSjoADFWrjvdJzots3UHTm","object": "ephemeral_key",
"associated_objects": {{"id": "cus_AsWX5ajtkcsbPB","type": "customer"}},"created": 1530778972,"expires": 1530782572,
    "livemode": false,"secret": "ek_test_YWNjdF8xQVdsZXcmp2ZEp6LFRZbVlNWU1NY1RrQnJkV3RWcmNGZDFyUEZ"}}, "status_code": 200}),
    @Response(401, body={"message": "422 Unprocessable Entity.",
        "status_code": 401}),
    @Response(422, body={"message": "422 Unprocessable Entity", "status_code": 422, "errors":{"api_version":
        {"Api version required!"}}}),
    @Response(500, body={"error": "Server side error message", "status_code": 500})
})";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:8:"Versions";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:8:"({"v1"})";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:30;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:63:"\App\Api\Controllers\PaymentController::getStripeEphemeralKey()";s:36:" phpDocumentor\Reflection\Fqsen name";s:21:"getStripeEphemeralKey";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:23:"\Dingo\Api\Http\Request";s:36:" phpDocumentor\Reflection\Fqsen name";s:7:"Request";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:219;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:61:"\App\Api\Controllers\PaymentController::checkStripeCustomer()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:61:"\App\Api\Controllers\PaymentController::checkStripeCustomer()";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"checkStripeCustomer";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:247;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:53:"\App\Api\Controllers\PaymentController::payAudition()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:53:"\App\Api\Controllers\PaymentController::payAudition()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"payAudition";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:36:"\App\Api\Requests\PayAuditionRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:18:"PayAuditionRequest";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:276;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}s:55:"\App\Api\Controllers\PaymentController::applePayVideo()";O:35:"phpDocumentor\Reflection\Php\Method":9:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:55:"\App\Api\Controllers\PaymentController::applePayVideo()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"applePayVideo";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"request";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:38:"\App\Api\Requests\ApplePayVideoRequest";s:36:" phpDocumentor\Reflection\Fqsen name";s:20:"ApplePayVideoRequest";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:395;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:29;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";