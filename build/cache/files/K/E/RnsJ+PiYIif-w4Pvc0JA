1665722087
waR3U4bTeM%3A1e343ac9998a96e763ba5e98f8da30c3-4acde62773c4beaa26d061b62a8eb8d7
s:7592:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjRhY2RlNjI3NzNjNGJlYWEyNmQwNjFiNjJhOGViOGQ3IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjE6InZpZGVvLWVycm9yLmJsYWRlLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjQ5OiJyZXNvdXJjZXMvdmlld3MtMjUtMDUvdmlkZW8vdmlkZW8tZXJyb3IuYmxhZGUucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo0ODY2OiJAZXh0ZW5kcygnbGF5b3V0cy51cGxvYWR2aWRlbycpCkBzZWN0aW9uKCdjc3MnKQo8bWV0YSBuYW1lPSJjc3JmLXRva2VuIiBjb250ZW50PSJ7eyBjc3JmX3Rva2VuKCkgfX0iIC8+CkBlbmRzZWN0aW9uCkBzZWN0aW9uKCdjb250ZW50JykKICAgIDxzZWN0aW9uIGNsYXNzPSJ2aWRlby1kb3dubG9hZC13cmFwIHZpZGVvLWVycm9yIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICA8aDI+T2ggb2gsIHNvbWV0aGluZyB3ZW50IHdyb25n4oCmPC9oMj4KICAgICAgICAgICAgPGgzPlRyeSB0byB1cGxvYWQgeW91ciB2aWRlbyBhZ2Fpbi48L2gzPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cganVzdGlmeS1jb250ZW50LWNlbnRlciAiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTkiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InlvdXR1YmUtbGluayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhsLTMgY29sLWxnLTQgY29sLW1kLTQgcC0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsZWZ0LWJveCI+PGkgY2xhc3M9ImZhYiBmYS15b3V0dWJlIj48L2k+WW91VHViZSBMaW5rOjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteGwtOSBjb2wtbGctOCBjb2wtbWQtOCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGZvcm0gYWN0aW9uPSJ7e3VybCgndXBsYW9kLXlvdXR1YmUnKX19IiBtZXRob2Q9InBvc3QiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyaWdodC1ib3giPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgY3NyZl9maWVsZCgpIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0ieW91dHViZS1saW5rIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iQ29weSBoZXJlIHRoZSB1cmwg4oCmIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPnt7JGVycm9yfX08L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcmFnLWZpbGUiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wem9uZS1jb250ZW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxmb3JtIGlkPSJteS1hd2Vzb21lLWRyb3B6b25lIiBjbGFzcz0iZHJvcHpvbmUiIGFjdGlvbj0ie3sgdXJsKCd1cGxvYWQnKSB9fSIgbWV0aG9kPSJwb3N0IiBlbmN0eXBlPSBtdWx0aXBhcnQvZm9ybS1kYXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImZpbGUtdXBsb2FkIiBpZD0iZmlsZS1kcmFnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9hc3NldHMvaW1nL3ZpZGVvLWljb24uanBnIiBhbHQ9IiIgY2xhc3M9ImltZy1mbHVpZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5EcmFnIGFuZCBEcm9wIHlvdXIgVmlkZW8gaGVyZTwvaDM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJvciI+T1I8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJicm93c2UtYnRuIj5Ccm93c2U8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxwPjxzcGFuIGNsYXNzPSJlcnJvci10ZXh0Ij5UaGUgbWF4aW11bSB2aWRlbyBzaXplIGlzIDMwMCBtYi4gVmFsaWQgZm9ybWF0cyBhdmksIG1wZWc0LCB3bXYsIG1wNCwgbW92Ljwvc3Bhbj48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNraXAtYm94Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJza2lwIj5TS0lQIEZPUiBOT1c8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9zZWN0aW9uPgpAZW5kZXNjdGlvbgpAc2VjdGlvbignanMnKQogICAgPHNjcmlwdD4KICAgICAgICAvLyBmaWxlIHVwbG9hZAogICAgICAgIHZhciBDU1JGX1RPS0VOID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbWV0YVtuYW1lPSJjc3JmLXRva2VuIl0nKS5nZXRBdHRyaWJ1dGUoImNvbnRlbnQiKTsKICAgICAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHsKICAgICAgICAgICAgJCgnI3lvdXR1YmUtbGluaycpLm9uKCdjaGFuZ2UnLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgJCgnI2NvcHktbGluaycpLnZhbCgkKHRoaXMpLnZhbCgpKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgICAgLy8gZmlsZSB1cGxvYWQKICAgICAgICAkKGZ1bmN0aW9uKCl7CiAgICAgICAgICBEcm9wem9uZS5vcHRpb25zLm15QXdlc29tZURyb3B6b25lID0gewogICAgICAgICAgICBtYXhGaWxlc2l6ZTogMjA5NzE1MjAwLAogICAgICAgICAgICBhZGRSZW1vdmVMaW5rczogdHJ1ZSwKICAgICAgICAgICAgZGljdFJlc3BvbnNlRXJyb3I6ICdTZXJ2ZXIgbm90IENvbmZpZ3VyZWQnLAogICAgICAgICAgICBhY2NlcHRlZEZpbGVzOiAidmlkZW8vKiIsCiAgICAgICAgICAgIGluaXQ6ZnVuY3Rpb24oKXsKICAgICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgICAgICAgICAgLy8gY29uZmlnCiAgICAgICAgICAgICAgc2VsZi5vcHRpb25zLmFkZFJlbW92ZUxpbmtzID0gdHJ1ZTsKICAgICAgICAgICAgICBzZWxmLm9wdGlvbnMuZGljdFJlbW92ZUZpbGUgPSAiRGVsZXRlIjsKICAgICAgICAgICAgICAvL05ldyBmaWxlIGFkZGVkCiAgICAgICAgICAgICAgc2VsZi5vbigiYWRkZWRmaWxlIiwgZnVuY3Rpb24gKGZpbGUpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCduZXcgZmlsZSBhZGRlZCAnLCBmaWxlKTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAvLyBTZW5kIGZpbGUgc3RhcnRzCiAgICAgICAgICAgICAgc2VsZi5vbigic2VuZGluZyIsIGZ1bmN0aW9uIChmaWxlLCB4aHIsIGZvcm1EYXRhKSB7CiAgICAgICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoIl90b2tlbiIsIENTUkZfVE9LRU4pOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3VwbG9hZCBzdGFydGVkJywgZmlsZSk7CiAgICAgICAgICAgICAgICAkKCcubWV0ZXInKS5zaG93KCk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgLy8gRmlsZSB1cGxvYWQgUHJvZ3Jlc3MKICAgICAgICAgICAgICBzZWxmLm9uKCJ0b3RhbHVwbG9hZHByb2dyZXNzIiwgZnVuY3Rpb24gKHByb2dyZXNzKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygicHJvZ3Jlc3MgIiwgcHJvZ3Jlc3MpOwogICAgICAgICAgICAgICAgJCgnLnJvbGxlcicpLndpZHRoKHByb2dyZXNzICsgJyUnKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgc2VsZi5vbigicXVldWVjb21wbGV0ZSIsIGZ1bmN0aW9uIChwcm9ncmVzcykgewogICAgICAgICAgICAgICAgJCgnLm1ldGVyJykuZGVsYXkoOTk5KS5zbGlkZVVwKDk5OSk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgLy8gT24gcmVtb3ZpbmcgZmlsZQogICAgICAgICAgICAgIHNlbGYub24oInJlbW92ZWRmaWxlIiwgZnVuY3Rpb24gKGZpbGUpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGZpbGUpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHNlbGYub24oInN1Y2Nlc3MiLCBmdW5jdGlvbihmaWxlLCByZXNwb25zZVRleHQpIHsKICAgICAgICAgICAgICAgICB2YXIgcmVzcG9uc2UgPSBKU09OLnBhcnNlKGZpbGUueGhyLnJlc3BvbnNlVGV4dCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5tZXNzYWdlKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlVGV4dCk7CiAgICAgICAgICAgICAgICAvLyAkKCIjcmVzcG9uc2UiKS5odG1sKCI8aDI+IityZXNwb25zZS5tZXNzYWdlKyI8L2gyPiIpOwogICAgICAgICAgICAgICAgaWYocmVzcG9uc2Uuc3RhdHVzPT00MDApewogICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gcmVzcG9uc2UucmVkaXJlY3Q7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZihyZXNwb25zZS5zdGF0dXM9PTIwMCl7CiAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSByZXNwb25zZS5yZWRpcmVjdDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9OwogICAgICAgIH0pOwo8L3NjcmlwdD4KQGVuZHNlY3Rpb24iO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";