1665722086
waR3U4bTeM%3A90978c2b0bbe8dd58f02097b961bc182-9801d11e8c7e5772806d36749a9464d9
s:50700:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6Ijk4MDFkMTFlOGM3ZTU3NzI4MDZkMzY3NDlhOTQ2NGQ5IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjM6IkNoYWxsZW5nZUNvbnRyb2xsZXIucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NDM6ImFwcC9BcGkvQ29udHJvbGxlcnMvQ2hhbGxlbmdlQ29udHJvbGxlci5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjIxOTU4OiI8P3BocAoKbmFtZXNwYWNlIEFwcFxBcGlcQ29udHJvbGxlcnM7Cgp1c2UgQXBwXEFwaVxUcmFuc2Zvcm1lcnNcQ2hhbGxlbmdlVHJhbnNmb3JtZXI7CnVzZSBBcHBcQXBpXFRyYW5zZm9ybWVyc1xDUGFydGljaXBhbnRUcmFuc2Zvcm1lcjsKdXNlIEFwcFxBcGlcVHJhbnNmb3JtZXJzXENoYWxsZW5nZURldGFpbFRyYW5zZm9ybWVyOwp1c2UgQXBwXEFwaVxUcmFuc2Zvcm1lcnNcQWZ0ZXJDUGFydGljaXBhdGVUcmFuc2Zvcm1lcjsKdXNlIEFwcFxBcGlcUmVxdWVzdHNcUGF5Q2hhbGxlbmdlUmVxdWVzdDsKdXNlIEFwcFxBcGlcUmVxdWVzdHNcQXBwbGVQYXlDaGFsbGVuZ2VSZXF1ZXN0Owp1c2UgRGluZ29cQXBpXEh0dHBcUmVxdWVzdDsKdXNlIEFwcFxNb2RlbHNcVXNlcjsKdXNlIEFwcFxNb2RlbHNcTm90aWZpY2F0aW9uOwovL3VzZSBZb3V0dWJlOwp1c2UgU3RvcmFnZTsKdXNlIEFwcFxNb2RlbHNcTmV3UGF5bWVudGxpc3Q7CnVzZSBBcHBcTW9kZWxzXENoYWxsZW5nZXM7CnVzZSBBcHBcTW9kZWxzXENoYWxsZW5nZXNQYXJ0aWNpcGFudDsKdXNlIElsbHVtaW5hdGVcU3VwcG9ydFxGYWNhZGVzXERCOwp1c2UgQXBwXEFwaVxSZXF1ZXN0c1xDaGFsbGVuZ2VVcGxvYWQ7CnVzZSBTdHJpcGVcU3RyaXBlOwp1c2UgQXBwXEpvYnNcU2VuZFJlbWluZGVyRW1haWw7CnVzZSBTdHJpcGVcQ2hhcmdlOwp1c2UgQXBwXEh0dHBcSGVscGVyc1xNYWlsZXI7CnVzZSBEaW5nb1xBcGlcRXhjZXB0aW9uXFN0b3JlUmVzb3VyY2VGYWlsZWRFeGNlcHRpb247CnVzZSBTdHJpcGVcRXBoZW1lcmFsS2V5Owp1c2UgU3RyaXBlXEN1c3RvbWVyOwp1c2UgVGh1bWJuYWlsOwp1c2UgRkZNcGVnXEZGTXBlZzsKdXNlIFlvdVR1YmVcWW91VHViZURvd25sb2FkZXI7CnVzZSBBcHBsZVBheUhlbHBlcjsKLyoqCiAqIEF1ZGl0aW9ucyByZXNvdXJjZSByZXByZXNlbnRhdGlvbi4KICoKICogQFJlc291cmNlKCJBdWRpdGlvbnMiLCB1cmk9Ii9hdWRpdGlvbnMiKQogKi8KY2xhc3MgQ2hhbGxlbmdlQ29udHJvbGxlciBleHRlbmRzIEJhc2VDb250cm9sbGVyCnsKCXB1YmxpYyBmdW5jdGlvbiBpbmRleCgpewoJCSR0b2RheSA9IGRhdGUoJ1ktbS1kJyk7CgkJJGNoYWxsZW5nZXMgPSBDaGFsbGVuZ2VzOjp3aGVyZSgnZGVhZGxpbmUnLCc+PScgLCR0b2RheSktPmdldCgpOwogICAgICAgICRjaGFsbGVuZ2VfdGF4ID0gREI6OnRhYmxlKCd0YXhyYXRlJyktPnNlbGVjdCgndGF4cmF0ZScpLT53aGVyZSgnbmFtZScsJ2NoYWxsZW5nZV90YXgnKS0+Zmlyc3QoKTsKCQkKCQlmb3JlYWNoICgkY2hhbGxlbmdlcyBhcyAmJGNoYWxsZW5nZSl7CgkJCWlmKCRjaGFsbGVuZ2VfdGF4KXsKCQkJCQkkY2hhbGxlbmdlLT5jaGFsbGVuZ2VzX2ZlZV90b3RhbCA9IG51bWJlcl9mb3JtYXQoKCRjaGFsbGVuZ2UtPmNoYWxsZW5nZXNfZmVlICsgKCRjaGFsbGVuZ2UtPmNoYWxsZW5nZXNfZmVlICogKGludCkkY2hhbGxlbmdlX3RheC0+dGF4cmF0ZSAvIDEwMCkpLDIgKTsKCQkJCQkkY2hhbGxlbmdlLT5jaGFsbGVuZ2VzX2ZlZV90YXggPSBudW1iZXJfZm9ybWF0KCgkY2hhbGxlbmdlLT5jaGFsbGVuZ2VzX2ZlZSAqIChpbnQpJGNoYWxsZW5nZV90YXgtPnRheHJhdGUgLyAxMDApLDIgKTsKCQkJCX0KCQkJaWYgKCFlbXB0eSgkY2hhbGxlbmdlKSkgewoJCQkJJGNoYWxsZW5nZS0+cGFydGljaXBhdGVkID0gJHRoaXMtPmNoZWNrVXNlclBhcnRpY2lwYXRpb24oJGNoYWxsZW5nZS0+aWQpOwoJCQkJJGNoYWxsZW5nZS0+cHJvZHVjdF9pZCA9IEFwcGxlUGF5SGVscGVyOjpwcmljZUlEKCRjaGFsbGVuZ2UtPmNoYWxsZW5nZXNfZmVlKTsKCQkJCSRjaGFsbGVuZ2UtPnByb2R1Y3RfcHJpY2UgPSBBcHBsZVBheUhlbHBlcjo6bmV3UHJpY2UoJGNoYWxsZW5nZS0+Y2hhbGxlbmdlc19mZWUpOwoJCQl9CgkJfQoJCQoJCXJldHVybiAkdGhpcy0+cmVzcG9uc2UoKS0+Y29sbGVjdGlvbigkY2hhbGxlbmdlcyxuZXcgQ2hhbGxlbmdlVHJhbnNmb3JtZXIoKSk7Cgl9CgoJcHVibGljIGZ1bmN0aW9uIGNoZWNrVXNlclBhcnRpY2lwYXRpb24oJGNoYWxsZW5nZV9pZCl7CgkJJGNoYWxsZW5nZWxpc3QgPSBDaGFsbGVuZ2VzUGFydGljaXBhbnQ6OndoZXJlKCd1c2VyX2lkJywnPScsJHRoaXMtPmF1dGgtPnVzZXIoKS0+aWQpLT53aGVyZSgncGF5bWVudF9zdGF0dXMnLCc9JywxKS0+d2hlcmUoJ3N0cmlwZV9pZCcsJyE9JyxOVUxMKS0+d2hlcmUoJ2NoYWxsZW5nZV9pZCcsJz0nLCRjaGFsbGVuZ2VfaWQpLT5nZXQoKTsKCQlyZXR1cm4gKGNvdW50KCRjaGFsbGVuZ2VsaXN0KSA+IDApID8gMSA6IDA7Cgl9CgoJcHVibGljIGZ1bmN0aW9uIGNoYWxsZW5nZURldGFpbCgpewoJCSRjaGFsbGVuZ2VfaWQgPSAoaW50KXJlcXVlc3QoKS0+cm91dGUoJ2NoYWxsZW5nZV9pZCcpOwoJCSRjaGFsbGVuZ2UgPSBDaGFsbGVuZ2VzOjpmaW5kKCRjaGFsbGVuZ2VfaWQpOwoJCSRjaGFsbGVuZ2V0ZW1wID0gJiRjaGFsbGVuZ2U7CgkJJGNoYWxsZW5nZV90YXggPSBEQjo6dGFibGUoJ3RheHJhdGUnKS0+c2VsZWN0KCd0YXhyYXRlJyktPndoZXJlKCduYW1lJywnY2hhbGxlbmdlX3RheCcpLT5maXJzdCgpOwogICAgCQoJCWlmICghZW1wdHkoJGNoYWxsZW5nZXRlbXApKSB7CgkJCQkKCQkJJGNoYWxsZW5nZXRlbXAtPnBhcnRpY2lwYXRlZCA9ICR0aGlzLT5jaGVja1VzZXJQYXJ0aWNpcGF0aW9uKCRjaGFsbGVuZ2VfaWQpOwoJCQkkY2hhbGxlbmdldGVtcC0+cHJvZHVjdF9pZCA9IEFwcGxlUGF5SGVscGVyOjpwcmljZUlEKCRjaGFsbGVuZ2V0ZW1wLT5jaGFsbGVuZ2VzX2ZlZSk7CgkJCQkkY2hhbGxlbmdldGVtcC0+cHJvZHVjdF9wcmljZSA9IEFwcGxlUGF5SGVscGVyOjpuZXdQcmljZSgkY2hhbGxlbmdldGVtcC0+Y2hhbGxlbmdlc19mZWUpOwoJCQlpZigkY2hhbGxlbmdlX3RheCl7CgkJCQkkY2hhbGxlbmdldGVtcC0+Y2hhbGxlbmdlc19mZWVfdG90YWwgPSBudW1iZXJfZm9ybWF0KCgkY2hhbGxlbmdldGVtcC0+Y2hhbGxlbmdlc19mZWUgKyAoJGNoYWxsZW5nZXRlbXAtPmNoYWxsZW5nZXNfZmVlICogKGludCkkY2hhbGxlbmdlX3RheC0+dGF4cmF0ZSAvIDEwMCkpLDIgKTsKCQkJCSRjaGFsbGVuZ2V0ZW1wLT5jaGFsbGVuZ2VzX2ZlZV90YXggPSBudW1iZXJfZm9ybWF0KCgkY2hhbGxlbmdldGVtcC0+Y2hhbGxlbmdlc19mZWUgKiAoaW50KSRjaGFsbGVuZ2VfdGF4LT50YXhyYXRlIC8gMTAwKSwyICk7CgkJCX0KCQkJCQoJCX0KCQlyZXR1cm4gJHRoaXMtPnJlc3BvbnNlKCktPml0ZW0oJGNoYWxsZW5nZSxuZXcgQ2hhbGxlbmdlRGV0YWlsVHJhbnNmb3JtZXIoKSk7Cgl9CgoJcHVibGljIGZ1bmN0aW9uIHN0b3JlKENoYWxsZW5nZVVwbG9hZCAkcmVxdWVzdCl7CgkJJHZpZGVvX3R5cGUgPSAkcmVxdWVzdC0+aW5wdXQoICJ2aWRlb190eXBlIiApOwoJCWlmKCR2aWRlb190eXBlID09ICdmaWxlJyl7CgkJCWlmKCAhJHJlcXVlc3QtPmZpbGUoICJ2aWRlb19maWxlIiApKQoJCQkJcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oWydzdGF0dXMnPT40MjIsJ21lc3NhZ2UnPT4nVmFsaWRhdGlvbiBGYWlsZWQsUGxlYXNlIHVwbG9hZCB2aWRlbyBmaWxlJ10pOwoKCQkJLy8gJGZpbGUgPSAkcmVxdWVzdC0+ZmlsZSggInZpZGVvX2ZpbGUiICk7CgkJCQoJICAvLyAgICAgICAkZmlsZU5hbWUgPSBzdHJfcmFuZG9tKDMpIC4gdW5pcWlkKCkgLiAiLiIgLiAkZmlsZS0+Z2V0Q2xpZW50T3JpZ2luYWxFeHRlbnNpb24oKTsKCSAgLy8gICAgICAgJGZpbGUtPm1vdmUocHVibGljX3BhdGgoKSAuIGNvbmZpZygndmlkZW8uY2hhbGxlbmdlX3ZpZGVvX3BhdGgnKSwgJGZpbGVOYW1lKTsKCgkgIC8vICAgICAgICR2aWRlb191cmwgPSAkZmlsZU5hbWU7CgkJCSR0aHVtYm5haWxfaW1hZ2VfbmFtZSA9ICIiOwoJICAgICAgICAkZmlsZSA9ICRyZXF1ZXN0LT5maWxlKCAidmlkZW9fZmlsZSIgKTsKCQkJCgkgICAgICAgICRleHRlbnNpb24gPSAkcmVxdWVzdC0+ZmlsZSgndmlkZW9fZmlsZScpLT5nZXRDbGllbnRPcmlnaW5hbEV4dGVuc2lvbigpOwogICAgICAgICAgICAkdmFsaWRleHRlbnNpb25zID0gYXJyYXkoIm1wNCIsIm9neCIsIm9nYSIsIm9ndiIsIm9nZyIsIndlYm0iLCJtNHYiKTsKICAgICAgICAgICAgaWYoaW5fYXJyYXkoc3RydG9sb3dlcigkZXh0ZW5zaW9uKSwgJHZhbGlkZXh0ZW5zaW9ucykpewogICAgICAgICAgICAgICAgJGZpbGUgPSAkcmVxdWVzdC0+ZmlsZSgndmlkZW9fZmlsZScpOwogICAgICAgICAgICAgICAgJHRpbWVzdGFtcCA9ICBzdHJfcmFuZG9tKDUpIC4gdW5pcWlkKCk7CiAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgLy8kZmlsZW5hbWUgPSAkZmlsZS0+Z2V0Q2xpZW50T3JpZ2luYWxOYW1lKCk7CiAgICAgICAgICAgICAgICAkcGF0aCA9IHB1YmxpY19wYXRoKCkuJy91cGxvYWRzL2NoYWxsZW5nZSc7CiAgICAgICAgICAgICAgICAkZmlsZU5hbWUgPSBzdHJfcmFuZG9tKDMpIC4gdW5pcWlkKCkgLiAiLiIgLiAkZmlsZS0+Z2V0Q2xpZW50T3JpZ2luYWxFeHRlbnNpb24oKTsKCSAgICAgICAgCSR1cGxvYWRfc3RhdHVzID0gJGZpbGUtPm1vdmUocHVibGljX3BhdGgoKSAuIGNvbmZpZygndmlkZW8uY2hhbGxlbmdlX3ZpZGVvX3BhdGgnKSwgJGZpbGVOYW1lKTsKCSAgICAgICAgCSRmaWxlbmFtZSA9ICRmaWxlTmFtZTsKCSAgICAgICAgCSR2aWRlb191cmwgPSAkZmlsZU5hbWU7CiAgICAgICAgICAgICAgICAvLyBHZW5lcmF0ZSBUaHVtYm5haWwgaW1hZ2UgZm9yIHZpZGVvCiAgICAgICAgICAgICAgICAkZXh0ZW5zaW9uX3R5cGUgICA9ICRmaWxlLT5nZXRDbGllbnRNaW1lVHlwZSgpOwogICAgICAgICAgICAgICAgLy8gZ2V0IGZpbGUgZXh0ZW5zaW9uCiAgICAgICAgICAgICAgICAkZXh0ZW5zaW9uICAgICAgICA9ICRmaWxlLT5nZXRDbGllbnRPcmlnaW5hbEV4dGVuc2lvbigpOwoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICRmYl91c2VyX2lkID0gJHRoaXMtPmF1dGgtPnVzZXIoKS0+aWQ7CiAgICAgICAgICAgICAgICBpZigkdXBsb2FkX3N0YXR1cykKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgLy8gZmlsZSB0eXBlIGlzIHZpZGVvCiAgICAgICAgICAgICAgICAgIC8vIHNldCBzdG9yYWdlIHBhdGggdG8gc3RvcmUgdGhlIGZpbGUgKGltYWdlIGdlbmVyYXRlZCBmb3IgYSBnaXZlbiB2aWRlbykKICAgICAgICAgICAgICAgICAgJHRodW1ibmFpbF9wYXRoICAgPSBwdWJsaWNfcGF0aCgpLicvdXNlcl92aWRlb3MvdGh1bWJuYWlscyc7CgogICAgICAgICAgICAgICAgICAkdmlkZW9fcGF0aCAgICAgICA9ICRwYXRoLicvJy4kZmlsZW5hbWU7CgogICAgICAgICAgICAgICAgICAvLyBzZXQgdGh1bWJuYWlsIGltYWdlIG5hbWUKICAgICAgICAgICAgICAgICAgJHRodW1ibmFpbF9pbWFnZSAgPSAgICRmYl91c2VyX2lkLiIuIi4kdGltZXN0YW1wLiIuanBnIjsKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIC8vIGdldCB2aWRlbyBsZW5ndGggYW5kIHByb2Nlc3MgaXQKICAgICAgICAgICAgICAgICAgLy8gYXNzaWduIHRoZSB2YWx1ZSB0byB0aW1lX3RvX2ltYWdlICh3aGljaCB3aWxsIGdldCBzY3JlZW5zaG90IG9mIHZpZGVvIGF0IHRoYXQgc3BlY2lmaWVkIHNlY29uZHMpCiAgICAgICAgICAgICAgICAgICR0aW1lX3RvX2ltYWdlICAgID0gNTsKCiAgICAgICAgICAgICAgICAgICR0aHVtYm5haWxfaW1hZ2VfbmFtZSA9Jyc7CgogICAgICAgICAgICAgICAgICAkdGh1bWJuYWlsX3N0YXR1cyA9IFRodW1ibmFpbDo6Z2V0VGh1bWJuYWlsKCR2aWRlb19wYXRoLCR0aHVtYm5haWxfcGF0aCwkdGh1bWJuYWlsX2ltYWdlLCR0aW1lX3RvX2ltYWdlKTsKICAgICAgICAgICAgICAgICAgaWYoJHRodW1ibmFpbF9zdGF0dXMpCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAkdGh1bWJuYWlsX2ltYWdlX25hbWUgPSR0aHVtYm5haWxfaW1hZ2U7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJHRodW1ibmFpbF9pbWFnZV9uYW1lID0nJzsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgCXJldHVybiByZXNwb25zZSgpLT5qc29uKFsnc3RhdHVzJz0+NDIyLCdtZXNzYWdlJz0+J1ZpZGVvIHR5cGUgaXMgbm90IGFsbG93ZWQuJ10pOwogICAgICAgICAgICB9CgoJCX1lbHNlewoJCQkkdmlkZW9fdXJsID0gJHJlcXVlc3QtPmlucHV0KCAieW91dHViZV9saW5rIiApOwoJCQkkdXJsID0gJHJlcXVlc3QtPmlucHV0KCAieW91dHViZV9saW5rIiApOwogICAgICAgICAgICAvLyAkcGFydHMgPSBwYXJzZV91cmwoJHVybCk7CiAgICAgICAgICAgIAogICAgICAgICAgICAkcnggPSAnfgogICAgICAgICAgICAgIF4oPzpodHRwcz86Ly8pPyAgICAgICAgICAgICAgICAgICAgICAgICAgICMgT3B0aW9uYWwgcHJvdG9jb2wKICAgICAgICAgICAgICAoPzp3d3dbLl0pPyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgT3B0aW9uYWwgc3ViLWRvbWFpbgogICAgICAgICAgICAgICg/OnlvdXR1YmVbLl1jb20vd2F0Y2hbP112PXx5b3V0dVsuXWJlLykgIyBNYW5kYXRvcnkgZG9tYWluIG5hbWUgKHcvIHF1ZXJ5IHN0cmluZyBpbiAuY29tKQogICAgICAgICAgICAgIChbXiZdezExfSkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIyBWaWRlbyBpZCBvZiAxMSBjaGFyYWN0ZXJzIGFzIGNhcHR1cmUgZ3JvdXAgMQogICAgICAgICAgICAgICAgfngnOwogICAgICAgICAgICAkaGFzX21hdGNoID0gcHJlZ19tYXRjaCgkcngsICR1cmwsICRtYXRjaGVzKTsKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIGlmKCFlbXB0eSgkbWF0Y2hlcykpewogICAgICAgICAgICAgICAgJHl0ID0gbmV3IFlvdVR1YmVEb3dubG9hZGVyKCk7CiAgICAgICAgICAgICAgICAkbGlua3MgPSAkeXQtPmdldERvd25sb2FkTGlua3MoJHVybCk7CiAgICAgICAgICAgICAgICAkdmlkZW9faWQgPSAkbWF0Y2hlc1sxXTsKICAgICAgICAgICAgICAgICRmaWxlbmFtZSA9ICR2aWRlb19pZC4nXycudW5pcWlkKCkuIi5tcDQiOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAkcGF0aCA9IHB1YmxpY19wYXRoKCkuJy91cGxvYWRzL2NoYWxsZW5nZS8nOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBmaWxlX3B1dF9jb250ZW50cygkcGF0aC4kZmlsZW5hbWUsIGZvcGVuKCRsaW5rc1swXVsndXJsJ10sICdyJykpOwogICAgICAgICAgICAgICAgJGZiX3VzZXJfaWQgPSAkdGhpcy0+YXV0aC0+dXNlcigpLT5pZDsKICAgICAgICAgICAgICAgICR0aHVtYm5haWxfcGF0aCAgID0gcHVibGljX3BhdGgoKS4nL3VzZXJfdmlkZW9zL3RodW1ibmFpbHMnOwogICAgICAgICAgICAgICAgJHZpZGVvX3BhdGggICAgICAgPSAkcGF0aC4nLycuJGZpbGVuYW1lOwogICAgICAgICAgICAgICAgJHRodW1ibmFpbF9pbWFnZSAgPSAgICRmYl91c2VyX2lkLiIuIi51bmlxaWQoKS4iLmpwZyI7CiAgICAgICAgICAgICAgICAkdGltZV90b19pbWFnZSAgICA9IDU7CiAgICAgICAgICAgICAgICAkdGh1bWJuYWlsX2ltYWdlX25hbWUgPScnOwogICAgICAgICAgICAgICAgJHRodW1ibmFpbF9zdGF0dXMgPSBUaHVtYm5haWw6OmdldFRodW1ibmFpbCgkdmlkZW9fcGF0aCwkdGh1bWJuYWlsX3BhdGgsJHRodW1ibmFpbF9pbWFnZSwkdGltZV90b19pbWFnZSk7CiAgICAgICAgICAgICAgICBpZigkdGh1bWJuYWlsX3N0YXR1cykKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAkdGh1bWJuYWlsX2ltYWdlX25hbWUgPSR0aHVtYm5haWxfaW1hZ2U7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgJHRodW1ibmFpbF9pbWFnZV9uYW1lID0nJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oWydzdGF0dXMnPT40MjIsJ21lc3NhZ2UnPT4nVmlkZW8gVXJsIGlzIG1pc3Npbmcgb3Igbm90IGNvcnJlY3QhJ10pOwogICAgICAgICAgICB9CiAgICAgICAgICAgICR2aWRlb191cmwgPSAkZmlsZW5hbWU7CgkJfQoJCWlmKGVtcHR5KCR2aWRlb191cmwpKXsKCQkJcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oWydzdGF0dXMnPT40MjIsJ21lc3NhZ2UnPT4nVmlkZW8gVXJsIGlzIG1pc3NpbmcuJ10pOwoJCX0KCQlpZigkdmlkZW9fdHlwZSAhPSJmaWxlIiAmJiAkdmlkZW9fdHlwZSAhPSJ5b3V0dWJlIil7CgkJCXJldHVybiByZXNwb25zZSgpLT5qc29uKFsnc3RhdHVzJz0+NDIyLCdtZXNzYWdlJz0+J1ZpZGVvIHR5cGUgbXVzdCBiZSAiZmlsZSBvciB5b3V0dWJlIiEnXSk7CgkJfQoJCSR2aWRlb190eXBlID0gJ2ZpbGUnOwoJCSRjaGFsbGVuZ2VfaWQgPSAkcmVxdWVzdC0+aW5wdXQoICJjaGFsbGVuZ2VfaWQiICk7CgkJLy9Gb3IgcmVzdW1lCgkJLy8kcmVzdW1lX2ZpbGUgPSAkcmVxdWVzdC0+ZmlsZSggInJlc3VtZSIgKTsKCQkkY2hhbGxlbmdlID0gQ2hhbGxlbmdlczo6d2hlcmUoJ2lkJywnPScsJGNoYWxsZW5nZV9pZCktPmZpcnN0KCk7CgkJaWYoZW1wdHkoJGNoYWxsZW5nZSkpewoJCQlyZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbJ3N0YXR1cyc9PjQyMiwnbWVzc2FnZSc9PidDaGFsbGVuZ2UgaWQgaXMgbm90IHZhbGlkJ10pOwoJCX0KICAgICAgICAvLyRyZXN1bWVfZmlsZV9uYW1lID0gc3RyX3JhbmRvbSgzKSAuIHVuaXFpZCgpIC4gIi4iIC4gJHJlc3VtZV9maWxlLT5nZXRDbGllbnRPcmlnaW5hbEV4dGVuc2lvbigpOwogICAgICAgIC8vJHJlc3VtZV9maWxlLT5tb3ZlKHB1YmxpY19wYXRoKCkgLiBjb25maWcoJ3ZpZGVvLmNoYWxsZW5nZV92aWRlb19wYXRoJyksICRyZXN1bWVfZmlsZV9uYW1lKTsKCiAgICAgICAgJHBhcnRpY2lwYW50X2lkID0gREI6OnRhYmxlKCdjaGFsbGVuZ2VfcGFydGljaXBhbnQnKS0+aW5zZXJ0R2V0SWQoCgkJCSAgICBbJ2lkJyA9PiAnJywnY2hhbGxlbmdlX2lkJz0+JGNoYWxsZW5nZV9pZCwgJ3VzZXJfaWQnID0+ICR0aGlzLT5hdXRoLT51c2VyKCktPmlkLCdjb2FjaF9pZCc9PiRjaGFsbGVuZ2UtPmNvYWNoX2lkLCdwYXltZW50X3N0YXR1cyc9PjAsJ3ZpZGVvX2xpbmsnPT4kdmlkZW9fdXJsICwndmlkZW9fdHlwZSc9PiR2aWRlb190eXBlLCdyZXN1bWUnPT4nJywndGh1bWJuYWlsX3VybCc9PiR0aHVtYm5haWxfaW1hZ2VfbmFtZSwnY3JlYXRlZF9hdCc9Pm15c3FsX2RhdGUoKSwndXBkYXRlZF9hdCc9Pm15c3FsX2RhdGUoKV0pOwogICAgICAgIGlmKCRwYXJ0aWNpcGFudF9pZCl7CiAgICAgICAgCSRwYXJ0aWNpcGFudCA9IENoYWxsZW5nZXNQYXJ0aWNpcGFudDo6d2l0aCgnY2hhbGxlbmdlcycpLT53aGVyZSgndXNlcl9pZCcsJz0nLCR0aGlzLT5hdXRoLT51c2VyKCktPmlkKS0+d2hlcmUoJ2lkJywnPScsJHBhcnRpY2lwYW50X2lkKS0+Zmlyc3QoKTsKICAgICAgICAJJHRlbXBfcGFydGljaXBhbnQgPSAmJHBhcnRpY2lwYW50OwogICAgICAgIAkKCSAgICAgICAgJHRlbXBfcGFydGljaXBhbnQtPmNvbXBfcHJvZHVjdF9pZCA9IEFwcGxlUGF5SGVscGVyOjpwcmljZUlEKCRwYXJ0aWNpcGFudC0+Y2hhbGxlbmdlcy0+Y2hhbGxlbmdlc19mZWUpOwoJICAgICAgICAkdGVtcF9wYXJ0aWNpcGFudC0+Y29tcF9wcmljZSA9IEFwcGxlUGF5SGVscGVyOjpuZXdQcmljZSgkcGFydGljaXBhbnQtPmNoYWxsZW5nZXMtPmNoYWxsZW5nZXNfZmVlKTsKICAgICAgICAJcmV0dXJuICR0aGlzLT5yZXNwb25zZSgpLT5pdGVtKCRwYXJ0aWNpcGFudCxuZXcgQWZ0ZXJDUGFydGljaXBhdGVUcmFuc2Zvcm1lcigpKTsKICAgICAgICB9ZWxzZXsKICAgICAgICAJcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oWydzdGF0dXMnPT40MDAsJ21lc3NhZ2UnPT4nU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2hpbGUgY3JlYXRpbmcgdXNlciBwYXJ0aWNpcGF0aW9uISddKTsKICAgICAgICB9Cgl9CgoJcHVibGljIGZ1bmN0aW9uIHJldmlldyhDaGFsbGVuZ2VzUGFydGljaXBhbnQgJGNoYWxsZW5nZWxpc3QpewoJCQoJCSRjaGFsbGVuZ2VfaWQgPSAoaW50KXJlcXVlc3QoKS0+cm91dGUoJ2NoYWxsZW5nZV9pZCcpOwoJCSRjaGFsbGVuZ2VsaXN0ID0gQ2hhbGxlbmdlc1BhcnRpY2lwYW50Ojp3aXRoKCdjaGFsbGVuZ2VzJywncmV2aWV3JyktPndoZXJlKCd1c2VyX2lkJywnPScsJHRoaXMtPmF1dGgtPnVzZXIoKS0+aWQpLT53aGVyZSgncGF5bWVudF9zdGF0dXMnLCc9JywxKS0+d2hlcmUoJ3N0cmlwZV9pZCcsJyE9JyxOVUxMKS0+d2hlcmUoJ2NoYWxsZW5nZV9pZCcsJz0nLCRjaGFsbGVuZ2VfaWQpLT5maXJzdCgpOwoJCWlmKCRjaGFsbGVuZ2VsaXN0ID09ICIiIHx8ICRjaGFsbGVuZ2VsaXN0LT5yZXZpZXcgPT0iIil7CgkJCXJldHVybiAkdGhpcy0+cmVzcG9uc2UtPmFycmF5KFsKICAgICAgICAgICAgICAgICdtZXNzYWdlJyA9PiAiTm8gcmV2aWV3IGZvdW5kLiBQbGVhc2Ugd2FpdCB3ZSBhcmUgcmV2aWV3aW5nLiIsCiAgICAgICAgICAgICAgICAnc3RhdHVzX2NvZGUnID0+IDIwMCwKICAgICAgICAgICAgXSktPnNldFN0YXR1c0NvZGUoMjAwKTsKCQl9CgkJJHRlbXAgPSBEQjo6dGFibGUoJ3VzZXJfcGVyZm9ybWFuY2VfbGV2ZWxzIGFzIHVwbCcpCiAgICAgICAgICAgIC0+bGVmdEpvaW4oJ3BlcmZvcm1hbmNlX2xldmVscyBhcyBwbCcsICd1cGwucGVyZm9ybWFuY2VfbGV2ZWxfaWQnLCAnPScsICdwbC5pZCcpCiAgICAgICAgICAgIC0+d2hlcmUoJ3VwbC51c2VyX2lkJywnPScsJHRoaXMtPmF1dGgtPnVzZXIoKS0+aWQpCiAgICAgICAgICAgIC0+c2VsZWN0KCdwbC5uYW1lJykKICAgICAgICAgICAgLT5nZXQoKTsKICAgICAgICAkbGV2ZWxzID0gYXJyYXkoKTsKICAgICAgICAvLyBmb3JlYWNoICgkdGVtcCBhcyAka2V5ID0+ICR2YWx1ZSkgewogICAgICAgIC8vIAkkbGV2ZWxzW10gPSAkdmFsdWUtPm5hbWU7CiAgICAgICAgLy8gfQogICAgICAgIGlmKCRjaGFsbGVuZ2VsaXN0LT5yZXZpZXctPmxldmVsX3BsYWNlbWVudCA9PSAzKXsKICAgICAgICAJJGxldmVsc1tdID0gJ0FkdmFuY2VkJzsKICAgICAgICB9ZWxzZWlmKCRjaGFsbGVuZ2VsaXN0LT5yZXZpZXctPmxldmVsX3BsYWNlbWVudCA9PSAyKXsKICAgICAgICAJJGxldmVsc1tdID0gJ0ludGVybWVkaWF0ZSc7CiAgICAgICAgfWVsc2V7CiAgICAgICAgCSRsZXZlbHNbXSA9ICdCZWdpbm5lcic7CiAgICAgICAgfQogICAgICAgIAogICAgICAgICR0ZW1wMiA9ICYkY2hhbGxlbmdlbGlzdDsKICAgICAgICAkdGVtcDItPnBlcmZvcm1hbmNlX2xldmVscyA9ICRsZXZlbHM7CgkJcmV0dXJuICR0aGlzLT5yZXNwb25zZSgpLT5pdGVtKCRjaGFsbGVuZ2VsaXN0LG5ldyBDUGFydGljaXBhbnRUcmFuc2Zvcm1lcigpKTsKCX0KCglwdWJsaWMgZnVuY3Rpb24gcGF5Q2hhbGxlbmdlKFBheUNoYWxsZW5nZVJlcXVlc3QgJHJlcXVlc3QpewoJICAgICAgICBTdHJpcGU6OnNldEFwaUtleShjb25maWcoJ3NlcnZpY2VzLnN0cmlwZS5zZWNyZXQnKSk7IC8vYXV0aAoJICAgICAgICAkcGFydGljaXBhbnRkZXRhaWwgPSBDaGFsbGVuZ2VzUGFydGljaXBhbnQ6OnNlbGVjdCgnaWQnLCdjaGFsbGVuZ2VfaWQnLCd1c2VyX2lkJywncGF5bWVudF9zdGF0dXMnLCdjb2FjaF9pZCcsJ3N0cmlwZV9pZCcpLT53aGVyZSgnaWQnLCc9JywoaW50KSRyZXF1ZXN0LT5wYXJ0aWNpcGFudF9pZCktPmZpcnN0KCk7IAoJICAgICAgICAkY2hhbGxlbmdlID0gQ2hhbGxlbmdlczo6d2hlcmUoJ2lkJywnPScsJHBhcnRpY2lwYW50ZGV0YWlsLT5jaGFsbGVuZ2VfaWQpLT5maXJzdCgpOwoJICAgICAgICBpZigkY2hhbGxlbmdlID09ICcnKXsKCSAgICAgICAgCXJldHVybiByZXNwb25zZSgpLT5qc29uKFsibWVzc2FnZSIgPT4gIkNoYWxsZW5nZSBpZCBpbiBub3QgZm91bmQiLCAnc3RhdHVzX2NvZGUnID0+IDQyMl0pOwoJICAgICAgICB9CgkgICAgICAgICRjb2FjaCA9IFVzZXI6OnNlbGVjdCgnZmlyc3RfbmFtZScsICdlbWFpbCcpLT53aGVyZSgnaWQnLCAkcGFydGljaXBhbnRkZXRhaWwtPmNvYWNoX2lkKS0+Zmlyc3QoKTsKCSAgICAgICAgaWYoJGNvYWNoID09ICcnKXsKCSAgICAgICAgCXJldHVybiByZXNwb25zZSgpLT5qc29uKFsibWVzc2FnZSIgPT4gIkNvYWNoIGlkIG5vdCBmb3VuZCIsICdzdGF0dXNfY29kZScgPT4gNDIyXSk7CgkgICAgICAgIH0KCSAgICAgICAgJGNoYWxsZW5nZV90YXggPSBEQjo6dGFibGUoJ3RheHJhdGUnKS0+c2VsZWN0KCd0YXhyYXRlJyktPndoZXJlKCduYW1lJywnY2hhbGxlbmdlX3RheCcpLT5maXJzdCgpOwogICAgICAgIAkkY2hhbGxlbmdlX2ZlZSA9ICRjaGFsbGVuZ2UtPmNoYWxsZW5nZXNfZmVlOwogICAgICAgIAlpZigkY2hhbGxlbmdlX3RheCl7CgkJCQkkY2hhbGxlbmdlX2ZlZSA9IG51bWJlcl9mb3JtYXQoKCRjaGFsbGVuZ2VfZmVlICsgKCRjaGFsbGVuZ2VfZmVlICogKGludCkkY2hhbGxlbmdlX3RheC0+dGF4cmF0ZSAvIDEwMCkpLDIgKTsKCQkJfQoJICAgICAgICAkY2hhcmdlX2FycmF5ID0gWwoJICAgICAgICAgICAgJ2N1cnJlbmN5JyA9PiAnVVNEJywKCSAgICAgICAgICAgICdhbW91bnQnID0+ICRjaGFsbGVuZ2VfZmVlKjEwMCwKCSAgICAgICAgICAgICdkZXNjcmlwdGlvbicgPT4gIkNoYXJnZSBtYWluIGJhbGFuY2UsIHBhaWQgY2hhbGxlbmdlIHBhcnRpY2lwYW50ICIgLiAkcGFydGljaXBhbnRkZXRhaWwtPmlkLAoJICAgICAgICBdOwoJICAgICAgICBpZigkcmVxdWVzdC0+c291cmNlKSAkY2hhcmdlX2FycmF5Wydzb3VyY2UnXSA9ICRyZXF1ZXN0LT5zb3VyY2U7CgkgICAgICAgIGlmKCRyZXF1ZXN0LT5uZWVkX2N1c3RvbWVyX2lkKXsKCSAgICAgICAgICAgIGlmKGF1dGgoKS0+dXNlcigpLT5zdHJpcGVfY3VzdG9tZXJfaWQpewoJICAgICAgICAgICAgICAgICRzdHJpcGVfY3VzdG9tZXJfaWQgPSBzZWxmOjpjaGVja1N0cmlwZUN1c3RvbWVyKCk7CgkgICAgICAgICAgICAgICAgJGNoYXJnZV9hcnJheVsnY3VzdG9tZXInXSA9ICRzdHJpcGVfY3VzdG9tZXJfaWQ7CgkgICAgICAgICAgICB9ZWxzZXsKCSAgICAgICAgICAgICAgICAkc3RyaXBlX2N1c3RvbWVyID0gQ3VzdG9tZXI6OmNyZWF0ZShbCgkgICAgICAgICAgICAgICAgICAgICdlbWFpbCcgPT4gYXV0aCgpLT51c2VyKCktPmVtYWlsLAoJICAgICAgICAgICAgICAgICAgICAnZGVzY3JpcHRpb24nID0+ICdVc2VyIGZvciBzdHJpcGUgZXBoZW1lcmFsIGtleScsCgkgICAgICAgICAgICAgICAgXSk7CgkgICAgICAgICAgICAgICAgJGNoYXJnZV9hcnJheVsnY3VzdG9tZXInXSA9ICRzdHJpcGVfY3VzdG9tZXItPmlkOwoJICAgICAgICAgICAgICAgIFVzZXI6OndoZXJlSWQoYXV0aCgpLT51c2VyKCktPmlkKS0+dXBkYXRlKFsnc3RyaXBlX2N1c3RvbWVyX2lkJyA9PiAkc3RyaXBlX2N1c3RvbWVyLT5pZF0pOwoJICAgICAgICAgICAgfQoJICAgICAgICB9ZWxzZXsKCSAgICAgICAgICAgIGlmKCRyZXF1ZXN0LT5jdXN0b21lcikgJGNoYXJnZV9hcnJheVsnY3VzdG9tZXInXSA9ICRyZXF1ZXN0LT5jdXN0b21lcjsKCSAgICAgICAgfQoJICAgICAgICAvL3RyeSBjaGFyZ2UKCSAgICAgICAgCgkgICAgICAgIHRyeSB7CgkgICAgICAgICAgICAkY2hhcmdlID0gQ2hhcmdlOjpjcmVhdGUoJGNoYXJnZV9hcnJheSk7CgkgICAgICAgIH0gY2F0Y2ggKFxFeGNlcHRpb24gJGUpIHsKCSAgICAgICAgICAgIHJldHVybiByZXNwb25zZSgpLT5qc29uKFsibWVzc2FnZSIgPT4gIkVycm9yIHBheSBleGNlcHRpb24iLCAnc3RhdHVzX2NvZGUnID0+IDQyMiwncmVzcG9uc2UnPT4kZV0pOwoJICAgICAgICB9CgoJICAgICAgICBpZiAoJGNoYXJnZVsnc3RhdHVzJ10gPT0gJ3N1Y2NlZWRlZCcpIHsgLy8gc3VjY2VzcwoJICAgICAgICAgICAgLy9jcmVhdGUgcGF5bWVudCBpbiBkYXRhYmFzZQoJICAgICAgICAgICAgJG5ld19wYXkgPSBuZXcgTmV3UGF5bWVudGxpc3QoKTsKCSAgICAgICAgICAgICRuZXdfcGF5LT51c2VyX2lkID0gJHBhcnRpY2lwYW50ZGV0YWlsLT51c2VyX2lkOwoJICAgICAgICAgICAgJG5ld19wYXktPnBhcnRpY2lwYW50X2lkID0gJHBhcnRpY2lwYW50ZGV0YWlsLT5pZDsKCSAgICAgICAgICAgICRuZXdfcGF5LT50eXBlID0gJ2NoYWxsZW5nZSc7CgkgICAgICAgICAgICAkbmV3X3BheS0+YW1vdW50ID0gKGZsb2F0KSRjaGFyZ2VbJ2Ftb3VudCddOwoJICAgICAgICAgICAgJG5ld19wYXktPnN0cmlwZV9pZCA9IChzdHJpbmcpJGNoYXJnZVsnaWQnXTsKCSAgICAgICAgICAgICRuZXdfcGF5LT5zYXZlKCk7CgoJICAgICAgICAgICAgLy9jaGFuZ2UgdmlkZW8gc3RhdHVzCgkgICAgICAgICAgICAkcGFydGljaXBhbnRkZXRhaWwtPnBheW1lbnRfc3RhdHVzID0gMTsKCSAgICAgICAgICAgICRwYXJ0aWNpcGFudGRldGFpbC0+c3RyaXBlX2lkID0gKHN0cmluZykkY2hhcmdlWydpZCddOwoJICAgICAgICAgICAgJHBhcnRpY2lwYW50ZGV0YWlsLT51cGRhdGUoKTsKCgkgICAgICAgICAgICAkdXNlciA9IFVzZXI6OnNlbGVjdCgnZmlyc3RfbmFtZScsICdsYXN0X25hbWUnLCAnZW1haWwnKS0+d2hlcmUoJ2lkJywgJHBhcnRpY2lwYW50ZGV0YWlsLT51c2VyX2lkKS0+Zmlyc3QoKTsKCSAgICAgICAgICAgIC8vbm90CgkgICAgICAgICAgICAvLyAkbnRfZGF0YSA9IFtdOwoJICAgICAgICAgICAgLy8gJG50X2RhdGFbInVzZXJfaWQiXSA9ICR2aWRlby0+Y29hY2hfaWQ7CgkgICAgICAgICAgICAvLyAkbnRfZGF0YVsic2VuZGVyX2lkIl0gPSAkdmlkZW8tPnVzZXJfaWQ7CgkgICAgICAgICAgICAvLyAkbnRfZGF0YVsidmlkZW9faWQiXSA9ICR2aWRlby0+aWQ7CgkgICAgICAgICAgICAvLyAkbnRfZGF0YVsic3RhdHVzIl0gPSAxOwoJICAgICAgICAgICAgLy8gJG50X2RhdGFbIm1lc3NhZ2UiXSA9ICc8YSBocmVmPSIvcHJvZmlsZS8nIC4gJHZpZGVvLT51c2VyX2lkIC4gJyI+JyAuICR1c2VyLT5maXJzdF9uYW1lIC4gJyAnIC4gJHVzZXItPmxhc3RfbmFtZQoJICAgICAgICAgICAgLy8gICAgIC4gJzwvYT4gcGFpZCB2aWRlbyEnOwoJICAgICAgICAgICAgLy8gJG50X2RhdGFbImNyZWF0ZWRfYXQiXSA9IG15c3FsX2RhdGUoKTsKCSAgICAgICAgICAgIC8vICRudF9kYXRhWyJ1cGRhdGVkX2F0Il0gPSBteXNxbF9kYXRlKCk7CgkgICAgICAgICAgICAvLyBOb3RpZmljYXRpb246OnNhdmVOb3RpZmljYXRpb24oJG50X2RhdGEpOwoJICAgICAgICAgICAgLy9ub3QKCgkgICAgICAgICAgICAKCSAgICAgICAgICAgICRtYWlsX3RvX3BlcmZvcm1lciA9IG5ldyBNYWlsZXIoKTsKCSAgICAgICAgICAgICRtYWlsX3RvX3BlcmZvcm1lci0+c3ViamVjdCA9ICdUaGFuayB5b3UgZm9yIHlvdXIgcGF5bWVudCc7CgkgICAgICAgICAgICAkbWFpbF90b19wZXJmb3JtZXItPnRvX2VtYWlsID0gKCRyZXF1ZXN0LT5zdHJpcGVFbWFpbCA9PSAkdXNlci0+ZW1haWwpID8gJHVzZXItPmVtYWlsIDogJHJlcXVlc3QtPnN0cmlwZUVtYWlsOwoJICAgICAgICAgICAgJG1haWxfdG9fcGVyZm9ybWVyLT5zZW5kTWFpbCgnYXV0aC5lbWFpbHMucGF5bWVudFJlY2VpdmVkJywKCSAgICAgICAgICAgICAgICBbCgkgICAgICAgICAgICAgICAgICAgICdmaXJzdF9uYW1lJyA9PiAkdXNlci0+Zmlyc3RfbmFtZSwKCSAgICAgICAgICAgICAgICAgICAgJ2RhdGUnID0+IGRhdGUoJ0YgZCwgWSBoOmkgYScpLAoJICAgICAgICAgICAgICAgICAgICAnYW1vdW50JyA9PiAoZmxvYXQpJGNoYXJnZVsnYW1vdW50J10gLyAxMDAsCgkgICAgICAgICAgICAgICAgICAgICdjb2FjaF9uYW1lJyA9PiAkY29hY2gtPmZpcnN0X25hbWUsCgkgICAgICAgICAgICAgICAgICAgICdjYXJkX2VuZGluZycgPT4gJGNoYXJnZVsnc291cmNlJ11bJ2V4cF9tb250aCddIC4gJy8nIC4gJGNoYXJnZVsnc291cmNlJ11bJ2V4cF95ZWFyJ10sCgkgICAgICAgICAgICAgICAgICAgICdjYXJkX3R5cGUnID0+ICRjaGFyZ2VbJ3NvdXJjZSddWydicmFuZCddLAoJICAgICAgICAgICAgICAgICAgICAnY2FyZF9sYXN0NCcgPT4gJGNoYXJnZVsnc291cmNlJ11bJ2xhc3Q0J10KCSAgICAgICAgICAgICAgICBdKTsKCgkgICAgICAgICAgICAkbWFpbF90b19jb2FjaCA9IG5ldyBNYWlsZXIoKTsKCSAgICAgICAgICAgICRtYWlsX3RvX2NvYWNoLT5zdWJqZWN0ID0gJ1BheW1lbnQgZnJvbSB0aGUgdXNlciBmb3IgQ2hhbGxlbmdlJzsKCSAgICAgICAgICAgICRtYWlsX3RvX2NvYWNoLT50b19lbWFpbCA9ICRjb2FjaC0+ZW1haWw7CgkgICAgICAgICAgICAkbWFpbF90b19jb2FjaC0+c2VuZE1haWwoJ2F1dGguZW1haWxzLnBheW1lbnRGcm9tVXNlcicsCgkgICAgICAgICAgICAgICAgWwoJICAgICAgICAgICAgICAgICAgICAndXNlcl9uYW1lJyA9PiAkdXNlci0+Zmlyc3RfbmFtZSwKCSAgICAgICAgICAgICAgICAgICAgJ2NvYWNoX25hbWUnID0+ICRjb2FjaC0+Zmlyc3RfbmFtZQoJICAgICAgICAgICAgICAgIF0pOwoKCSAgICAgICAgICAgIC8qIHJlbWluZGVyIGZ1bmN0aW9uYWxpdHkgKi8KCSAgICAgICAgICAgIC8vICRwYXJhbXMgPSBbCgkgICAgICAgICAgICAvLyAgICAgJ3ZpZGVvX2lkJyA9PiAkdmlkZW8tPmlkLAoJICAgICAgICAgICAgLy8gICAgICdwZXJmb3JtZXJfbmFtZScgPT4gJHVzZXItPmZpcnN0X25hbWUsCgkgICAgICAgICAgICAvLyAgICAgJ2NvYWNoX25hbWUnID0+ICRjb2FjaC0+Zmlyc3RfbmFtZSwKCSAgICAgICAgICAgIC8vICAgICAnY29hY2hfZW1haWwnID0+ICRjb2FjaC0+ZW1haWwsCgkgICAgICAgICAgICAvLyAgICAgJ2RhdGUnID0+IG15c3FsX2RhdGUoKSwKCSAgICAgICAgICAgIC8vICAgICAnZGF5c19sZWZ0JyA9PiAzCgkgICAgICAgICAgICAvLyBdOwoKCSAgICAgICAgICAgIC8vICRqb2JfM19kYXlzID0gKG5ldyBTZW5kUmVtaW5kZXJFbWFpbCgkcGFyYW1zKSktPmRlbGF5KDQgKiAyNCAqIDYwICogNjApOwoKCSAgICAgICAgICAgIC8vICRwYXJhbXNbJ2RheXNfbGVmdCddID0gMjsKCSAgICAgICAgICAgIC8vICRqb2JfMl9kYXlzID0gKG5ldyBTZW5kUmVtaW5kZXJFbWFpbCgkcGFyYW1zKSktPmRlbGF5KDUgKiAyNCAqIDYwICogNjApOwoKCSAgICAgICAgICAgIC8vICRwYXJhbXNbJ2RheXNfbGVmdCddID0gMTsKCSAgICAgICAgICAgIC8vICRqb2JfMV9kYXlzID0gKG5ldyBTZW5kUmVtaW5kZXJFbWFpbCgkcGFyYW1zKSktPmRlbGF5KDYgKiAyNCAqIDYwICogNjApOwoKCSAgICAgICAgICAgIC8vIGRpc3BhdGNoKCRqb2JfM19kYXlzKTsKCSAgICAgICAgICAgIC8vIGRpc3BhdGNoKCRqb2JfMl9kYXlzKTsKCSAgICAgICAgICAgIC8vIGRpc3BhdGNoKCRqb2JfMV9kYXlzKTsKCgkgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbIm1lc3NhZ2UiID0+ICJTdWNjZXNzIHBheSEiLCAnc3RhdHVzX2NvZGUnID0+IDIwMF0pOwoJICAgICAgICB9IGVsc2UgewoJICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oWyJtZXNzYWdlIiA9PiAiRXJyb3IgcGF5IiwgJ3N0YXR1c19jb2RlJyA9PiA0MjJdKTsKCSAgICAgICAgfQoJICAgIAoJCX0KCgkvL0FwcGxlIFBheSBmb3IgY2hhbGxlbmdlCgoJcHVibGljIGZ1bmN0aW9uIGFwcGxlUGF5Q2hhbGxlbmdlKEFwcGxlUGF5Q2hhbGxlbmdlUmVxdWVzdCAkcmVxdWVzdCl7CgkgICAgICAgIAoJICAgICAgICAkcGFydGljaXBhbnRkZXRhaWwgPSBDaGFsbGVuZ2VzUGFydGljaXBhbnQ6OnNlbGVjdCgnaWQnLCdjaGFsbGVuZ2VfaWQnLCd1c2VyX2lkJywncGF5bWVudF9zdGF0dXMnLCdjb2FjaF9pZCcsJ3N0cmlwZV9pZCcpLT53aGVyZSgnaWQnLCc9JywoaW50KSRyZXF1ZXN0LT5wYXJ0aWNpcGFudF9pZCktPmZpcnN0KCk7IAoJICAgICAgICAkY2hhbGxlbmdlID0gQ2hhbGxlbmdlczo6d2hlcmUoJ2lkJywnPScsJHBhcnRpY2lwYW50ZGV0YWlsLT5jaGFsbGVuZ2VfaWQpLT5maXJzdCgpOwoJICAgICAgICBpZigkY2hhbGxlbmdlID09ICcnKXsKCSAgICAgICAgCXJldHVybiByZXNwb25zZSgpLT5qc29uKFsibWVzc2FnZSIgPT4gIkNoYWxsZW5nZSBpZCBpbiBub3QgZm91bmQiLCAnc3RhdHVzX2NvZGUnID0+IDQyMl0pOwoJICAgICAgICB9CgkgICAgICAgICRjb2FjaCA9IFVzZXI6OnNlbGVjdCgnZmlyc3RfbmFtZScsICdlbWFpbCcpLT53aGVyZSgnaWQnLCAkcGFydGljaXBhbnRkZXRhaWwtPmNvYWNoX2lkKS0+Zmlyc3QoKTsKCSAgICAgICAgaWYoJGNvYWNoID09ICcnKXsKCSAgICAgICAgCXJldHVybiByZXNwb25zZSgpLT5qc29uKFsibWVzc2FnZSIgPT4gIkNvYWNoIGlkIG5vdCBmb3VuZCIsICdzdGF0dXNfY29kZScgPT4gNDIyXSk7CgkgICAgICAgIH0KCSAgICAgICAgCgoJICAgICAgICBpZiAoJHJlcXVlc3QtPnN0YXR1cyA9PSAyMDApIHsgLy8gc3VjY2VzcwoJICAgICAgICAgICAgLy9jcmVhdGUgcGF5bWVudCBpbiBkYXRhYmFzZQoJICAgICAgICAgICAgJG5ld19wYXkgPSBuZXcgTmV3UGF5bWVudGxpc3QoKTsKCSAgICAgICAgICAgICRuZXdfcGF5LT51c2VyX2lkID0gJHBhcnRpY2lwYW50ZGV0YWlsLT51c2VyX2lkOwoJICAgICAgICAgICAgJG5ld19wYXktPnBhcnRpY2lwYW50X2lkID0gJHBhcnRpY2lwYW50ZGV0YWlsLT5pZDsKCSAgICAgICAgICAgICRuZXdfcGF5LT50eXBlID0gJ2NoYWxsZW5nZSc7CgkgICAgICAgICAgICAkbmV3X3BheS0+YW1vdW50ID0gJHJlcXVlc3QtPmFtb3VudDsKCSAgICAgICAgICAgICRuZXdfcGF5LT5zdHJpcGVfaWQgPSAkcmVxdWVzdC0+dHJhbnNhY3Rpb25faWQ7CgkgICAgICAgICAgICAkbmV3X3BheS0+c2F2ZSgpOwoKCSAgICAgICAgICAgIC8vY2hhbmdlIHZpZGVvIHN0YXR1cwoJICAgICAgICAgICAgJHBhcnRpY2lwYW50ZGV0YWlsLT5wYXltZW50X3N0YXR1cyA9IDE7CgkgICAgICAgICAgICAkcGFydGljaXBhbnRkZXRhaWwtPnN0cmlwZV9pZCA9ICRyZXF1ZXN0LT50cmFuc2FjdGlvbl9pZDsKCSAgICAgICAgICAgICRwYXJ0aWNpcGFudGRldGFpbC0+dXBkYXRlKCk7CgoJICAgICAgICAgICAgJHVzZXIgPSBVc2VyOjpzZWxlY3QoJ2ZpcnN0X25hbWUnLCAnbGFzdF9uYW1lJywgJ2VtYWlsJyktPndoZXJlKCdpZCcsICRwYXJ0aWNpcGFudGRldGFpbC0+dXNlcl9pZCktPmZpcnN0KCk7CgkgICAgICAgICAgICAvL25vdAoJICAgICAgICAgICAgLy8gJG50X2RhdGEgPSBbXTsKCSAgICAgICAgICAgIC8vICRudF9kYXRhWyJ1c2VyX2lkIl0gPSAkdmlkZW8tPmNvYWNoX2lkOwoJICAgICAgICAgICAgLy8gJG50X2RhdGFbInNlbmRlcl9pZCJdID0gJHZpZGVvLT51c2VyX2lkOwoJICAgICAgICAgICAgLy8gJG50X2RhdGFbInZpZGVvX2lkIl0gPSAkdmlkZW8tPmlkOwoJICAgICAgICAgICAgLy8gJG50X2RhdGFbInN0YXR1cyJdID0gMTsKCSAgICAgICAgICAgIC8vICRudF9kYXRhWyJtZXNzYWdlIl0gPSAnPGEgaHJlZj0iL3Byb2ZpbGUvJyAuICR2aWRlby0+dXNlcl9pZCAuICciPicgLiAkdXNlci0+Zmlyc3RfbmFtZSAuICcgJyAuICR1c2VyLT5sYXN0X25hbWUKCSAgICAgICAgICAgIC8vICAgICAuICc8L2E+IHBhaWQgdmlkZW8hJzsKCSAgICAgICAgICAgIC8vICRudF9kYXRhWyJjcmVhdGVkX2F0Il0gPSBteXNxbF9kYXRlKCk7CgkgICAgICAgICAgICAvLyAkbnRfZGF0YVsidXBkYXRlZF9hdCJdID0gbXlzcWxfZGF0ZSgpOwoJICAgICAgICAgICAgLy8gTm90aWZpY2F0aW9uOjpzYXZlTm90aWZpY2F0aW9uKCRudF9kYXRhKTsKCSAgICAgICAgICAgIC8vbm90CgoJICAgICAgICAgICAgCgkgICAgICAgICAgICAkbWFpbF90b19wZXJmb3JtZXIgPSBuZXcgTWFpbGVyKCk7CgkgICAgICAgICAgICAkbWFpbF90b19wZXJmb3JtZXItPnN1YmplY3QgPSAnVGhhbmsgeW91IGZvciB5b3VyIHBheW1lbnQnOwoJICAgICAgICAgICAgJG1haWxfdG9fcGVyZm9ybWVyLT50b19lbWFpbCA9ICgkcmVxdWVzdC0+c3RyaXBlRW1haWwgPT0gJHVzZXItPmVtYWlsKSA/ICR1c2VyLT5lbWFpbCA6ICRyZXF1ZXN0LT5zdHJpcGVFbWFpbDsKCSAgICAgICAgICAgICRtYWlsX3RvX3BlcmZvcm1lci0+c2VuZE1haWwoJ2F1dGguZW1haWxzLnBheW1lbnRSZWNlaXZlZCcsCgkgICAgICAgICAgICAgICAgWwoJICAgICAgICAgICAgICAgICAgICAnZmlyc3RfbmFtZScgPT4gJHVzZXItPmZpcnN0X25hbWUsCgkgICAgICAgICAgICAgICAgICAgICdkYXRlJyA9PiBkYXRlKCdGIGQsIFkgaDppIGEnKSwKCSAgICAgICAgICAgICAgICAgICAgJ2Ftb3VudCcgPT4gJHJlcXVlc3QtPmFtb3VudCwKCSAgICAgICAgICAgICAgICAgICAgJ2NvYWNoX25hbWUnID0+ICRjb2FjaC0+Zmlyc3RfbmFtZSwKCSAgICAgICAgICAgICAgICAgICAgJ2NhcmRfZW5kaW5nJyA9PiAnVXNpbmcgQXBwbGUgUGF5JywKCSAgICAgICAgICAgICAgICAgICAgJ2NhcmRfdHlwZScgPT4gJycsCgkgICAgICAgICAgICAgICAgICAgICdjYXJkX2xhc3Q0JyA9PiAnJwoJICAgICAgICAgICAgICAgIF0pOwoKCSAgICAgICAgICAgICRtYWlsX3RvX2NvYWNoID0gbmV3IE1haWxlcigpOwoJICAgICAgICAgICAgJG1haWxfdG9fY29hY2gtPnN1YmplY3QgPSAnUGF5bWVudCBmcm9tIHRoZSB1c2VyIGZvciBDaGFsbGVuZ2UnOwoJICAgICAgICAgICAgJG1haWxfdG9fY29hY2gtPnRvX2VtYWlsID0gJGNvYWNoLT5lbWFpbDsKCSAgICAgICAgICAgICRtYWlsX3RvX2NvYWNoLT5zZW5kTWFpbCgnYXV0aC5lbWFpbHMucGF5bWVudEZyb21Vc2VyJywKCSAgICAgICAgICAgICAgICBbCgkgICAgICAgICAgICAgICAgICAgICd1c2VyX25hbWUnID0+ICR1c2VyLT5maXJzdF9uYW1lLAoJICAgICAgICAgICAgICAgICAgICAnY29hY2hfbmFtZScgPT4gJGNvYWNoLT5maXJzdF9uYW1lCgkgICAgICAgICAgICAgICAgXSk7CgoJICAgICAgICAgICAgLyogcmVtaW5kZXIgZnVuY3Rpb25hbGl0eSAqLwoJICAgICAgICAgICAgLy8gJHBhcmFtcyA9IFsKCSAgICAgICAgICAgIC8vICAgICAndmlkZW9faWQnID0+ICR2aWRlby0+aWQsCgkgICAgICAgICAgICAvLyAgICAgJ3BlcmZvcm1lcl9uYW1lJyA9PiAkdXNlci0+Zmlyc3RfbmFtZSwKCSAgICAgICAgICAgIC8vICAgICAnY29hY2hfbmFtZScgPT4gJGNvYWNoLT5maXJzdF9uYW1lLAoJICAgICAgICAgICAgLy8gICAgICdjb2FjaF9lbWFpbCcgPT4gJGNvYWNoLT5lbWFpbCwKCSAgICAgICAgICAgIC8vICAgICAnZGF0ZScgPT4gbXlzcWxfZGF0ZSgpLAoJICAgICAgICAgICAgLy8gICAgICdkYXlzX2xlZnQnID0+IDMKCSAgICAgICAgICAgIC8vIF07CgoJICAgICAgICAgICAgLy8gJGpvYl8zX2RheXMgPSAobmV3IFNlbmRSZW1pbmRlckVtYWlsKCRwYXJhbXMpKS0+ZGVsYXkoNCAqIDI0ICogNjAgKiA2MCk7CgoJICAgICAgICAgICAgLy8gJHBhcmFtc1snZGF5c19sZWZ0J10gPSAyOwoJICAgICAgICAgICAgLy8gJGpvYl8yX2RheXMgPSAobmV3IFNlbmRSZW1pbmRlckVtYWlsKCRwYXJhbXMpKS0+ZGVsYXkoNSAqIDI0ICogNjAgKiA2MCk7CgoJICAgICAgICAgICAgLy8gJHBhcmFtc1snZGF5c19sZWZ0J10gPSAxOwoJICAgICAgICAgICAgLy8gJGpvYl8xX2RheXMgPSAobmV3IFNlbmRSZW1pbmRlckVtYWlsKCRwYXJhbXMpKS0+ZGVsYXkoNiAqIDI0ICogNjAgKiA2MCk7CgoJICAgICAgICAgICAgLy8gZGlzcGF0Y2goJGpvYl8zX2RheXMpOwoJICAgICAgICAgICAgLy8gZGlzcGF0Y2goJGpvYl8yX2RheXMpOwoJICAgICAgICAgICAgLy8gZGlzcGF0Y2goJGpvYl8xX2RheXMpOwoKCSAgICAgICAgICAgIHJldHVybiByZXNwb25zZSgpLT5qc29uKFsibWVzc2FnZSIgPT4gIlN1Y2Nlc3MgcGF5ISIsICdzdGF0dXNfY29kZScgPT4gMjAwXSk7CgkgICAgICAgIH0gZWxzZSB7CgkgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbIm1lc3NhZ2UiID0+ICJFcnJvciBwYXkiLCAnc3RhdHVzX2NvZGUnID0+IDQyMl0pOwoJICAgICAgICB9CgkgICAgCgkJfQp9IjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MTp7czoyMDoiXEFwcFxBcGlcQ29udHJvbGxlcnMiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyMDoiXEFwcFxBcGlcQ29udHJvbGxlcnMiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMToiQ29udHJvbGxlcnMiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MTp7czo0MDoiXEFwcFxBcGlcQ29udHJvbGxlcnNcQ2hhbGxlbmdlQ29udHJvbGxlciI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18iOjExOntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0MDoiXEFwcFxBcGlcQ29udHJvbGxlcnNcQ2hhbGxlbmdlQ29udHJvbGxlciI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE5OiJDaGFsbGVuZ2VDb250cm9sbGVyIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czozNDoiQXVkaXRpb25zIHJlc291cmNlIHJlcHJlc2VudGF0aW9uLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjg6IlJlc291cmNlIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czozMToiKCJBdWRpdGlvbnMiLCB1cmk9Ii9hdWRpdGlvbnMiKSI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjE5OiJBcHBcQXBpXENvbnRyb2xsZXJzIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YToyNjp7czoyMDoiQ2hhbGxlbmdlVHJhbnNmb3JtZXIiO3M6NDE6IkFwcFxBcGlcVHJhbnNmb3JtZXJzXENoYWxsZW5nZVRyYW5zZm9ybWVyIjtzOjIzOiJDUGFydGljaXBhbnRUcmFuc2Zvcm1lciI7czo0NDoiQXBwXEFwaVxUcmFuc2Zvcm1lcnNcQ1BhcnRpY2lwYW50VHJhbnNmb3JtZXIiO3M6MjY6IkNoYWxsZW5nZURldGFpbFRyYW5zZm9ybWVyIjtzOjQ3OiJBcHBcQXBpXFRyYW5zZm9ybWVyc1xDaGFsbGVuZ2VEZXRhaWxUcmFuc2Zvcm1lciI7czoyODoiQWZ0ZXJDUGFydGljaXBhdGVUcmFuc2Zvcm1lciI7czo0OToiQXBwXEFwaVxUcmFuc2Zvcm1lcnNcQWZ0ZXJDUGFydGljaXBhdGVUcmFuc2Zvcm1lciI7czoxOToiUGF5Q2hhbGxlbmdlUmVxdWVzdCI7czozNjoiQXBwXEFwaVxSZXF1ZXN0c1xQYXlDaGFsbGVuZ2VSZXF1ZXN0IjtzOjI0OiJBcHBsZVBheUNoYWxsZW5nZVJlcXVlc3QiO3M6NDE6IkFwcFxBcGlcUmVxdWVzdHNcQXBwbGVQYXlDaGFsbGVuZ2VSZXF1ZXN0IjtzOjc6IlJlcXVlc3QiO3M6MjI6IkRpbmdvXEFwaVxIdHRwXFJlcXVlc3QiO3M6NDoiVXNlciI7czoxNToiQXBwXE1vZGVsc1xVc2VyIjtzOjEyOiJOb3RpZmljYXRpb24iO3M6MjM6IkFwcFxNb2RlbHNcTm90aWZpY2F0aW9uIjtzOjc6IlN0b3JhZ2UiO3M6NzoiU3RvcmFnZSI7czoxNDoiTmV3UGF5bWVudGxpc3QiO3M6MjU6IkFwcFxNb2RlbHNcTmV3UGF5bWVudGxpc3QiO3M6MTA6IkNoYWxsZW5nZXMiO3M6MjE6IkFwcFxNb2RlbHNcQ2hhbGxlbmdlcyI7czoyMToiQ2hhbGxlbmdlc1BhcnRpY2lwYW50IjtzOjMyOiJBcHBcTW9kZWxzXENoYWxsZW5nZXNQYXJ0aWNpcGFudCI7czoyOiJEQiI7czoyOToiSWxsdW1pbmF0ZVxTdXBwb3J0XEZhY2FkZXNcREIiO3M6MTU6IkNoYWxsZW5nZVVwbG9hZCI7czozMjoiQXBwXEFwaVxSZXF1ZXN0c1xDaGFsbGVuZ2VVcGxvYWQiO3M6NjoiU3RyaXBlIjtzOjEzOiJTdHJpcGVcU3RyaXBlIjtzOjE3OiJTZW5kUmVtaW5kZXJFbWFpbCI7czoyNjoiQXBwXEpvYnNcU2VuZFJlbWluZGVyRW1haWwiO3M6NjoiQ2hhcmdlIjtzOjEzOiJTdHJpcGVcQ2hhcmdlIjtzOjY6Ik1haWxlciI7czoyMzoiQXBwXEh0dHBcSGVscGVyc1xNYWlsZXIiO3M6Mjg6IlN0b3JlUmVzb3VyY2VGYWlsZWRFeGNlcHRpb24iO3M6NDg6IkRpbmdvXEFwaVxFeGNlcHRpb25cU3RvcmVSZXNvdXJjZUZhaWxlZEV4Y2VwdGlvbiI7czoxMjoiRXBoZW1lcmFsS2V5IjtzOjE5OiJTdHJpcGVcRXBoZW1lcmFsS2V5IjtzOjg6IkN1c3RvbWVyIjtzOjE1OiJTdHJpcGVcQ3VzdG9tZXIiO3M6OToiVGh1bWJuYWlsIjtzOjk6IlRodW1ibmFpbCI7czo2OiJGRk1wZWciO3M6MTM6IkZGTXBlZ1xGRk1wZWciO3M6MTc6IllvdVR1YmVEb3dubG9hZGVyIjtzOjI1OiJZb3VUdWJlXFlvdVR1YmVEb3dubG9hZGVyIjtzOjE0OiJBcHBsZVBheUhlbHBlciI7czoxNDoiQXBwbGVQYXlIZWxwZXIiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcGFyZW50IjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MzU6IlxBcHBcQXBpXENvbnRyb2xsZXJzXEJhc2VDb250cm9sbGVyIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTQ6IkJhc2VDb250cm9sbGVyIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGltcGxlbWVudHMiO2E6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBjb25zdGFudHMiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwcm9wZXJ0aWVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AbWV0aG9kcyI7YTo3OntzOjQ5OiJcQXBwXEFwaVxDb250cm9sbGVyc1xDaGFsbGVuZ2VDb250cm9sbGVyOjppbmRleCgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ5OiJcQXBwXEFwaVxDb250cm9sbGVyc1xDaGFsbGVuZ2VDb250cm9sbGVyOjppbmRleCgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NToiaW5kZXgiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Mzk7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo2NjoiXEFwcFxBcGlcQ29udHJvbGxlcnNcQ2hhbGxlbmdlQ29udHJvbGxlcjo6Y2hlY2tVc2VyUGFydGljaXBhdGlvbigpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjY2OiJcQXBwXEFwaVxDb250cm9sbGVyc1xDaGFsbGVuZ2VDb250cm9sbGVyOjpjaGVja1VzZXJQYXJ0aWNpcGF0aW9uKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyMjoiY2hlY2tVc2VyUGFydGljaXBhdGlvbiI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoxMjoiY2hhbGxlbmdlX2lkIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NTk7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo1OToiXEFwcFxBcGlcQ29udHJvbGxlcnNcQ2hhbGxlbmdlQ29udHJvbGxlcjo6Y2hhbGxlbmdlRGV0YWlsKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTk6IlxBcHBcQXBpXENvbnRyb2xsZXJzXENoYWxsZW5nZUNvbnRyb2xsZXI6OmNoYWxsZW5nZURldGFpbCgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTU6ImNoYWxsZW5nZURldGFpbCI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo2NDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjQ5OiJcQXBwXEFwaVxDb250cm9sbGVyc1xDaGFsbGVuZ2VDb250cm9sbGVyOjpzdG9yZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ5OiJcQXBwXEFwaVxDb250cm9sbGVyc1xDaGFsbGVuZ2VDb250cm9sbGVyOjpzdG9yZSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NToic3RvcmUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NzoicmVxdWVzdCI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjMzOiJcQXBwXEFwaVxSZXF1ZXN0c1xDaGFsbGVuZ2VVcGxvYWQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNToiQ2hhbGxlbmdlVXBsb2FkIjt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjg0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NTA6IlxBcHBcQXBpXENvbnRyb2xsZXJzXENoYWxsZW5nZUNvbnRyb2xsZXI6OnJldmlldygpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjUwOiJcQXBwXEFwaVxDb250cm9sbGVyc1xDaGFsbGVuZ2VDb250cm9sbGVyOjpyZXZpZXcoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjY6InJldmlldyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czoxMzoiY2hhbGxlbmdlbGlzdCI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjMzOiJcQXBwXE1vZGVsc1xDaGFsbGVuZ2VzUGFydGljaXBhbnQiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyMToiQ2hhbGxlbmdlc1BhcnRpY2lwYW50Ijt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIyNDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjU2OiJcQXBwXEFwaVxDb250cm9sbGVyc1xDaGFsbGVuZ2VDb250cm9sbGVyOjpwYXlDaGFsbGVuZ2UoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1NjoiXEFwcFxBcGlcQ29udHJvbGxlcnNcQ2hhbGxlbmdlQ29udHJvbGxlcjo6cGF5Q2hhbGxlbmdlKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMjoicGF5Q2hhbGxlbmdlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjc6InJlcXVlc3QiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozNzoiXEFwcFxBcGlcUmVxdWVzdHNcUGF5Q2hhbGxlbmdlUmVxdWVzdCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE5OiJQYXlDaGFsbGVuZ2VSZXF1ZXN0Ijt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI1NjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjYxOiJcQXBwXEFwaVxDb250cm9sbGVyc1xDaGFsbGVuZ2VDb250cm9sbGVyOjphcHBsZVBheUNoYWxsZW5nZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjYxOiJcQXBwXEFwaVxDb250cm9sbGVyc1xDaGFsbGVuZ2VDb250cm9sbGVyOjphcHBsZVBheUNoYWxsZW5nZSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTc6ImFwcGxlUGF5Q2hhbGxlbmdlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjc6InJlcXVlc3QiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0MjoiXEFwcFxBcGlcUmVxdWVzdHNcQXBwbGVQYXlDaGFsbGVuZ2VSZXF1ZXN0IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MjQ6IkFwcGxlUGF5Q2hhbGxlbmdlUmVxdWVzdCI7fX1zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozODU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwB1c2VkVHJhaXRzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjM3O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fX19czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9fQ==";