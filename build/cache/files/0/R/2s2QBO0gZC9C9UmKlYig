1665722086
waR3U4bTeM%3Aa6eb1394bddcc66a8f0470051d8509f4-9db35ecacd645f087302b5fa934d5c8e
s:38056:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjlkYjM1ZWNhY2Q2NDVmMDg3MzAyYjVmYTkzNGQ1YzhlIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjE6IlBheW1lbnRDb250cm9sbGVyLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjQ3OiJhcHAvQXBpLTEyLTA2L0NvbnRyb2xsZXJzL1BheW1lbnRDb250cm9sbGVyLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTA4Mjc6Ijw/cGhwCgpuYW1lc3BhY2UgQXBwXEFwaVxDb250cm9sbGVyczsKCnVzZSBBcHBcQXBpXFJlcXVlc3RzXFBheVZpZGVvUmVxdWVzdDsKdXNlIFN0cmlwZVxTdHJpcGU7CnVzZSBBcHBcSm9ic1xTZW5kUmVtaW5kZXJFbWFpbDsKdXNlIEFwcFxNb2RlbHNcTm90aWZpY2F0aW9uOwp1c2UgQXBwXE1vZGVsc1xWaWRlbzsKdXNlIFN0cmlwZVxDaGFyZ2U7CnVzZSBBcHBcSHR0cFxIZWxwZXJzXE1haWxlcjsKdXNlIEFwcFxNb2RlbHNcVXNlcjsKdXNlIEFwcFxNb2RlbHNcUGF5bWVudHNMaXN0Owp1c2UgRGluZ29cQXBpXEh0dHBcUmVxdWVzdDsKdXNlIERpbmdvXEFwaVxFeGNlcHRpb25cU3RvcmVSZXNvdXJjZUZhaWxlZEV4Y2VwdGlvbjsKdXNlIFN0cmlwZVxFcGhlbWVyYWxLZXk7CnVzZSBTdHJpcGVcQ3VzdG9tZXI7CgovKioKICogUGF5bWVudCBkYXRhIHJlcHJlc2VudGF0aW9uLiBSZXF1aXJlcyBBdXRob3JpemF0aW9uIGhlYWRlci4KICoKICogQFJlc291cmNlKCJQYXltZW50IikKICovCmNsYXNzIFBheW1lbnRDb250cm9sbGVyIGV4dGVuZHMgQmFzZUNvbnRyb2xsZXIKewogICAgLyoqCiAgICAgKiBHZXQgU3RyaXBlIFB1YmxpYyBLZXkKICAgICAqCiAgICAgKiBAR2V0KCIvZ2V0LXN0cmlwZS1rZXkiKQogICAgICogQFRyYW5zYWN0aW9uKHsKICAgICAqICAgICBAUmVxdWVzdChoZWFkZXJzPXsiQXV0aG9yaXphdGlvbiI6ICJCZWFyZXIgPEpXVD4ifSksCiAgICAgKiAgICAgQFJlc3BvbnNlKDIwMCwgYm9keT17ImRhdGEiOnsic3RyaXBlX2tleSIgOiAicGtfdGVzdF81OXFFMnBOVko5TWxCQWZ1MTczM0wzQnUifSwgInN0YXR1c19jb2RlIjogMjAwfSksCiAgICAgKiAgICAgQFJlc3BvbnNlKDQwMSwgYm9keT17Im1lc3NhZ2UiOiAiNDIyIFVucHJvY2Vzc2FibGUgRW50aXR5LiIsCiAgICAgKiAgICAgICAgICJzdGF0dXNfY29kZSI6IDQwMX0pLAogICAgICogICAgIEBSZXNwb25zZSg0MjIsIGJvZHk9eyJtZXNzYWdlIjogIjQyMiBVbnByb2Nlc3NhYmxlIEVudGl0eSIsICJzdGF0dXNfY29kZSI6IDQyMiwgImVycm9ycyI6eyJzdHJpcGUgcHVibGljIGtleSI6CiAgICAgKiAgICAgICAgIHsiLmVudiBTVFJJUEVfUFVCTElTSEFCTEVfS0VZIG5vdCBmb3VuZCJ9fX0pLAogICAgICogICAgIEBSZXNwb25zZSg1MDAsIGJvZHk9eyJlcnJvciI6ICJTZXJ2ZXIgc2lkZSBlcnJvciBtZXNzYWdlIiwgInN0YXR1c19jb2RlIjogNTAwfSkKICAgICAqIH0pCiAgICAgKiBAVmVyc2lvbnMoeyJ2MSJ9KQogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gZ2V0U3RyaXBlUHVibGljS2V5KCkKICAgIHsKICAgICAgICAkc3RyaXBlX2tleSA9IGVudignU1RSSVBFX1BVQkxJU0hBQkxFX0tFWScsIGZhbHNlKTsKICAgICAgICBpZiAoISRzdHJpcGVfa2V5KSB7CiAgICAgICAgICAgIHJldHVybiAkdGhpcy0+cmVzcG9uc2UtPmFycmF5KFsKICAgICAgICAgICAgICAgICdtZXNzYWdlJyA9PiAiNDIyIFVucHJvY2Vzc2FibGUgRW50aXR5IiwKICAgICAgICAgICAgICAgICdlcnJvcnMnID0+IFsnc3RyaXBlIHB1YmxpYyBrZXknID0+IFsnLmVudiBTVFJJUEVfUFVCTElTSEFCTEVfS0VZIG5vdCBmb3VuZCddXSwKICAgICAgICAgICAgICAgICdzdGF0dXNfY29kZScgPT4gNDIyLAogICAgICAgICAgICBdKS0+c2V0U3RhdHVzQ29kZSg0MjIpOwogICAgICAgIH0gZWxzZSB7CgogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbJ2RhdGEnID0+IGNvbXBhY3QoJ3N0cmlwZV9rZXknKSwgJ3N0YXR1c19jb2RlJyA9PiAyMDBdKTsKICAgICAgICB9CiAgICB9CgogICAgLyoqCiAgICAgKiBTdG9yZSBwYXltZW50CiAgICAgKgogICAgICogVXBkYXRlIHZpZGVvIHN0YXR1cy4KICAgICAqCiAgICAgKiBAcGFyYW0gUGF5VmlkZW9SZXF1ZXN0ICRyZXF1ZXN0CiAgICAgKgogICAgICogQFBvc3QoIi9wYXktdmlkZW8iKQogICAgICogQFRyYW5zYWN0aW9uKHsKICAgICAqICAgICBAUmVxdWVzdChib2R5PXsic291cmNlIjogInRva19hbWV4IiwgInZpZGVvX2lkIiA6IDcyLCAiY3VzdG9tZXIiOiJjdXNfREV2UEFIdFBDMlBSTVIiLCAibmVlZF9jdXN0b21lcl9pZCI6ZmFsc2V9CiAgICAgKiAgICAgLCBoZWFkZXJzPXsiQXV0aG9yaXphdGlvbiI6ICJCZWFyZXIgPEpXVD4ifSksCiAgICAgKiAgICAgQFJlc3BvbnNlKDIwMCwgYm9keT17ImRhdGEiOiB7ICJtZXNzYWdlIjogIlN1Y2Nlc3MgcGF5ISIgfSwgInN0YXR1c19jb2RlIjogMjAwfSksCiAgICAgKiAgICAgQFJlc3BvbnNlKDQwMSwgYm9keT17Im1lc3NhZ2UiOiAiRmFpbGVkIHRvIGF1dGhlbnRpY2F0ZSBiZWNhdXNlIG9mIGJhZCBjcmVkZW50aWFscyBvciBhbiBpbnZhbGlkIGF1dGhvcml6YXRpb24gaGVhZGVyLiIsCiAgICAgKiAgICAgICAgICJzdGF0dXNfY29kZSI6IDQwMX0pLAogICAgICogICAgIEBSZXNwb25zZSg0MjIsIGJvZHk9eyJtZXNzYWdlIjogIkVycm9yIHBheSIsICJzdGF0dXNfY29kZSI6IDQyMn0pLAogICAgICogICAgIEBSZXNwb25zZSg1MDAsIGJvZHk9eyJlcnJvciI6IlNlcnZlciBzaWRlIGVycm9yIG1lc3NhZ2UiLCAic3RhdHVzX2NvZGUiOiA1MDB9KQogICAgICogfSkKICAgICAqIEBWZXJzaW9ucyh7InYxIn0pCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBwYXlWaWRlbyhQYXlWaWRlb1JlcXVlc3QgJHJlcXVlc3QpCiAgICB7CiAgICAgICAgU3RyaXBlOjpzZXRBcGlLZXkoY29uZmlnKCdzZXJ2aWNlcy5zdHJpcGUuc2VjcmV0JykpOyAvL2F1dGgKICAgICAgICAkdmlkZW8gPSBWaWRlbzo6c2VsZWN0KCdpZCcsICd1c2VyX2lkJywgJ2NvYWNoX2lkJywgJ3ZpZGVvX3ByaWNlJywgJ3BheV9zdGF0dXMnKQogICAgICAgICAgICAtPndoZXJlKCdpZCcsIChpbnQpJHJlcXVlc3QtPnZpZGVvX2lkKS0+Zmlyc3QoKTsKICAgICAgICAkY2hhcmdlX2FycmF5ID0gWwogICAgICAgICAgICAnY3VycmVuY3knID0+ICdVU0QnLAogICAgICAgICAgICAnYW1vdW50JyA9PiAkdmlkZW8tPnZpZGVvX3ByaWNlLAogICAgICAgICAgICAnZGVzY3JpcHRpb24nID0+ICJDaGFyZ2UgbWFpbiBiYWxhbmNlLCBwYWlkIHZpZGVvICIgLiAkdmlkZW8tPmlkLAogICAgICAgIF07CiAgICAgICAgaWYoJHJlcXVlc3QtPnNvdXJjZSkgJGNoYXJnZV9hcnJheVsnc291cmNlJ10gPSAkcmVxdWVzdC0+c291cmNlOwogICAgICAgIGlmKCRyZXF1ZXN0LT5uZWVkX2N1c3RvbWVyX2lkKXsKICAgICAgICAgICAgaWYoYXV0aCgpLT51c2VyKCktPnN0cmlwZV9jdXN0b21lcl9pZCl7CiAgICAgICAgICAgICAgICAkc3RyaXBlX2N1c3RvbWVyX2lkID0gc2VsZjo6Y2hlY2tTdHJpcGVDdXN0b21lcigpOwogICAgICAgICAgICAgICAgJGNoYXJnZV9hcnJheVsnY3VzdG9tZXInXSA9ICRzdHJpcGVfY3VzdG9tZXJfaWQ7CiAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgJHN0cmlwZV9jdXN0b21lciA9IEN1c3RvbWVyOjpjcmVhdGUoWwogICAgICAgICAgICAgICAgICAgICdlbWFpbCcgPT4gYXV0aCgpLT51c2VyKCktPmVtYWlsLAogICAgICAgICAgICAgICAgICAgICdkZXNjcmlwdGlvbicgPT4gJ1VzZXIgZm9yIHN0cmlwZSBlcGhlbWVyYWwga2V5JywKICAgICAgICAgICAgICAgIF0pOwogICAgICAgICAgICAgICAgJGNoYXJnZV9hcnJheVsnY3VzdG9tZXInXSA9ICRzdHJpcGVfY3VzdG9tZXItPmlkOwogICAgICAgICAgICAgICAgVXNlcjo6d2hlcmVJZChhdXRoKCktPnVzZXIoKS0+aWQpLT51cGRhdGUoWydzdHJpcGVfY3VzdG9tZXJfaWQnID0+ICRzdHJpcGVfY3VzdG9tZXItPmlkXSk7CiAgICAgICAgICAgIH0KICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgaWYoJHJlcXVlc3QtPmN1c3RvbWVyKSAkY2hhcmdlX2FycmF5WydjdXN0b21lciddID0gJHJlcXVlc3QtPmN1c3RvbWVyOwogICAgICAgIH0KICAgICAgICAvL3RyeSBjaGFyZ2UKICAgICAgICB0cnkgewogICAgICAgICAgICAkY2hhcmdlID0gQ2hhcmdlOjpjcmVhdGUoJGNoYXJnZV9hcnJheSk7CiAgICAgICAgfSBjYXRjaCAoXEV4Y2VwdGlvbiAkZSkgewogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbIm1lc3NhZ2UiID0+ICJFcnJvciBwYXkiLCAnc3RhdHVzX2NvZGUnID0+IDQyMl0pOwogICAgICAgIH0KCiAgICAgICAgaWYgKCRjaGFyZ2VbJ3N0YXR1cyddID09ICdzdWNjZWVkZWQnKSB7IC8vIHN1Y2Nlc3MKICAgICAgICAgICAgLy9jcmVhdGUgcGF5bWVudCBpbiBkYXRhYmFzZQogICAgICAgICAgICAkbmV3X3BheSA9IG5ldyBQYXltZW50c0xpc3QoKTsKICAgICAgICAgICAgJG5ld19wYXktPnVzZXJfaWQgPSAkdmlkZW8tPnVzZXJfaWQ7CiAgICAgICAgICAgICRuZXdfcGF5LT5jb2FjaF9pZCA9ICR2aWRlby0+Y29hY2hfaWQ7CiAgICAgICAgICAgICRuZXdfcGF5LT52aWRlb19pZCA9ICR2aWRlby0+aWQ7CiAgICAgICAgICAgICRuZXdfcGF5LT5hbW91bnQgPSAoaW50KSRjaGFyZ2VbJ2Ftb3VudCddOwogICAgICAgICAgICAkbmV3X3BheS0+c3RyaXBlX2lkID0gKHN0cmluZykkY2hhcmdlWydpZCddOwogICAgICAgICAgICAkbmV3X3BheS0+c2F2ZSgpOwoKICAgICAgICAgICAgLy9jaGFuZ2UgdmlkZW8gc3RhdHVzCiAgICAgICAgICAgICR2aWRlby0+cGF5X3N0YXR1cyA9IDE7CiAgICAgICAgICAgICR2aWRlby0+dXBkYXRlKCk7CgogICAgICAgICAgICAkdXNlciA9IFVzZXI6OnNlbGVjdCgnZmlyc3RfbmFtZScsICdsYXN0X25hbWUnLCAnZW1haWwnKS0+d2hlcmUoJ2lkJywgJHZpZGVvLT51c2VyX2lkKS0+Zmlyc3QoKTsKICAgICAgICAgICAgLy9ub3QKICAgICAgICAgICAgJG50X2RhdGEgPSBbXTsKICAgICAgICAgICAgJG50X2RhdGFbInVzZXJfaWQiXSA9ICR2aWRlby0+Y29hY2hfaWQ7CiAgICAgICAgICAgICRudF9kYXRhWyJzZW5kZXJfaWQiXSA9ICR2aWRlby0+dXNlcl9pZDsKICAgICAgICAgICAgJG50X2RhdGFbInZpZGVvX2lkIl0gPSAkdmlkZW8tPmlkOwogICAgICAgICAgICAkbnRfZGF0YVsic3RhdHVzIl0gPSAxOwogICAgICAgICAgICAkbnRfZGF0YVsibWVzc2FnZSJdID0gJzxhIGhyZWY9Ii9wcm9maWxlLycgLiAkdmlkZW8tPnVzZXJfaWQgLiAnIj4nIC4gJHVzZXItPmZpcnN0X25hbWUgLiAnICcgLiAkdXNlci0+bGFzdF9uYW1lCiAgICAgICAgICAgICAgICAuICc8L2E+IHBhaWQgdmlkZW8hJzsKICAgICAgICAgICAgJG50X2RhdGFbImNyZWF0ZWRfYXQiXSA9IG15c3FsX2RhdGUoKTsKICAgICAgICAgICAgJG50X2RhdGFbInVwZGF0ZWRfYXQiXSA9IG15c3FsX2RhdGUoKTsKICAgICAgICAgICAgTm90aWZpY2F0aW9uOjpzYXZlTm90aWZpY2F0aW9uKCRudF9kYXRhKTsKICAgICAgICAgICAgLy9ub3QKCiAgICAgICAgICAgICRjb2FjaCA9IFVzZXI6OnNlbGVjdCgnZmlyc3RfbmFtZScsICdlbWFpbCcpLT53aGVyZSgnaWQnLCAkdmlkZW8tPmNvYWNoX2lkKS0+Zmlyc3QoKTsKICAgICAgICAgICAgJG1haWxfdG9fcGVyZm9ybWVyID0gbmV3IE1haWxlcigpOwogICAgICAgICAgICAkbWFpbF90b19wZXJmb3JtZXItPnN1YmplY3QgPSAnVGhhbmsgeW91IGZvciB5b3VyIHBheW1lbnQnOwogICAgICAgICAgICAkbWFpbF90b19wZXJmb3JtZXItPnRvX2VtYWlsID0gKCRyZXF1ZXN0LT5zdHJpcGVFbWFpbCA9PSAkdXNlci0+ZW1haWwpID8gJHVzZXItPmVtYWlsIDogJHJlcXVlc3QtPnN0cmlwZUVtYWlsOwogICAgICAgICAgICAkbWFpbF90b19wZXJmb3JtZXItPnNlbmRNYWlsKCdhdXRoLmVtYWlscy5wYXltZW50UmVjZWl2ZWQnLAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICdmaXJzdF9uYW1lJyA9PiAkdXNlci0+Zmlyc3RfbmFtZSwKICAgICAgICAgICAgICAgICAgICAnZGF0ZScgPT4gZGF0ZSgnRiBkLCBZIGg6aSBhJyksCiAgICAgICAgICAgICAgICAgICAgJ2Ftb3VudCcgPT4gKGludCkkY2hhcmdlWydhbW91bnQnXSAvIDEwMCwKICAgICAgICAgICAgICAgICAgICAnY29hY2hfbmFtZScgPT4gJGNvYWNoLT5maXJzdF9uYW1lLAogICAgICAgICAgICAgICAgICAgICdjYXJkX2VuZGluZycgPT4gJGNoYXJnZVsnc291cmNlJ11bJ2V4cF9tb250aCddIC4gJy8nIC4gJGNoYXJnZVsnc291cmNlJ11bJ2V4cF95ZWFyJ10sCiAgICAgICAgICAgICAgICAgICAgJ2NhcmRfdHlwZScgPT4gJGNoYXJnZVsnc291cmNlJ11bJ2JyYW5kJ10sCiAgICAgICAgICAgICAgICAgICAgJ2NhcmRfbGFzdDQnID0+ICRjaGFyZ2VbJ3NvdXJjZSddWydsYXN0NCddCiAgICAgICAgICAgICAgICBdKTsKCiAgICAgICAgICAgICRtYWlsX3RvX2NvYWNoID0gbmV3IE1haWxlcigpOwogICAgICAgICAgICAkbWFpbF90b19jb2FjaC0+c3ViamVjdCA9ICdQYXltZW50IGZyb20gdGhlIHVzZXInOwogICAgICAgICAgICAkbWFpbF90b19jb2FjaC0+dG9fZW1haWwgPSAkY29hY2gtPmVtYWlsOwogICAgICAgICAgICAkbWFpbF90b19jb2FjaC0+c2VuZE1haWwoJ2F1dGguZW1haWxzLnBheW1lbnRGcm9tVXNlcicsCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgJ3VzZXJfbmFtZScgPT4gJHVzZXItPmZpcnN0X25hbWUsCiAgICAgICAgICAgICAgICAgICAgJ2NvYWNoX25hbWUnID0+ICRjb2FjaC0+Zmlyc3RfbmFtZQogICAgICAgICAgICAgICAgXSk7CgogICAgICAgICAgICAvKiByZW1pbmRlciBmdW5jdGlvbmFsaXR5ICovCiAgICAgICAgICAgICRwYXJhbXMgPSBbCiAgICAgICAgICAgICAgICAndmlkZW9faWQnID0+ICR2aWRlby0+aWQsCiAgICAgICAgICAgICAgICAncGVyZm9ybWVyX25hbWUnID0+ICR1c2VyLT5maXJzdF9uYW1lLAogICAgICAgICAgICAgICAgJ2NvYWNoX25hbWUnID0+ICRjb2FjaC0+Zmlyc3RfbmFtZSwKICAgICAgICAgICAgICAgICdjb2FjaF9lbWFpbCcgPT4gJGNvYWNoLT5lbWFpbCwKICAgICAgICAgICAgICAgICdkYXRlJyA9PiBteXNxbF9kYXRlKCksCiAgICAgICAgICAgICAgICAnZGF5c19sZWZ0JyA9PiAzCiAgICAgICAgICAgIF07CgogICAgICAgICAgICAkam9iXzNfZGF5cyA9IChuZXcgU2VuZFJlbWluZGVyRW1haWwoJHBhcmFtcykpLT5kZWxheSg0ICogMjQgKiA2MCAqIDYwKTsKCiAgICAgICAgICAgICRwYXJhbXNbJ2RheXNfbGVmdCddID0gMjsKICAgICAgICAgICAgJGpvYl8yX2RheXMgPSAobmV3IFNlbmRSZW1pbmRlckVtYWlsKCRwYXJhbXMpKS0+ZGVsYXkoNSAqIDI0ICogNjAgKiA2MCk7CgogICAgICAgICAgICAkcGFyYW1zWydkYXlzX2xlZnQnXSA9IDE7CiAgICAgICAgICAgICRqb2JfMV9kYXlzID0gKG5ldyBTZW5kUmVtaW5kZXJFbWFpbCgkcGFyYW1zKSktPmRlbGF5KDYgKiAyNCAqIDYwICogNjApOwoKICAgICAgICAgICAgZGlzcGF0Y2goJGpvYl8zX2RheXMpOwogICAgICAgICAgICBkaXNwYXRjaCgkam9iXzJfZGF5cyk7CiAgICAgICAgICAgIGRpc3BhdGNoKCRqb2JfMV9kYXlzKTsKCiAgICAgICAgICAgIHJldHVybiByZXNwb25zZSgpLT5qc29uKFsibWVzc2FnZSIgPT4gIlN1Y2Nlc3MgcGF5ISIsICdzdGF0dXNfY29kZScgPT4gMjAwXSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oWyJtZXNzYWdlIiA9PiAiRXJyb3IgcGF5IiwgJ3N0YXR1c19jb2RlJyA9PiA0MjJdKTsKICAgICAgICB9CiAgICB9CgogICAgLyoqCiAgICAgKiBHZXQgU3RyaXBlIEVwaGVtZXJhbCBLZXkKICAgICAqCiAgICAgKiBAR2V0KCIvZ2V0LXN0cmlwZS1lcGhlbWVyYWwta2V5IikKICAgICAqICogQFBhcmFtZXRlcnMoewogICAgICogICAgICBAUGFyYW1ldGVyKCJhcGlfdmVyc2lvbiIsIHJlcXVpcmVkPXRydWUsIGRlc2NyaXB0aW9uPSJzdHJpcGUgYXBpIGNoYW5nZWxvZyBkYXRlLCBleGFtcGxlIDIwMTgtMDUtMjEiKQogICAgICogfSkKICAgICAqIEBUcmFuc2FjdGlvbih7CiAgICAgKiAgICAgQFJlcXVlc3QoaGVhZGVycz17IkF1dGhvcml6YXRpb24iOiAiQmVhcmVyIDxKV1Q+In0pLAogICAgICogICAgIEBSZXNwb25zZSgyMDAsIGJvZHk9eyJkYXRhIjogeyJrZXkiOiB7ImlkIjogImVwaGtleV8xQ2tTam9BREZXcmp2ZEp6b3RzM1VIVG0iLCJvYmplY3QiOiAiZXBoZW1lcmFsX2tleSIsCiAgICAgKiAiYXNzb2NpYXRlZF9vYmplY3RzIjoge3siaWQiOiAiY3VzX0FzV1g1YWp0a2NzYlBCIiwidHlwZSI6ICJjdXN0b21lciJ9fSwiY3JlYXRlZCI6IDE1MzA3Nzg5NzIsImV4cGlyZXMiOiAxNTMwNzgyNTcyLAogICAgICogICAgICJsaXZlbW9kZSI6IGZhbHNlLCJzZWNyZXQiOiAiZWtfdGVzdF9ZV05qZEY4eFFWZHNaWGNtcDJaRXA2TEZSWmJWbE5XVTFOWTFSclFuSmtWM1JXY21OR1pERnlVRVoifX0sICJzdGF0dXNfY29kZSI6IDIwMH0pLAogICAgICogICAgIEBSZXNwb25zZSg0MDEsIGJvZHk9eyJtZXNzYWdlIjogIjQyMiBVbnByb2Nlc3NhYmxlIEVudGl0eS4iLAogICAgICogICAgICAgICAic3RhdHVzX2NvZGUiOiA0MDF9KSwKICAgICAqICAgICBAUmVzcG9uc2UoNDIyLCBib2R5PXsibWVzc2FnZSI6ICI0MjIgVW5wcm9jZXNzYWJsZSBFbnRpdHkiLCAic3RhdHVzX2NvZGUiOiA0MjIsICJlcnJvcnMiOnsiYXBpX3ZlcnNpb24iOgogICAgICogICAgICAgICB7IkFwaSB2ZXJzaW9uIHJlcXVpcmVkISJ9fX0pLAogICAgICogICAgIEBSZXNwb25zZSg1MDAsIGJvZHk9eyJlcnJvciI6ICJTZXJ2ZXIgc2lkZSBlcnJvciBtZXNzYWdlIiwgInN0YXR1c19jb2RlIjogNTAwfSkKICAgICAqIH0pCiAgICAgKiBAVmVyc2lvbnMoeyJ2MSJ9KQogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gZ2V0U3RyaXBlRXBoZW1lcmFsS2V5KFJlcXVlc3QgJHJlcXVlc3QpCiAgICB7CiAgICAgICAgaWYoISRyZXF1ZXN0LT5hcGlfdmVyc2lvbil7CiAgICAgICAgICAgIHRocm93IG5ldyBTdG9yZVJlc291cmNlRmFpbGVkRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgJ1JlcXVlc3QgcGFyYW1zIGVycm9yIScsCiAgICAgICAgICAgICAgICBbJ2FwaV92ZXJzaW9uJyA9PiBbJ0FwaSB2ZXJzaW9uIHJlcXVpcmVkISddXQogICAgICAgICAgICApOwogICAgICAgIH0KICAgICAgICBTdHJpcGU6OnNldEFwaUtleShjb25maWcoJ3NlcnZpY2VzLnN0cmlwZS5zZWNyZXQnKSk7CiAgICAgICAgaWYoYXV0aCgpLT51c2VyKCktPnN0cmlwZV9jdXN0b21lcl9pZCl7CiAgICAgICAgICAgICRzdHJpcGVfY3VzdG9tZXJfaWQgPSBzZWxmOjpjaGVja1N0cmlwZUN1c3RvbWVyKCk7CiAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICRzdHJpcGVfY3VzdG9tZXIgPSBDdXN0b21lcjo6Y3JlYXRlKFsKICAgICAgICAgICAgICAgICdlbWFpbCcgPT4gYXV0aCgpLT51c2VyKCktPmVtYWlsLAogICAgICAgICAgICAgICAgJ2Rlc2NyaXB0aW9uJyA9PiAnVXNlciBmb3Igc3RyaXBlIGVwaGVtZXJhbCBrZXknLAogICAgICAgICAgICBdKTsKICAgICAgICAgICAgJHN0cmlwZV9jdXN0b21lcl9pZCA9ICRzdHJpcGVfY3VzdG9tZXItPmlkOwogICAgICAgICAgICBVc2VyOjp3aGVyZUlkKGF1dGgoKS0+dXNlcigpLT5pZCktPnVwZGF0ZShbJ3N0cmlwZV9jdXN0b21lcl9pZCcgPT4gJHN0cmlwZV9jdXN0b21lcl9pZF0pOwogICAgICAgIH0KCiAgICAgICAgJGtleSA9IEVwaGVtZXJhbEtleTo6Y3JlYXRlKAogICAgICAgICAgICBbImN1c3RvbWVyIiA9PiAkc3RyaXBlX2N1c3RvbWVyX2lkXSwKICAgICAgICAgICAgWyJzdHJpcGVfdmVyc2lvbiIgPT4gJHJlcXVlc3QtPmFwaV92ZXJzaW9uXSAvLycyMDE4LTA1LTIxJwogICAgICAgICk7CgogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbJ2RhdGEnID0+IGNvbXBhY3QoJ2tleScpLCAnc3RhdHVzX2NvZGUnID0+IDIwMF0pOwogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiBjaGVja1N0cmlwZUN1c3RvbWVyKCkKICAgIHsKICAgICAgICB0cnkgewogICAgICAgICAgICAkc3RyaXBlX2N1c3RvbWVyID0gQ3VzdG9tZXI6OnJldHJpZXZlKGF1dGgoKS0+dXNlcigpLT5zdHJpcGVfY3VzdG9tZXJfaWQpOwogICAgICAgIH0gY2F0Y2ggKFxFeGNlcHRpb24gJGUpIHsKICAgICAgICAgICAgJHN0cmlwZV9jdXN0b21lciA9IEN1c3RvbWVyOjpjcmVhdGUoWwogICAgICAgICAgICAgICAgJ2VtYWlsJyA9PiBhdXRoKCktPnVzZXIoKS0+ZW1haWwsCiAgICAgICAgICAgICAgICAnZGVzY3JpcHRpb24nID0+ICdVc2VyIGZvciBzdHJpcGUgZXBoZW1lcmFsIGtleScsCiAgICAgICAgICAgIF0pOwogICAgICAgICAgICAkc3RyaXBlX2N1c3RvbWVyX2lkID0gJHN0cmlwZV9jdXN0b21lci0+aWQ7CiAgICAgICAgICAgIFVzZXI6OndoZXJlSWQoYXV0aCgpLT51c2VyKCktPmlkKS0+dXBkYXRlKFsnc3RyaXBlX2N1c3RvbWVyX2lkJyA9PiAkc3RyaXBlX2N1c3RvbWVyX2lkXSk7CiAgICAgICAgfQoKICAgICAgICBpZigkc3RyaXBlX2N1c3RvbWVyLT5kZWxldGVkKXsKICAgICAgICAgICAgJHN0cmlwZV9jdXN0b21lciA9IEN1c3RvbWVyOjpjcmVhdGUoWwogICAgICAgICAgICAgICAgJ2VtYWlsJyA9PiBhdXRoKCktPnVzZXIoKS0+ZW1haWwsCiAgICAgICAgICAgICAgICAnZGVzY3JpcHRpb24nID0+ICdVc2VyIGZvciBzdHJpcGUgZXBoZW1lcmFsIGtleScsCiAgICAgICAgICAgIF0pOwogICAgICAgICAgICAkc3RyaXBlX2N1c3RvbWVyX2lkID0gJHN0cmlwZV9jdXN0b21lci0+aWQ7CiAgICAgICAgICAgIFVzZXI6OndoZXJlSWQoYXV0aCgpLT51c2VyKCktPmlkKS0+dXBkYXRlKFsnc3RyaXBlX2N1c3RvbWVyX2lkJyA9PiAkc3RyaXBlX2N1c3RvbWVyX2lkXSk7CiAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICRzdHJpcGVfY3VzdG9tZXJfaWQgPSAkc3RyaXBlX2N1c3RvbWVyLT5pZDsKICAgICAgICB9CgogICAgICAgIHJldHVybiAkc3RyaXBlX2N1c3RvbWVyX2lkOwogICAgfQp9CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjE6e3M6MjA6IlxBcHBcQXBpXENvbnRyb2xsZXJzIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MjA6IlxBcHBcQXBpXENvbnRyb2xsZXJzIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTE6IkNvbnRyb2xsZXJzIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjE6e3M6Mzg6IlxBcHBcQXBpXENvbnRyb2xsZXJzXFBheW1lbnRDb250cm9sbGVyIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXyI6MTE6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjM4OiJcQXBwXEFwaVxDb250cm9sbGVyc1xQYXltZW50Q29udHJvbGxlciI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE3OiJQYXltZW50Q29udHJvbGxlciI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6NTk6IlBheW1lbnQgZGF0YSByZXByZXNlbnRhdGlvbi4gUmVxdWlyZXMgQXV0aG9yaXphdGlvbiBoZWFkZXIuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6ODoiUmVzb3VyY2UiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjExOiIoIlBheW1lbnQiKSI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjE5OiJBcHBcQXBpXENvbnRyb2xsZXJzIjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlQWxpYXNlcyI7YToxMzp7czoxNToiUGF5VmlkZW9SZXF1ZXN0IjtzOjMyOiJBcHBcQXBpXFJlcXVlc3RzXFBheVZpZGVvUmVxdWVzdCI7czo2OiJTdHJpcGUiO3M6MTM6IlN0cmlwZVxTdHJpcGUiO3M6MTc6IlNlbmRSZW1pbmRlckVtYWlsIjtzOjI2OiJBcHBcSm9ic1xTZW5kUmVtaW5kZXJFbWFpbCI7czoxMjoiTm90aWZpY2F0aW9uIjtzOjIzOiJBcHBcTW9kZWxzXE5vdGlmaWNhdGlvbiI7czo1OiJWaWRlbyI7czoxNjoiQXBwXE1vZGVsc1xWaWRlbyI7czo2OiJDaGFyZ2UiO3M6MTM6IlN0cmlwZVxDaGFyZ2UiO3M6NjoiTWFpbGVyIjtzOjIzOiJBcHBcSHR0cFxIZWxwZXJzXE1haWxlciI7czo0OiJVc2VyIjtzOjE1OiJBcHBcTW9kZWxzXFVzZXIiO3M6MTI6IlBheW1lbnRzTGlzdCI7czoyMzoiQXBwXE1vZGVsc1xQYXltZW50c0xpc3QiO3M6NzoiUmVxdWVzdCI7czoyMjoiRGluZ29cQXBpXEh0dHBcUmVxdWVzdCI7czoyODoiU3RvcmVSZXNvdXJjZUZhaWxlZEV4Y2VwdGlvbiI7czo0ODoiRGluZ29cQXBpXEV4Y2VwdGlvblxTdG9yZVJlc291cmNlRmFpbGVkRXhjZXB0aW9uIjtzOjEyOiJFcGhlbWVyYWxLZXkiO3M6MTk6IlN0cmlwZVxFcGhlbWVyYWxLZXkiO3M6ODoiQ3VzdG9tZXIiO3M6MTU6IlN0cmlwZVxDdXN0b21lciI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwYXJlbnQiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozNToiXEFwcFxBcGlcQ29udHJvbGxlcnNcQmFzZUNvbnRyb2xsZXIiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNDoiQmFzZUNvbnRyb2xsZXIiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AaW1wbGVtZW50cyI7YTowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGNvbnN0YW50cyI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHByb3BlcnRpZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBtZXRob2RzIjthOjQ6e3M6NjA6IlxBcHBcQXBpXENvbnRyb2xsZXJzXFBheW1lbnRDb250cm9sbGVyOjpnZXRTdHJpcGVQdWJsaWNLZXkoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjE6IkdldCBTdHJpcGUgUHVibGljIEtleSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YTozOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjM6IkdldCI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MTk6IigiL2dldC1zdHJpcGUta2V5IikiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjE7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjExOiJUcmFuc2FjdGlvbiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6NTE3OiIoewogICAgQFJlcXVlc3QoaGVhZGVycz17IkF1dGhvcml6YXRpb24iOiAiQmVhcmVyIDxKV1Q+In0pLAogICAgQFJlc3BvbnNlKDIwMCwgYm9keT17ImRhdGEiOnsic3RyaXBlX2tleSIgOiAicGtfdGVzdF81OXFFMnBOVko5TWxCQWZ1MTczM0wzQnUifSwgInN0YXR1c19jb2RlIjogMjAwfSksCiAgICBAUmVzcG9uc2UoNDAxLCBib2R5PXsibWVzc2FnZSI6ICI0MjIgVW5wcm9jZXNzYWJsZSBFbnRpdHkuIiwKICAgICAgICAic3RhdHVzX2NvZGUiOiA0MDF9KSwKICAgIEBSZXNwb25zZSg0MjIsIGJvZHk9eyJtZXNzYWdlIjogIjQyMiBVbnByb2Nlc3NhYmxlIEVudGl0eSIsICJzdGF0dXNfY29kZSI6IDQyMiwgImVycm9ycyI6eyJzdHJpcGUgcHVibGljIGtleSI6CiAgICAgICAgeyIuZW52IFNUUklQRV9QVUJMSVNIQUJMRV9LRVkgbm90IGZvdW5kIn19fSksCiAgICBAUmVzcG9uc2UoNTAwLCBib2R5PXsiZXJyb3IiOiAiU2VydmVyIHNpZGUgZXJyb3IgbWVzc2FnZSIsICJzdGF0dXNfY29kZSI6IDUwMH0pCn0pIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToyO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo4OiJWZXJzaW9ucyI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6ODoiKHsidjEifSkiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjMwO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NjA6IlxBcHBcQXBpXENvbnRyb2xsZXJzXFBheW1lbnRDb250cm9sbGVyOjpnZXRTdHJpcGVQdWJsaWNLZXkoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE4OiJnZXRTdHJpcGVQdWJsaWNLZXkiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDE7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo1MDoiXEFwcFxBcGlcQ29udHJvbGxlcnNcUGF5bWVudENvbnRyb2xsZXI6OnBheVZpZGVvKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjEzOiJTdG9yZSBwYXltZW50IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjIwOiJVcGRhdGUgdmlkZW8gc3RhdHVzLiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjQ6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo3OiJyZXF1ZXN0IjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNWYXJpYWRpYyI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1JlZmVyZW5jZSI7YjowO3M6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjMzOiJcQXBwXEFwaVxSZXF1ZXN0c1xQYXlWaWRlb1JlcXVlc3QiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNToiUGF5VmlkZW9SZXF1ZXN0Ijt9fXM6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo0OiJQb3N0IjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czoxNDoiKCIvcGF5LXZpZGVvIikiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjI7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjExOiJUcmFuc2FjdGlvbiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6NTY3OiIoewogICAgQFJlcXVlc3QoYm9keT17InNvdXJjZSI6ICJ0b2tfYW1leCIsICJ2aWRlb19pZCIgOiA3MiwgImN1c3RvbWVyIjoiY3VzX0RFdlBBSHRQQzJQUk1SIiwgIm5lZWRfY3VzdG9tZXJfaWQiOmZhbHNlfQogICAgLCBoZWFkZXJzPXsiQXV0aG9yaXphdGlvbiI6ICJCZWFyZXIgPEpXVD4ifSksCiAgICBAUmVzcG9uc2UoMjAwLCBib2R5PXsiZGF0YSI6IHsgIm1lc3NhZ2UiOiAiU3VjY2VzcyBwYXkhIiB9LCAic3RhdHVzX2NvZGUiOiAyMDB9KSwKICAgIEBSZXNwb25zZSg0MDEsIGJvZHk9eyJtZXNzYWdlIjogIkZhaWxlZCB0byBhdXRoZW50aWNhdGUgYmVjYXVzZSBvZiBiYWQgY3JlZGVudGlhbHMgb3IgYW4gaW52YWxpZCBhdXRob3JpemF0aW9uIGhlYWRlci4iLAogICAgICAgICJzdGF0dXNfY29kZSI6IDQwMX0pLAogICAgQFJlc3BvbnNlKDQyMiwgYm9keT17Im1lc3NhZ2UiOiAiRXJyb3IgcGF5IiwgInN0YXR1c19jb2RlIjogNDIyfSksCiAgICBAUmVzcG9uc2UoNTAwLCBib2R5PXsiZXJyb3IiOiJTZXJ2ZXIgc2lkZSBlcnJvciBtZXNzYWdlIiwgInN0YXR1c19jb2RlIjogNTAwfSkKfSkiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjM7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjg6IlZlcnNpb25zIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czo4OiIoeyJ2MSJ9KSI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6MzA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1MDoiXEFwcFxBcGlcQ29udHJvbGxlcnNcUGF5bWVudENvbnRyb2xsZXI6OnBheVZpZGVvKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo4OiJwYXlWaWRlbyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo3OiJyZXF1ZXN0IjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MzM6IlxBcHBcQXBpXFJlcXVlc3RzXFBheVZpZGVvUmVxdWVzdCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE1OiJQYXlWaWRlb1JlcXVlc3QiO319czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NzU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo2MzoiXEFwcFxBcGlcQ29udHJvbGxlcnNcUGF5bWVudENvbnRyb2xsZXI6OmdldFN0cmlwZUVwaGVtZXJhbEtleSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czoyNDoiR2V0IFN0cmlwZSBFcGhlbWVyYWwgS2V5IjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjM6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6MzoiR2V0IjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czoxNTU6IigiL2dldC1zdHJpcGUtZXBoZW1lcmFsLWtleSIpCiogQFBhcmFtZXRlcnMoewogICAgIEBQYXJhbWV0ZXIoImFwaV92ZXJzaW9uIiwgcmVxdWlyZWQ9dHJ1ZSwgZGVzY3JpcHRpb249InN0cmlwZSBhcGkgY2hhbmdlbG9nIGRhdGUsIGV4YW1wbGUgMjAxOC0wNS0yMSIpCn0pIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czoxMToiVHJhbnNhY3Rpb24iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjczOToiKHsKICAgIEBSZXF1ZXN0KGhlYWRlcnM9eyJBdXRob3JpemF0aW9uIjogIkJlYXJlciA8SldUPiJ9KSwKICAgIEBSZXNwb25zZSgyMDAsIGJvZHk9eyJkYXRhIjogeyJrZXkiOiB7ImlkIjogImVwaGtleV8xQ2tTam9BREZXcmp2ZEp6b3RzM1VIVG0iLCJvYmplY3QiOiAiZXBoZW1lcmFsX2tleSIsCiJhc3NvY2lhdGVkX29iamVjdHMiOiB7eyJpZCI6ICJjdXNfQXNXWDVhanRrY3NiUEIiLCJ0eXBlIjogImN1c3RvbWVyIn19LCJjcmVhdGVkIjogMTUzMDc3ODk3MiwiZXhwaXJlcyI6IDE1MzA3ODI1NzIsCiAgICAibGl2ZW1vZGUiOiBmYWxzZSwic2VjcmV0IjogImVrX3Rlc3RfWVdOamRGOHhRVmRzWlhjbXAyWkVwNkxGUlpiVmxOV1UxTlkxUnJRbkprVjNSV2NtTkdaREZ5VUVaIn19LCAic3RhdHVzX2NvZGUiOiAyMDB9KSwKICAgIEBSZXNwb25zZSg0MDEsIGJvZHk9eyJtZXNzYWdlIjogIjQyMiBVbnByb2Nlc3NhYmxlIEVudGl0eS4iLAogICAgICAgICJzdGF0dXNfY29kZSI6IDQwMX0pLAogICAgQFJlc3BvbnNlKDQyMiwgYm9keT17Im1lc3NhZ2UiOiAiNDIyIFVucHJvY2Vzc2FibGUgRW50aXR5IiwgInN0YXR1c19jb2RlIjogNDIyLCAiZXJyb3JzIjp7ImFwaV92ZXJzaW9uIjoKICAgICAgICB7IkFwaSB2ZXJzaW9uIHJlcXVpcmVkISJ9fX0pLAogICAgQFJlc3BvbnNlKDUwMCwgYm9keT17ImVycm9yIjogIlNlcnZlciBzaWRlIGVycm9yIG1lc3NhZ2UiLCAic3RhdHVzX2NvZGUiOiA1MDB9KQp9KSI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fWk6MjtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6ODoiVmVyc2lvbnMiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjg6Iih7InYxIn0pIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjozMDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjYzOiJcQXBwXEFwaVxDb250cm9sbGVyc1xQYXltZW50Q29udHJvbGxlcjo6Z2V0U3RyaXBlRXBoZW1lcmFsS2V5KCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoyMToiZ2V0U3RyaXBlRXBoZW1lcmFsS2V5Ijt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjc6InJlcXVlc3QiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyMzoiXERpbmdvXEFwaVxIdHRwXFJlcXVlc3QiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo3OiJSZXF1ZXN0Ijt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIwODtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fX1zOjYxOiJcQXBwXEFwaVxDb250cm9sbGVyc1xQYXltZW50Q29udHJvbGxlcjo6Y2hlY2tTdHJpcGVDdXN0b21lcigpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjYxOiJcQXBwXEFwaVxDb250cm9sbGVyc1xQYXltZW50Q29udHJvbGxlcjo6Y2hlY2tTdHJpcGVDdXN0b21lcigpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTk6ImNoZWNrU3RyaXBlQ3VzdG9tZXIiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjM2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fX1zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AdXNlZFRyYWl0cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO319fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";