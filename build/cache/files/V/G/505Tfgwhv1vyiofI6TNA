1665722086
waR3U4bTeM%3A8ec6f1b11610a5be9038b584278e0e76-7ffb1cccf1e5f68b051222c84d5107c7
s:79172:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjdmZmIxY2NjZjFlNWY2OGIwNTEyMjJjODRkNTEwN2M3IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MjA6IlJldmlld0NvbnRyb2xsZXIucGhwIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NDE6ImFwcC9IdHRwL0NvbnRyb2xsZXJzL1Jldmlld0NvbnRyb2xsZXIucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czozMDEzOToiPD9waHAKCm5hbWVzcGFjZSBBcHBcSHR0cFxDb250cm9sbGVyczsKCnVzZSBBcHBcTW9kZWxzXFBlcmZvcm1hbmNlTGV2ZWw7CnVzZSBBcHBcTW9kZWxzXFJldmlld1F1ZXN0aW9uOwp1c2UgQXBwXE1vZGVsc1xUZW1wb3JhcnlSZXZpZXc7CnVzZSBJbGx1bWluYXRlXEh0dHBcUmVxdWVzdDsKdXNlIElsbHVtaW5hdGVcUm91dGluZ1xSZWRpcmVjdG9yOwp1c2UgQXBwXEh0dHBcUmVxdWVzdHM7CnVzZSBBcHBcTW9kZWxzXFZpZGVvOwp1c2UgQXBwXE1vZGVsc1xVc2VyOwp1c2UgQXBwXE1vZGVsc1xSZXZpZXc7CnVzZSBBcHBcTW9kZWxzXE5vdGlmaWNhdGlvbjsKdXNlIEFwcFxNb2RlbHNcVHJhbnNhY3Rpb247CnVzZSBGaWxlOwp1c2UgU3RvcmFnZTsKdXNlIENhcmJvblxDYXJib247CnVzZSBBcHBcSHR0cFxIZWxwZXJzXE1haWxlcjsKdXNlIElsbHVtaW5hdGVcU3VwcG9ydFxGYWNhZGVzXERCOwp1c2UgQXBwXEpvYnNcQ29uY2F0UmV2aWV3VmlkZW9BdWRpbzsKdXNlIElsbHVtaW5hdGVcU3VwcG9ydFxGYWNhZGVzXExvZzsKdXNlIFZhbGlkYXRvcjsKdXNlIFNlc3Npb247CmNsYXNzIFJldmlld0NvbnRyb2xsZXIgZXh0ZW5kcyBDb250cm9sbGVyCnsKICAgIHByaXZhdGUgJF91c2VyID0gbnVsbDsKCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoUmVxdWVzdCAkcmVxdWVzdCwgUmVkaXJlY3RvciAkcmVkaXJlY3QpCiAgICB7CgogICAgICAgICR0aGlzLT5fdXNlciA9ICRyZXF1ZXN0LT51c2VyKCk7CgogICAgICAgIGlmIChlbXB0eSgkdGhpcy0+X3VzZXIpKSB7CiAgICAgICAgICAgICRyZWRpcmVjdC0+dG8oJ2xvZ2luJyktPnNlbmQoKTsKICAgICAgICB9CiAgICB9CgogICAgLyoqCiAgICAgKiBEaXNwbGF5IGEgbGlzdGluZyBvZiB0aGUgcmVzb3VyY2UuCiAgICAgKgogICAgICogQHJldHVybiBcSWxsdW1pbmF0ZVxIdHRwXFJlc3BvbnNlCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBpbmRleCgpCiAgICB7CiAgICAgICAgaWYgKCR0aGlzLT5fdXNlci0+cm9sZSA9PSBVc2VyOjpDT0FDSF9ST0xFKSB7CiAgICAgICAgICAgICRyZXN1bHQgPSBSZXZpZXc6OmdldEJ5VXNlcklkTGlzdCgkdGhpcy0+X3VzZXItPmlkKTsKCiAgICAgICAgICAgIGZvcmVhY2ggKCRyZXN1bHQgYXMgJiRyZXZpZXcpCiAgICAgICAgICAgICAgICBpZiAoIWVtcHR5KCRyZXZpZXcpKSB7CiAgICAgICAgICAgICAgICAgICAgJHJldmlldy0+b3ZlcmFsbF9yYXRpbmcgPSByb3VuZCgoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcmV2aWV3LT5hcnRpc3R5ICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyZXZpZXctPmZvcm1hdGlvbiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcmV2aWV3LT5pbnRlcnByZXRhdGlvbiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcmV2aWV3LT5jcmVhdGl2aXR5ICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyZXZpZXctPnN0eWxlICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyZXZpZXctPmVuZXJneSArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcmV2aWV3LT5wcmVjaXNpb24gKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJldmlldy0+dGltaW5nICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyZXZpZXctPmZvb3R3b3JrICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyZXZpZXctPmFsaW5nbWVudCArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcmV2aWV3LT5iYWxhbmNlICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyZXZpZXctPmZvY3VzCiAgICAgICAgICAgICAgICAgICAgICAgICkgLyAxMiwgMik7CgogICAgICAgICAgICAgICAgICAgICRyZXZpZXctPmRheXNfYWdvID0gZmxvb3IoKHRpbWUoKSAtIHN0cnRvdGltZSgkcmV2aWV3LT5jcmVhdGVkX2F0KSkgLyAzNjAwIC8gMjQpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdmlldygncmV2aWV3L2luZGV4JywgWyJyZXZpZXdzIiA9PiAkcmVzdWx0XSk7CiAgICAgICAgfQoKICAgIH0KCiAgICAvKioKICAgICAqIFNob3cgdGhlIGZvcm0gZm9yIGNyZWF0aW5nIGEgbmV3IHJlc291cmNlLgogICAgICoKICAgICAqIEByZXR1cm4gXElsbHVtaW5hdGVcSHR0cFxSZXNwb25zZQogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gY3JlYXRlKCRpZCkKICAgIHsKICAgICAgICBpZiAoJHRoaXMtPl91c2VyLT5yb2xlID09IFVzZXI6OkNPQUNIX1JPTEUpIHsKICAgICAgICAgICAgLy8kdmlkZW8gPSBWaWRlbzo6Z2V0QnlJZCgkaWQpOwogICAgICAgICAgICAkcGVyZm9ybWFuY2VfbGV2ZWxzID0gUGVyZm9ybWFuY2VMZXZlbDo6YWxsKCk7CiAgICAgICAgICAgICR2aWRlbyA9IFZpZGVvOjp3aGVyZShbJ2lkJyA9PiAkaWQsICdjb2FjaF9pZCcgPT4gYXV0aCgpLT51c2VyKCktPmlkXSkKICAgICAgICAgICAgICAgIC0+d2l0aChbJ3RlbXBvcmFyeV9yZXZpZXcnLCAncmV2aWV3J10pCiAgICAgICAgICAgICAgICAtPmZpcnN0T3JGYWlsKCk7CiAgICAgICAgICAgIGlmKCEkdmlkZW8tPnJldmlldykgVmlkZW86OmNoYW5nZVN0YXR1cygkaWQsIFZpZGVvOjpTVEFUVVNfQUNDRVBUX1BST1BPU0FMKTsKCiAgICAgICAgICAgIC8qIHNlbGVjdCBwZXJmb21lciBkYXRhICovCiAgICAgICAgICAgICR1c2VyID0gREI6OnRhYmxlKCd2aWRlb3MgYXMgdicpCiAgICAgICAgICAgICAgICAtPmpvaW4oJ3VzZXJzIGFzIHUnLCAndi51c2VyX2lkJywgJz0nLCAndS5pZCcpCiAgICAgICAgICAgICAgICAtPndoZXJlKCd2LmlkJywgJz0nLCAkaWQpCiAgICAgICAgICAgICAgICAtPnNlbGVjdCgidS5maXJzdF9uYW1lIGFzIHVzZXJfZmlyc3RfbmFtZSIsICJ1LmlkIGFzIHVzZXJfaWQiLCAidS5lbWFpbCBhcyBtYWlsIikKICAgICAgICAgICAgICAgIC0+Zmlyc3QoKTsKCgogICAgICAgICAgICBpZiAoJHZpZGVvLT5zdGFydGVkX3Jldmlld19zdGF0dXMgPT0gMCkgewogICAgICAgICAgICAgICAgVmlkZW86OndoZXJlKCdpZCcsICRpZCktPnVwZGF0ZShbJ3N0YXJ0ZWRfcmV2aWV3X3N0YXR1cycgPT4gMV0pOwogICAgICAgICAgICAgICAgJG1haWwgPSBuZXcgTWFpbGVyKCk7CiAgICAgICAgICAgICAgICAkbWFpbC0+c3ViamVjdCA9ICdDb2FjaCBzdGFydGVkIGEgcmV2aWV3JzsKICAgICAgICAgICAgICAgICRtYWlsLT50b19lbWFpbCA9ICR1c2VyLT5tYWlsOwogICAgICAgICAgICAgICAgJG1haWwtPnNlbmRNYWlsKCdhdXRoLmVtYWlscy5jb2FjaFN0YXJ0ZWRSZXZpZXcnLAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgJ3VzZXJfbmFtZScgPT4gJHVzZXItPnVzZXJfZmlyc3RfbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2NvYWNoX25hbWUnID0+ICR0aGlzLT5fdXNlci0+Zmlyc3RfbmFtZQogICAgICAgICAgICAgICAgICAgIF0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZigkdmlkZW8tPnRlbXBvcmFyeV9yZXZpZXcpewogICAgICAgICAgICAgICAgcmV0dXJuIHZpZXcoJ3Jldmlldy9jcmVhdGVfZmlyc3Rfc3RlcF90ZW1wJywgWyJ2aWRlbyIgPT4gJHZpZGVvLCAncGVyZm9ybWFuY2VfbGV2ZWxzJyA9PiAkcGVyZm9ybWFuY2VfbGV2ZWxzXSk7CiAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgcmV0dXJuIHZpZXcoJ3Jldmlldy9jcmVhdGVfZmlyc3Rfc3RlcF9uZXcnLCBbInZpZGVvIiA9PiAkdmlkZW8sICdwZXJmb3JtYW5jZV9sZXZlbHMnID0+ICRwZXJmb3JtYW5jZV9sZXZlbHNdKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gY3JlYXRlU2Vjb25kU3RlcCgkdmlkZW9faWQpCiAgICB7CiAgICAgICAgaWYgKCR0aGlzLT5fdXNlci0+cm9sZSA9PSBVc2VyOjpDT0FDSF9ST0xFKSB7CiAgICAgICAgICAgIC8vJHZpZGVvID0gVmlkZW86OmdldEJ5SWQoJGlkKTsKICAgICAgICAgICAgJHBlcmZvcm1hbmNlX2xldmVscyA9IFBlcmZvcm1hbmNlTGV2ZWw6OmFsbCgpOwogICAgICAgICAgICAkdmlkZW8gPSBWaWRlbzo6d2hlcmVJZCgkdmlkZW9faWQpLT53aXRoKFsndGVtcG9yYXJ5X3JldmlldycsICdyZXZpZXcnXSktPmZpcnN0KCk7CiAgICAgICAgICAgIAogICAgICAgICAgICBpZigkdmlkZW8tPnRlbXBvcmFyeV9yZXZpZXcpewogICAgICAgICAgICAgICAgJHRlbXBfdmlkZW8gPSAkdmlkZW8tPnRlbXBvcmFyeV9yZXZpZXctPnJldmlld191cmw7CiAgICAgICAgICAgICAgICAkdGVtcF9wYXRoID0gcHVibGljX3BhdGgoY29uZmlnKCd2aWRlby50ZW1wX3Jldmlld19wYXRoJykpIC4gJHRlbXBfdmlkZW87CiAgICAgICAgICAgICAgICBpZighZmlsZV9leGlzdHMoJHRlbXBfcGF0aCkgfHwgJHZpZGVvLT50ZW1wb3JhcnlfcmV2aWV3LT5yZXZpZXdfdXJsID09IE5VTEwpewogICAgICAgICAgICAgICAgICAgIFRlbXBvcmFyeVJldmlldzo6d2hlcmUoJ2lkJywkdmlkZW8tPnRlbXBvcmFyeV9yZXZpZXctPmlkKS0+ZGVsZXRlKCk7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZGlyZWN0KCdyZXZpZXcvY3JlYXRlLycgLiAkdmlkZW9faWQpLT53aXRoRXJyb3JzKFsnUGxlYXNlIFJlLXJlY29yZCBhZ2Fpbi4gVGVtcCByZXZpZXcgb3IgZmlsZSBkb2VzIG5vdCBleGlzdC4nXSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmKCR2aWRlby0+dGVtcG9yYXJ5X3Jldmlldyl7CiAgICAgICAgICAgICAgICBpZigkdmlkZW8tPnBhY2thZ2VfaWQgPT0gMSl7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZpZXcoJ3Jldmlldy9jcmVhdGVfYXVkaXRpb25fc2Vjb25kX3N0ZXAnLCBbInZpZGVvIiA9PiAkdmlkZW8sICdwZXJmb3JtYW5jZV9sZXZlbHMnID0+ICRwZXJmb3JtYW5jZV9sZXZlbHNdKTsKICAgICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgICAgIHJldHVybiB2aWV3KCdyZXZpZXcvY3JlYXRlX3NlY29uZF9zdGVwJywgWyJ2aWRlbyIgPT4gJHZpZGVvLCAncGVyZm9ybWFuY2VfbGV2ZWxzJyA9PiAkcGVyZm9ybWFuY2VfbGV2ZWxzXSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgcmV0dXJuIHJlZGlyZWN0KCdyZXZpZXcvY3JlYXRlLycgLiAkdmlkZW9faWQpOwogICAgICAgICAgICB9CiAgICAgICAgfWVsc2V7CiAgICAgICAgICAgIGFib3J0KDQwNCk7CiAgICAgICAgfQogICAgfQoKCgogICAgLyoqCiAgICAgKiBTdG9yZSBhIG5ld2x5IGNyZWF0ZWQgcmVzb3VyY2UgaW4gc3RvcmFnZS4KICAgICAqCiAgICAgKiBAcGFyYW0gIFxJbGx1bWluYXRlXEh0dHBcUmVxdWVzdCAkcmVxdWVzdAogICAgICogQHJldHVybiBcSWxsdW1pbmF0ZVxIdHRwXFJlc3BvbnNlCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiBzdG9yZShSZXF1ZXN0ICRyZXF1ZXN0KQogICAgewoKLy8gICAgICAgIGlmICgkdGhpcy0+X3VzZXItPnJvbGUgPT0gVXNlcjo6Q09BQ0hfUk9MRSkgewovLyAgICAgICAgICAgICRmaWxlbmFtZSA9ICRyZXF1ZXN0LT5maWxlbmFtZTsKLy8gICAgICAgICAgICAkdmlkZW9faWQgPSAkcmVxdWVzdC0+dmlkZW9faWQ7Ci8vICAgICAgICAgICAgJGRhdGFbJ3VybCddID0gIi9hdWRpby8iIC4gJGZpbGVuYW1lOwovLyAgICAgICAgICAgICRkYXRhWyJ1c2VyX2lkIl0gPSAkdGhpcy0+X3VzZXItPmlkOwovLyAgICAgICAgICAgICRkYXRhWyJ2aWRlb19pZCJdID0gJHZpZGVvX2lkOwovLyAgICAgICAgICAgICRkYXRhWyJzdGF0dXMiXSA9IDE7Ci8vICAgICAgICAgICAgJGRhdGFbInBsYXlfdGltZSJdID0gJHJlcXVlc3QtPnBsYXlfdGltZTsKLy8gICAgICAgICAgICAkZGF0YVsiY3JlYXRlZF9hdCJdID0gbXlzcWxfZGF0ZSgpOwovLyAgICAgICAgICAgICRkYXRhWyJ1cGRhdGVkX2F0Il0gPSBteXNxbF9kYXRlKCk7Ci8vICAgICAgICAgICAgJGlkID0gUmV2aWV3OjpzYXZlUmV2aWV3KCRkYXRhKTsKLy8KLy8gICAgICAgICAgICAvL1ZpZGVvOjpjaGFuZ2VTdGF0dXMoJHZpZGVvX2lkLCBWaWRlbzo6U1RBVFVTX1JFVklFV0VEKTsKLy8KLy8gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbInN0YXR1cyIgPT4gInN1Y2Nlc3MiLCAibWVzc2FnZSIgPT4gIlJldmlldyBzdWNjZXNzZnVsbHkgYWRkZWQuIiwgInJldmlld19pZCIgPT4gJGlkXSk7Ci8vICAgICAgICB9CgogICAgICAgIGlmICgkdGhpcy0+X3VzZXItPnJvbGUgPT0gVXNlcjo6Q09BQ0hfUk9MRSkgewogICAgICAgICAgLy8gICRkYXRhWyd1cmwnXSA9ICIvYXVkaW8vIiAuICRyZXF1ZXN0LT5maWxlbmFtZTsKICAgICAgICAgICAgJGRhdGFbJ3VybCddID0gJHJlcXVlc3QtPmZpbGVuYW1lOwogICAgICAgICAgICAkZGF0YVsidXNlcl9pZCJdID0gJHRoaXMtPl91c2VyLT5pZDsKICAgICAgICAgICAgJGRhdGFbInZpZGVvX2lkIl0gPSAkcmVxdWVzdC0+dmlkZW9faWQ7CiAgICAgICAgICAgICRkYXRhWyJwbGF5X3RpbWUiXSA9ICRyZXF1ZXN0LT5wbGF5X3RpbWU7CiAgICAgICAgICAgICRkYXRhWyJjcmVhdGVkX2F0Il0gPSBteXNxbF9kYXRlKCk7CiAgICAgICAgICAgICRkYXRhWyJ1cGRhdGVkX2F0Il0gPSBteXNxbF9kYXRlKCk7CiAgICAgICAgICAgICRpZCA9IFRlbXBvcmFyeVJldmlldzo6c2F2ZVRlbXBSZXZpZXcoJGRhdGEpOwoKICAgICAgICAgICAgJGpvYiA9IChuZXcgQ29uY2F0UmV2aWV3VmlkZW9BdWRpbyhbJ3ZpZGVvX2lkJyA9PiAkcmVxdWVzdC0+Z2V0KCd2aWRlb19pZCcpXSkpOwogICAgICAgICAgICBkaXNwYXRjaCgkam9iKTsKCiAgICAgICAgICAgIHJldHVybiByZXNwb25zZSgpLT5qc29uKFsic3RhdHVzIiA9PiAic3VjY2VzcyIsICJtZXNzYWdlIiA9PiAiVGVtcG9yYXJ5IFJldmlldyBzdWNjZXNzZnVsbHkgYWRkZWQuIiwgInJldmlld19pZCIgPT4gJGlkXSk7CiAgICAgICAgfQoKCiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIHN0b3JlQXVkaW9GaWxlKFJlcXVlc3QgJHJlcXVlc3QpCiAgICB7CiAgICAgICAgLy9hYm9ydF91bmxlc3MoJHRoaXMtPl91c2VyLT5pc0NvYWNoKCksIDQwNCk7CiAgICAgICAgaWYoICEkdGhpcy0+X3VzZXItPmlzQ29hY2goKSAmJiAhJHRoaXMtPl91c2VyLT5yb2xlID09IFVzZXI6OkFHRU5DWV9ST0xFKXsKICAgICAgICAgICAgYWJvcnQoNDA0KTsKICAgICAgICB9CiAgICAgICAgaWYgKCRyZXF1ZXN0LT5oYXNGaWxlKCdjaHVuaycpKSB7CiAgICAgICAgICAgICR0ZW1wX3BhdGggPSBwdWJsaWNfcGF0aChjb25maWcoJ3ZpZGVvLnJldmlld19hdWRpb19wYXRoJykgLiAndGVtcCcpOwogICAgICAgICAgICBpZiAoIUZpbGU6OmV4aXN0cygkdGVtcF9wYXRoKSkgewogICAgICAgICAgICAgICAgRmlsZTo6bWFrZURpcmVjdG9yeSgkdGVtcF9wYXRoLCAwNzU1LCB0cnVlKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAkcGFydCA9ICRyZXF1ZXN0LT5maWxlKCdjaHVuaycpOwogICAgICAgICAgICAkY2h1bmsgPSBmaWxlX2dldF9jb250ZW50cygkcGFydCk7CiAgICAgICAgICAgICRmaWxlID0gJHRlbXBfcGF0aCAuICRyZXF1ZXN0LT5nZXQoJ25hbWUnKTsKICAgICAgICAgICAgZmlsZV9wdXRfY29udGVudHMoJGZpbGUsICRjaHVuaywgRklMRV9BUFBFTkQgfCBMT0NLX0VYKTsKICAgICAgICAgICAgJHRvdGFsID0gKGludCkkcmVxdWVzdC0+Z2V0KCd0b3RhbCcpOwogICAgICAgICAgICAkY3VycmVudCA9IChpbnQpJHJlcXVlc3QtPmdldCgnY3VycmVudCcpOwogICAgICAgICAgICBpZiAoJGN1cnJlbnQgPCAkdG90YWwpIHsKICAgICAgICAgICAgICAgIHJldHVybiBqc29uX2VuY29kZShbJ3N0YXR1cycgPT4gJ3Byb2dyZXNzJywgJ3N1Y2Nlc3MnID0+IHRydWVdKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAkZmlsZW5hbWUgPSAkdGhpcy0+X3VzZXItPmlkIC4gJ18nIC4gJHJlcXVlc3QtPmdldCgnbmFtZScpOwogICAgICAgICAgICAkZmluYWxfcGF0aCA9IHB1YmxpY19wYXRoKGNvbmZpZygndmlkZW8ucmV2aWV3X2F1ZGlvX3BhdGgnKSkgLiAkZmlsZW5hbWU7CiAgICAgICAgICAgIEZpbGU6Om1vdmUoJGZpbGUsICRmaW5hbF9wYXRoKTsKCiAgICAgICAgICAgIHJldHVybiByZXNwb25zZSgpLT5qc29uKFsnc3RhdHVzJyA9PiAnY29tcGxldGUnLCAnc3VjY2VzcycgPT4gdHJ1ZSwgJ25hbWUnID0+ICRmaWxlbmFtZV0pOwogICAgICAgIH0gZWxzZQogICAgICAgICAgICBhYm9ydCg0MDMpOwogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiBzYXZlUmF0aW5ncyhSZXF1ZXN0ICRyZXF1ZXN0KQogICAgewogICAgICAgIGlmICgkcmVxdWVzdC0+aXNNZXRob2QoJ3Bvc3QnKSAmJiAkdGhpcy0+X3VzZXItPnJvbGUgPT0gVXNlcjo6Q09BQ0hfUk9MRSkgewoKICAgICAgICAgICAgJHJhdGluZ3MgPSAkcmVxdWVzdC0+cmF0aW5nczsKCiAgICAgICAgICAgIC8qCiAgICAgICAgICAgIFRPRE86OkNyZWF0ZSBhIHJldmlldyB2aWRlbyBzZXBhcmF0ZWQgaW50byBkaWZmZXJlbnQgZW50aXRpZXMsIGRhdGEgdmFsaWRhdGlvbiBpcyBub3QgZm91bmQuCiAgICAgICAgICAgIEl0IHdvdWxkIGJlIG5pY2UgdG8gZG8gb25lIGhhbmRsZXIuIEFuZCBkbyB2YWxpZGF0aW9uIGFuZCB2ZXJpZmljYXRpb24gdGhlcmUuIEluIG9uZSBwbGFjZS4KICAgICAgICAgICAgKi8KICAgICAgICAgICAgLypURUNITklRVUUgU0NPUkUsIEVYUFJFU1NJT04sIENIT1JFT0dSQVBIWSB2YWxpZGF0aW9uIGJsb2NrKi8KICAgICAgICAgICAgJHJ1bGVzID0gYXJyYXkoCiAgICAgICAgICAgICAgICd0aW1pbmcnID0+ICdyZXF1aXJlZHxudW1lcmljfG1pbjowfG5vdF9pbjowJywKICAgICAgICAgICAgICAgJ2Zvb3R3b3JrJyA9PiAncmVxdWlyZWR8bnVtZXJpY3xtaW46MHxub3RfaW46MCcsCiAgICAgICAgICAgICAgICdhbGluZ21lbnQnID0+ICdyZXF1aXJlZHxudW1lcmljfG1pbjowfG5vdF9pbjowJywKICAgICAgICAgICAgICAgJ2JhbGFuY2UnID0+ICdyZXF1aXJlZHxudW1lcmljfG1pbjowfG5vdF9pbjowJywKICAgICAgICAgICAgICAgJ2ZvY3VzJyA9PiAncmVxdWlyZWR8bnVtZXJpY3xtaW46MHxub3RfaW46MCcsCiAgICAgICAgICAgICAgICdwcmVjaXNpb24nID0+ICdyZXF1aXJlZHxudW1lcmljfG1pbjowfG5vdF9pbjowJywKICAgICAgICAgICAgICAgJ2VuZXJneScgPT4gJ3JlcXVpcmVkfG51bWVyaWN8bWluOjB8bm90X2luOjAnLAogICAgICAgICAgICAgICAnc3R5bGUnID0+ICdyZXF1aXJlZHxudW1lcmljfG1pbjowfG5vdF9pbjowJywKICAgICAgICAgICAgICAgJ2NyZWF0aXZpdHknID0+ICdyZXF1aXJlZHxudW1lcmljfG1pbjowfG5vdF9pbjowJywKICAgICAgICAgICAgICAgJ2ludGVycHJldGF0aW9uJyA9PiAncmVxdWlyZWR8bnVtZXJpY3xtaW46MHxub3RfaW46MCcsCiAgICAgICAgICAgICAgICdmb3JtYXRpb24nID0+ICdyZXF1aXJlZHxudW1lcmljfG1pbjowfG5vdF9pbjowJywKICAgICAgICAgICAgICAgJ2FydGlzdHknID0+ICdyZXF1aXJlZHxudW1lcmljfG1pbjowfG5vdF9pbjowJywKICAgICAgICAgICAgICAgICd0aW1pbmdfY29tbWVudCcgPT4gJ3JlcXVpcmVkfHN0cmluZ3xtYXg6NTAwJywKICAgICAgICAgICAgICAgICdmb290d29ya19jb21tZW50JyA9PiAncmVxdWlyZWR8c3RyaW5nfG1heDo1MDAnLAogICAgICAgICAgICAgICAgJ2FsaW5nbWVudF9jb21tZW50JyA9PiAncmVxdWlyZWR8c3RyaW5nfG1heDo1MDAnLAogICAgICAgICAgICAgICAgJ2JhbGFuY2VfY29tbWVudCcgPT4gJ3JlcXVpcmVkfHN0cmluZ3xtYXg6NTAwJywKICAgICAgICAgICAgICAgICdmb2N1c19jb21tZW50JyA9PiAncmVxdWlyZWR8c3RyaW5nfG1heDo1MDAnLAogICAgICAgICAgICAgICAgJ3ByZWNpc2lvbl9jb21tZW50JyA9PiAncmVxdWlyZWR8c3RyaW5nfG1heDo1MDAnLAogICAgICAgICAgICAgICAgJ2VuZXJneV9jb21tZW50JyA9PiAncmVxdWlyZWR8c3RyaW5nfG1heDo1MDAnLAogICAgICAgICAgICAgICAgJ3N0eWxlX2NvbW1lbnQnID0+ICdyZXF1aXJlZHxzdHJpbmd8bWF4OjUwMCcsCiAgICAgICAgICAgICAgICAnY3JlYXRpdml0eV9jb21tZW50JyA9PiAncmVxdWlyZWR8c3RyaW5nfG1heDo1MDAnLAogICAgICAgICAgICAgICAgJ2ludGVycHJldGF0aW9uX2NvbW1lbnQnID0+ICdyZXF1aXJlZHxzdHJpbmd8bWF4OjUwMCcsCiAgICAgICAgICAgICAgICAnZm9ybWF0aW9uX2NvbW1lbnQnID0+ICdyZXF1aXJlZHxzdHJpbmd8bWF4OjUwMCcsCiAgICAgICAgICAgICAgICAnYXJ0aXN0eV9jb21tZW50JyA9PiAncmVxdWlyZWR8c3RyaW5nfG1heDo1MDAnLAogICAgICAgICAgICApOwogICAgICAgICAgICAkdmFsTXNnID0gWwogICAgICAgICAgICAgICAncmVxdWlyZWQnID0+ICdUaGUgOmF0dHJpYnV0ZSBmaWVsZCBpcyByZXF1aXJlZCEnLAogICAgICAgICAgICAgICAnbWF4JyA9PiAnTWF4aW11bSBsZW5ndGggb2YgdGhlIGZpZWxkIDphdHRyaWJ1dGUgaXMgNTAwIGNoYXJhY3RlcnMhJywKICAgICAgICAgICAgXTsKICAgICAgICAgICAgJGZlYWxkTmFtZSA9IFsKICAgICAgICAgICAgICAgJ3RpbWluZycgPT4gJ1RpbWluZyBSYXRpbmcnLAogICAgICAgICAgICAgICAnZm9vdHdvcmsnID0+ICdGb290d29yayBSYXRpbmcnLAogICAgICAgICAgICAgICAnYWxpbmdtZW50JyA9PiAnQWxpZ25tZW50IFJhdGluZycsCiAgICAgICAgICAgICAgICdiYWxhbmNlJyA9PiAnQmFsYW5jZSBSYXRpbmcnLAogICAgICAgICAgICAgICAnZm9jdXMnID0+ICdGb2N1cyBSYXRpbmcnLAogICAgICAgICAgICAgICAncHJlY2lzaW9uJyA9PiAnUHJlY2lzaW9uIFJhdGluZycsCiAgICAgICAgICAgICAgICdlbmVyZ3knID0+ICdFbmVyZ3kgUmF0aW5nJywKICAgICAgICAgICAgICAgJ3N0eWxlJyA9PiAnU3R5bGUgUmF0aW5nJywKICAgICAgICAgICAgICAgJ2NyZWF0aXZpdHknID0+ICdDcmVhdGl2aXR5IFJhdGluZycsCiAgICAgICAgICAgICAgICdpbnRlcnByZXRhdGlvbicgPT4gJ0ludGVycHJldGF0aW9uIFJhdGluZycsCiAgICAgICAgICAgICAgICdmb3JtYXRpb24nID0+ICdGb3JtYXRpb24gUmF0aW5nJywKICAgICAgICAgICAgICAgJ2FydGlzdHknID0+ICdBcnRpc3R5IFJhdGluZycsCiAgICAgICAgICAgICAgICd0aW1pbmdfY29tbWVudCcgPT4gJ1RpbWluZyBDb21tZW50JywKICAgICAgICAgICAgICAgICdmb290d29ya19jb21tZW50JyA9PiAnRm9vdHdvcmsgQ29tbWVudCcsCiAgICAgICAgICAgICAgICAnYWxpbmdtZW50X2NvbW1lbnQnID0+ICdBbGlnbm1lbnQgQ29tbWVudCcsCiAgICAgICAgICAgICAgICAnYmFsYW5jZV9jb21tZW50JyA9PiAnQmFsYW5jZSBDb21tZW50JywKICAgICAgICAgICAgICAgICdmb2N1c19jb21tZW50JyA9PiAnRm9jdXMgQ29tbWVudCcsCiAgICAgICAgICAgICAgICAncHJlY2lzaW9uX2NvbW1lbnQnID0+ICdQcmVjaXNpb24gQ29tbWVudCcsCiAgICAgICAgICAgICAgICAnZW5lcmd5X2NvbW1lbnQnID0+ICdFbmVyZ3kgQ29tbWVudCcsCiAgICAgICAgICAgICAgICAnc3R5bGVfY29tbWVudCcgPT4gJ1N0eWxlIENvbW1lbnQnLAogICAgICAgICAgICAgICAgJ2NyZWF0aXZpdHlfY29tbWVudCcgPT4gJ0NyZWF0aXZpdHkgQ29tbWVudCcsCiAgICAgICAgICAgICAgICAnaW50ZXJwcmV0YXRpb25fY29tbWVudCcgPT4gJ0ludGVycHJldGF0aW9uIENvbW1lbnQnLAogICAgICAgICAgICAgICAgJ2Zvcm1hdGlvbl9jb21tZW50JyA9PiAnRm9ybWF0aW9uIENvbW1lbnQnLAogICAgICAgICAgICAgICAgJ2FydGlzdHlfY29tbWVudCcgPT4gJ0FydGlzdHJ5IENvbW1lbnQnLAogICAgICAgICAgICBdOwogICAgICAgICAgICAkdmFsaWRhdG9yID0gXFZhbGlkYXRvcjo6bWFrZSgkcmF0aW5ncywgJHJ1bGVzLCAkdmFsTXNnKTsKICAgICAgICAgICAgJHZhbGlkYXRvci0+c2V0QXR0cmlidXRlTmFtZXMoJGZlYWxkTmFtZSk7CiAgICAgICAgICAgIGlmICgkdmFsaWRhdG9yLT5mYWlscygpKSByZXR1cm4ganNvbl9lbmNvZGUoWydzdGF0dXMnID0+ICd2YWxfZXJyb3InLCAnZXJyb3JzJyA9PiAkdmFsaWRhdG9yLT5lcnJvcnMoKV0pOwogICAgICAgICAgICAvKnZhbGlkYXRpb24gYmxvY2sgZW5kKi8KCiAgICAgICAgICAgICR2aWRlbyA9IFZpZGVvOjp3aGVyZUlkKCRyZXF1ZXN0LT52aWRlb19pZCktPndpdGgoWydyZXZpZXcnLCd0ZW1wb3JhcnlfcmV2aWV3J10pLT5maXJzdCgpOwogICAgICAgICAgICBpZigkdmlkZW8tPnJldmlldyl7CiAgICAgICAgICAgICAgICBSZXZpZXc6OnJlbW92ZVJldmlld0ZpbGUoJHZpZGVvLT5yZXZpZXctPnJldmlld191cmwpOwogICAgICAgICAgICAgICAgJGlkID0gJHZpZGVvLT5yZXZpZXctPmlkOwogICAgICAgICAgICAgICAgUmV2aWV3Ojp3aGVyZUlkKCR2aWRlby0+cmV2aWV3LT5pZCktPnVwZGF0ZShbCiAgICAgICAgICAgICAgICAidXJsIiA9PiAkdmlkZW8tPnRlbXBvcmFyeV9yZXZpZXctPnVybCwKICAgICAgICAgICAgICAgICJ1c2VyX2lkIiA9PiAkdmlkZW8tPnVzZXJfaWQsCiAgICAgICAgICAgICAgICAidmlkZW9faWQiID0+ICR2aWRlby0+aWQsCiAgICAgICAgICAgICAgICAicmV2aWV3X3VybCIgPT4gJHZpZGVvLT50ZW1wb3JhcnlfcmV2aWV3LT5yZXZpZXdfdXJsLAogICAgICAgICAgICAgICAgInN0YXR1cyIgPT4gMywKICAgICAgICAgICAgICAgICJwbGF5X3RpbWUiID0+ICR2aWRlby0+dGVtcG9yYXJ5X3Jldmlldy0+cGxheV90aW1lLAogICAgICAgICAgICAgICAgInVwZGF0ZWRfYXQiID0+IG15c3FsX2RhdGUoKQogICAgICAgICAgICAgICAgXSk7CiAgICAgICAgICAgICAgICBWaWRlbzo6d2hlcmUoJ2lkJywgJHZpZGVvLT5pZCktPnVwZGF0ZShbJ3N0YXR1cycgPT4gM10pOwogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICRkYXRhWyd1cmwnXSA9ICR2aWRlby0+dGVtcG9yYXJ5X3Jldmlldy0+dXJsOwogICAgICAgICAgICAgICAgJGRhdGFbInVzZXJfaWQiXSA9ICR2aWRlby0+dXNlcl9pZDsKICAgICAgICAgICAgICAgICRkYXRhWyJ2aWRlb19pZCJdID0gJHZpZGVvLT5pZDsKICAgICAgICAgICAgICAgICRkYXRhWyJyZXZpZXdfdXJsIl0gPSAkdmlkZW8tPnRlbXBvcmFyeV9yZXZpZXctPnJldmlld191cmw7CiAgICAgICAgICAgICAgICAkZGF0YVsic3RhdHVzIl0gPSAzOwogICAgICAgICAgICAgICAgJGRhdGFbInBsYXlfdGltZSJdID0gJHZpZGVvLT50ZW1wb3JhcnlfcmV2aWV3LT5wbGF5X3RpbWU7CiAgICAgICAgICAgICAgICAkZGF0YVsiY3JlYXRlZF9hdCJdID0gbXlzcWxfZGF0ZSgpOwogICAgICAgICAgICAgICAgJGRhdGFbInVwZGF0ZWRfYXQiXSA9IG15c3FsX2RhdGUoKTsKICAgICAgICAgICAgICAgICRpZCA9IFJldmlldzo6c2F2ZVJldmlldygkZGF0YSk7CiAgICAgICAgICAgICAgICBWaWRlbzo6d2hlcmUoJ2lkJywgJHZpZGVvLT5pZCktPnVwZGF0ZShbJ3N0YXR1cycgPT4gM10pOwogICAgICAgICAgICB9CgoKICAgICAgICAgICAgUmV2aWV3OjpzZXRSYXRpbmcoJGlkLCAkcmF0aW5ncyk7CiAgICAgICAgICAgIFJldmlldzo6bGV2ZWxQbGFjZW1lbnQoJGlkLCAkcmVxdWVzdC0+Z2V0KCdwZXJmb3JtYW5jZV9sZXZlbF9wbGFjZW1lbnQnKSk7CiAgICAgICAgICAgICRhbnN3ZXJzID0gJHJlcXVlc3QtPmdldCgnYW5zd2VycycpOwogICAgICAgICAgICAkdmlkZW9faWQgPSAkcmVxdWVzdC0+Z2V0KCd2aWRlb19pZCcpOwogICAgICAgICAgICAkcmVzdWx0ID0gUmV2aWV3UXVlc3Rpb246OnNhdmVBbnN3ZXJzKCR2aWRlb19pZCwgJGFuc3dlcnMpOwogICAgICAgICAgICAkb3duZXJfaWQgPSAkcmVxdWVzdC0+Z2V0KCdvd25lcl9pZCcpOwoKICAgICAgICAgICAgLy/QstGL0L3QtdGB0YLQuAogICAgICAgICAgICAvKiAgICAgICAgICAgICRub3RpZmljYXRpb25bInVzZXJfaWQiXSA9ICRvd25lcl9pZDsKICAgICAgICAgICAgICAgICAgICAgICAgJG5vdGlmaWNhdGlvblsic2VuZGVyX2lkIl0gPSAkdGhpcy0+X3VzZXItPmlkOwogICAgICAgICAgICAgICAgICAgICAgICAkbm90aWZpY2F0aW9uWyJ2aWRlb19pZCJdID0gJHZpZGVvX2lkOwogICAgICAgICAgICAgICAgICAgICAgICAkbm90aWZpY2F0aW9uWyJzdGF0dXMiXSA9IDE7CiAgICAgICAgICAgICAgICAgICAgICAgICRub3RpZmljYXRpb25bIm1lc3NhZ2UiXSA9ICc8YSBocmVmPSIvcHJvZmlsZS8nLiAkdGhpcy0+X3VzZXItPmlkIC4gJyI+JyAuICR0aGlzLT5fdXNlci0+Zmlyc3RfbmFtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLiAnICcgLiAkdGhpcy0+X3VzZXItPmxhc3RfbmFtZSAuICc8L2E+IGFkZCBuZXcgcmV2aWV3Lic7CiAgICAgICAgICAgICAgICAgICAgICAgICRub3RpZmljYXRpb25bImNyZWF0ZWRfYXQiXSA9IG15c3FsX2RhdGUoKTsKICAgICAgICAgICAgICAgICAgICAgICAgJG5vdGlmaWNhdGlvblsidXBkYXRlZF9hdCJdID0gbXlzcWxfZGF0ZSgpOwogICAgICAgICAgICAgICAgICAgICAgICBOb3RpZmljYXRpb246OnNhdmVOb3RpZmljYXRpb24oJG5vdGlmaWNhdGlvbik7Ki8KCiAgICAgICAgICAgIC8v0LLRi9C90LXRgdGC0LgKICAgICAgICAgICAgLy9WaWRlbzo6Y2hhbmdlU3RhdHVzKCR2aWRlb19pZCwgVmlkZW86OlNUQVRVU19SRVZJRVdFRCk7CgogICAgICAgICAgICBUZW1wb3JhcnlSZXZpZXc6Om1vdmVUZW1wb3JhcnlSZXZpZXdEYXRhKCR2aWRlby0+dGVtcG9yYXJ5X3Jldmlldy0+aWQpOwogICAgICAgICAgICAkY29tcGxldGVkX3Jldmlld19wYXRoID0gcHVibGljX3BhdGgoKSAuIGNvbmZpZygndmlkZW8uY29tcGxldGVkX3Jldmlld19wYXRoJyk7CiAgICAgICAgICAgIHNlbGY6OmNoZWNrSWZBcHByb3ZlZCgkdmlkZW8pOwogICAgICAgICAgICBpZighZmlsZV9leGlzdHMoJGNvbXBsZXRlZF9yZXZpZXdfcGF0aCAuICR2aWRlby0+dGVtcG9yYXJ5X3Jldmlldy0+cmV2aWV3X3VybCkpewogICAgICAgICAgICAgICAgVGVtcG9yYXJ5UmV2aWV3Ojp3aGVyZSgnaWQnLCR2aWRlby0+dGVtcG9yYXJ5X3Jldmlldy0+aWQpLT5kZWxldGUoKTsKICAgICAgICAgICAgICAgIFZpZGVvOjp3aGVyZSgnaWQnLCAkdmlkZW8tPmlkKS0+dXBkYXRlKFsnc3RhcnRlZF9yZXZpZXdfc3RhdHVzJyA9PiAxXSk7CiAgICAgICAgICAgICAgICBzZXNzaW9uKCktPmZsYXNoKCdtZXNzYWdlJywgJ1NvbWV0aGluZyB3ZW50IHdyb25nLi4ucGxlYXNlIHJlcmVjb3JkIHJldmlldyBhZ2FpbiEnKTsKICAgICAgICAgICAgICAgIHJldHVybiByZWRpcmVjdCgncmV2aWV3L2NyZWF0ZS8nIC4gJHZpZGVvLT5pZCk7IAogICAgICAgICAgICB9CiAgICAgICAgICAgCiAgICAgICAgICAgIHJldHVybiByZXNwb25zZSgpLT5qc29uKFsic3RhdHVzIiA9PiAic3VjY2VzcyIsICJtZXNzYWdlIiA9PiAiUmV2aWV3IHN1Y2Nlc3NmdWxseSBhZGRlZC4iLCAicmV2aWV3X2lkIiA9PiAkaWRdKTsKICAgICAgICB9CgogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiBjaGVja0lmQXBwcm92ZWQoJHZpZGVvKQogICAgewogICAgICAgIGlmKCR2aWRlby0+c3RhdHVzID09IFZpZGVvOjpTVEFUVVNfUkVWSUVXRUQpIHJldHVybiB0cnVlOwoKICAgICAgICBpZiggIVRyYW5zYWN0aW9uOjp3aGVyZSgndmlkZW9faWQnLCAkdmlkZW8tPmlkKS0+d2hlcmUoJ3BhcnRpY2lwYXRpb25fdHlwZScsVmlkZW86OlBBUlRJQ0lQQVRJT05fVFlQRSktPmV4aXN0cygpICkgeyAvLyAhVHJhbnNhY3Rpb24KICAgICAgICAgICAgJHRyYW5zZmVyID0gUGF5bWVudHNDb250cm9sbGVyOjp0cmFuc2ZlciggJHZpZGVvLT5pZCApOwogICAgICAgICAgICBpZigkdHJhbnNmZXI9PT1mYWxzZSl7CiAgICAgICAgICAgICAgICByZXR1cm4ganNvbl9lbmNvZGUoWydlcnJvcic9PnRydWUsICdtc2cnPT4nVHJhbnNmZXIgZXJyb3IuIFRyeSBsYXRlci4nXSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgJHVzZXJfaWQgPSAkdmlkZW8tPnVzZXJfaWQ7CiAgICAgICAgJG5vdGlmaWNhdGlvblsidXNlcl9pZCJdID0gJHVzZXJfaWQ7CiAgICAgICAgJG5vdGlmaWNhdGlvblsic2VuZGVyX2lkIl0gPSAkdGhpcy0+X3VzZXItPmlkOwogICAgICAgICRub3RpZmljYXRpb25bInZpZGVvX2lkIl0gPSAkdmlkZW8tPmlkOwogICAgICAgICRub3RpZmljYXRpb25bInN0YXR1cyJdID0gMTsKICAgICAgICAkbm90aWZpY2F0aW9uWyJtZXNzYWdlIl0gPSAnPGEgaHJlZj0iL3Byb2ZpbGUvJyAuICR0aGlzLT5fdXNlci0+aWQgLiAnIj4nIC4gJHRoaXMtPl91c2VyLT5maXJzdF9uYW1lCiAgICAgICAgICAgIC4gJyAnIC4gJHRoaXMtPl91c2VyLT5sYXN0X25hbWUgLiAnPC9hPiBhZGRlZCBhIG5ldyByZXZpZXcuJzsKICAgICAgICAkbm90aWZpY2F0aW9uWyJjcmVhdGVkX2F0Il0gPSBteXNxbF9kYXRlKCk7CiAgICAgICAgJG5vdGlmaWNhdGlvblsidXBkYXRlZF9hdCJdID0gbXlzcWxfZGF0ZSgpOwogICAgICAgIE5vdGlmaWNhdGlvbjo6c2F2ZU5vdGlmaWNhdGlvbigkbm90aWZpY2F0aW9uKTsKCiAgICAgICAgVmlkZW86OmNoYW5nZVN0YXR1cygkdmlkZW8tPmlkLCBWaWRlbzo6U1RBVFVTX1JFVklFV0VEKTsKICAgICAgICAvKiBtYWlsIHRvIHBlcmZvcm1lciBhbmQgY29hY2ggKi8KCiAgICAgICAgJHBlcmZvcm1lciA9IFVzZXI6OnNlbGVjdCgnZmlyc3RfbmFtZScsICdlbWFpbCcpLT53aGVyZSgnaWQnLCAkdXNlcl9pZCktPmZpcnN0KCk7CiAgICAgICAgJHBlcmZvcm1lcl9tYWlsID0gbmV3IE1haWxlcigpOwogICAgICAgICRwZXJmb3JtZXJfbWFpbC0+c3ViamVjdCA9ICdDb2FjaCBjb21wbGV0ZWQgYSByZXZpZXcgJzsKICAgICAgICAkcGVyZm9ybWVyX21haWwtPnRvX2VtYWlsID0gJHBlcmZvcm1lci0+ZW1haWw7CiAgICAgICAgJHBlcmZvcm1lcl9tYWlsLT5zZW5kTWFpbCgnYXV0aC5lbWFpbHMuY29hY2hDb21wbGV0ZWRSZXZpZXcnLAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAncmV2aWV3ZXInID0+ICdjb2FjaCcsCiAgICAgICAgICAgICAgICAndXNlcl9uYW1lJyA9PiAkcGVyZm9ybWVyLT5maXJzdF9uYW1lLAogICAgICAgICAgICAgICAgJ2NvYWNoX25hbWUnID0+ICR0aGlzLT5fdXNlci0+Zmlyc3RfbmFtZQogICAgICAgICAgICBdKTsKCiAgICAgICAgJGNvYWNoX21haWwgPSBuZXcgTWFpbGVyKCk7CiAgICAgICAgJGNvYWNoX21haWwtPnN1YmplY3QgPSAnUGF5bWVudCBzZW50IGJ5IFNob3djYXNlJzsKICAgICAgICAkY29hY2hfbWFpbC0+dG9fZW1haWwgPSAkdGhpcy0+X3VzZXItPmVtYWlsOwogICAgICAgICRjb2FjaF9tYWlsLT5zZW5kTWFpbCgnYXV0aC5lbWFpbHMucGF5bWVudFNlbnRCeVNob3djYXNlJywKICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgJ3VzZXJfbmFtZScgPT4gJHBlcmZvcm1lci0+Zmlyc3RfbmFtZSwKICAgICAgICAgICAgICAgICdjb2FjaF9uYW1lJyA9PiAkdGhpcy0+X3VzZXItPmZpcnN0X25hbWUKICAgICAgICAgICAgXSk7CgoKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KCi8vICAgIHB1YmxpYyBmdW5jdGlvbiBhcHByb3ZlZFZpZGVvKFJlcXVlc3QgJHJlcXVlc3QpCi8vICAgIHsKLy8gICAgICAgICR2aWRlb19pZCA9ICRyZXF1ZXN0LT5nZXQoJ3ZpZGVvX2lkJyk7Ci8vICAgICAgICAkdmlkZW8gPSBWaWRlbzo6d2hlcmUoJ2lkJywgJHZpZGVvX2lkKS0+c2VsZWN0KCdpZCcsICd1c2VyX2lkJywgJ3N0YXR1cycpLT5maXJzdCgpOwovLyAgICAgICAgJHVzZXJfaWQgPSAkdmlkZW8tPnVzZXJfaWQ7Ci8vCi8vICAgICAgICBpZiAoJHZpZGVvLT5zdGF0dXMgPT0gMykgewovLyAgICAgICAgICAgIHJldHVybiBqc29uX2VuY29kZShbJ2Vycm9yJyA9PiB0cnVlLCAnbXNnJyA9PiAnVmlkZW8gYWxyZWFkeSBhcHByb3ZlZCEnXSk7Ci8vICAgICAgICB9Ci8vCi8vICAgICAgICBpZiggIVRyYW5zYWN0aW9uOjp3aGVyZSgndmlkZW9faWQnLCAkdmlkZW9faWQpLT5leGlzdHMoKSApIHsgLy8gIVRyYW5zYWN0aW9uCi8vICAgICAgICAgICAgJHRyYW5zZmVyID0gUGF5bWVudHNDb250cm9sbGVyOjp0cmFuc2ZlciggJHJlcXVlc3QtPmdldCgndmlkZW9faWQnKSApOwovLyAgICAgICAgICAgIGlmKCR0cmFuc2Zlcj09PWZhbHNlKXsKLy8gICAgICAgICAgICAgICAgcmV0dXJuIGpzb25fZW5jb2RlKFsnZXJyb3InPT50cnVlLCAnbXNnJz0+J1RyYW5zZmVyIGVycm9yLiBUcnkgbGF0ZXIuJ10pOwovLyAgICAgICAgICAgIH0KLy8gICAgICAgIH0KLy8KLy8gICAgICAgICRub3RpZmljYXRpb25bInVzZXJfaWQiXSA9ICR1c2VyX2lkOwovLyAgICAgICAgJG5vdGlmaWNhdGlvblsic2VuZGVyX2lkIl0gPSAkdGhpcy0+X3VzZXItPmlkOwovLyAgICAgICAgJG5vdGlmaWNhdGlvblsidmlkZW9faWQiXSA9ICR2aWRlb19pZDsKLy8gICAgICAgICRub3RpZmljYXRpb25bInN0YXR1cyJdID0gMTsKLy8gICAgICAgICRub3RpZmljYXRpb25bIm1lc3NhZ2UiXSA9ICc8YSBocmVmPSIvcHJvZmlsZS8nIC4gJHRoaXMtPl91c2VyLT5pZCAuICciPicgLiAkdGhpcy0+X3VzZXItPmZpcnN0X25hbWUKLy8gICAgICAgICAgICAuICcgJyAuICR0aGlzLT5fdXNlci0+bGFzdF9uYW1lIC4gJzwvYT4gYWRkZWQgYSBuZXcgcmV2aWV3Lic7Ci8vICAgICAgICAkbm90aWZpY2F0aW9uWyJjcmVhdGVkX2F0Il0gPSBteXNxbF9kYXRlKCk7Ci8vICAgICAgICAkbm90aWZpY2F0aW9uWyJ1cGRhdGVkX2F0Il0gPSBteXNxbF9kYXRlKCk7Ci8vICAgICAgICBOb3RpZmljYXRpb246OnNhdmVOb3RpZmljYXRpb24oJG5vdGlmaWNhdGlvbik7Ci8vCi8vICAgICAgICBWaWRlbzo6Y2hhbmdlU3RhdHVzKCR2aWRlb19pZCwgVmlkZW86OlNUQVRVU19SRVZJRVdFRCk7Ci8vICAgICAgICAvKiBtYWlsIHRvIHBlcmZvcm1lciBhbmQgY29hY2ggKi8KLy8KLy8gICAgICAgICRwZXJmb3JtZXIgPSBVc2VyOjpzZWxlY3QoJ2ZpcnN0X25hbWUnLCAnZW1haWwnKS0+d2hlcmUoJ2lkJywgJHVzZXJfaWQpLT5maXJzdCgpOwovLyAgICAgICAgJHBlcmZvcm1lcl9tYWlsID0gbmV3IE1haWxlcigpOwovLyAgICAgICAgJHBlcmZvcm1lcl9tYWlsLT5zdWJqZWN0ID0gJ0NvYWNoIGNvbXBsZXRlZCBhIHJldmlldyAnOwovLyAgICAgICAgJHBlcmZvcm1lcl9tYWlsLT50b19lbWFpbCA9ICRwZXJmb3JtZXItPmVtYWlsOwovLyAgICAgICAgJHBlcmZvcm1lcl9tYWlsLT5zZW5kTWFpbCgnYXV0aC5lbWFpbHMuY29hY2hDb21wbGV0ZWRSZXZpZXcnLAovLyAgICAgICAgICAgIFsKLy8gICAgICAgICAgICAgICAgJ3VzZXJfbmFtZScgPT4gJHBlcmZvcm1lci0+Zmlyc3RfbmFtZSwKLy8gICAgICAgICAgICAgICAgJ2NvYWNoX25hbWUnID0+ICR0aGlzLT5fdXNlci0+Zmlyc3RfbmFtZQovLyAgICAgICAgICAgIF0pOwovLwovLyAgICAgICAgJGNvYWNoX21haWwgPSBuZXcgTWFpbGVyKCk7Ci8vICAgICAgICAkY29hY2hfbWFpbC0+c3ViamVjdCA9ICdQYXltZW50IHNlbnQgYnkgU2hvd2Nhc2UnOwovLyAgICAgICAgJGNvYWNoX21haWwtPnRvX2VtYWlsID0gJHRoaXMtPl91c2VyLT5lbWFpbDsKLy8gICAgICAgICRjb2FjaF9tYWlsLT5zZW5kTWFpbCgnYXV0aC5lbWFpbHMucGF5bWVudFNlbnRCeVNob3djYXNlJywKLy8gICAgICAgICAgICBbCi8vICAgICAgICAgICAgICAgICd1c2VyX25hbWUnID0+ICRwZXJmb3JtZXItPmZpcnN0X25hbWUsCi8vICAgICAgICAgICAgICAgICdjb2FjaF9uYW1lJyA9PiAkdGhpcy0+X3VzZXItPmZpcnN0X25hbWUKLy8gICAgICAgICAgICBdKTsKLy8KLy8KLy8gICAgICAgIHJldHVybiBqc29uX2VuY29kZShbJ2Vycm9yJyA9PiBmYWxzZSwgJ21zZycgPT4gJ1ZpZGVvIHN1Y2Nlc3NmdWxseSBhcHByb3ZlZCEnXSk7Ci8vICAgIH0KCiAgICAvKioKICAgICAqIERpc3BsYXkgdGhlIHNwZWNpZmllZCByZXNvdXJjZS4KICAgICAqCiAgICAgKiBAcGFyYW0gIGludCAkaWQKICAgICAqIEByZXR1cm4gXElsbHVtaW5hdGVcSHR0cFxSZXNwb25zZQogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gc2hvdygkaWQpCiAgICB7CiAgICAgICAgaWYgKCR0aGlzLT5fdXNlci0+cm9sZSA9PSBVc2VyOjpVU0VSX1JPTEUpIHsKICAgICAgICAgICAgLy8kcmVzdWx0ID0gUmV2aWV3OjpnZXRCeVZpZGVvSWRGdWxsKCRpZCk7CiAgICAgICAgICAgICRyZXN1bHQgPSBSZXZpZXc6OndoZXJlKCd2aWRlb19pZCcsICRpZCktPmZpcnN0KCk7CiAgICAgICAgICAgIGFib3J0X2lmKGlzX251bGwoJHJlc3VsdCksIDQwNCk7CiAgICAgICAgICAgICRyZXN1bHQtPm92ZXJhbGxfcmF0aW5nID0gcm91bmQoKAogICAgICAgICAgICAgICAgICAgICRyZXN1bHQtPmFydGlzdHkgKwogICAgICAgICAgICAgICAgICAgICRyZXN1bHQtPmZvcm1hdGlvbiArCiAgICAgICAgICAgICAgICAgICAgJHJlc3VsdC0+aW50ZXJwcmV0YXRpb24gKwogICAgICAgICAgICAgICAgICAgICRyZXN1bHQtPmNyZWF0aXZpdHkgKwogICAgICAgICAgICAgICAgICAgICRyZXN1bHQtPnN0eWxlICsKICAgICAgICAgICAgICAgICAgICAkcmVzdWx0LT5lbmVyZ3kgKwogICAgICAgICAgICAgICAgICAgICRyZXN1bHQtPnByZWNpc2lvbiArCiAgICAgICAgICAgICAgICAgICAgJHJlc3VsdC0+dGltaW5nICsKICAgICAgICAgICAgICAgICAgICAkcmVzdWx0LT5mb290d29yayArCiAgICAgICAgICAgICAgICAgICAgJHJlc3VsdC0+YWxpbmdtZW50ICsKICAgICAgICAgICAgICAgICAgICAkcmVzdWx0LT5iYWxhbmNlICsKICAgICAgICAgICAgICAgICAgICAkcmVzdWx0LT5mb2N1cwogICAgICAgICAgICAgICAgKSAvIDEyLCAxKTsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICRyZXN1bHQtPmRheXNfYWdvID0gQ2FyYm9uOjpwYXJzZSgkcmVzdWx0LT5jcmVhdGVkX2F0KS0+ZGlmZkZvckh1bWFucygpOwogICAgICAgICAgICB9IGNhdGNoIChcRXhjZXB0aW9uICRleGNlcHRpb24pIHsKICAgICAgICAgICAgICAgICRyZXN1bHQtPmRheXNfYWdvID0gJyc7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHZpZXcoJ3Jldmlldy9zaG93JywgWyJyZXZpZXciID0+ICRyZXN1bHRdKTsKICAgICAgICB9CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIHNob3dNeSgkaWQpCiAgICB7CiAgICAgICAgaWYgKCR0aGlzLT5fdXNlci0+cm9sZSA9PSBVc2VyOjpDT0FDSF9ST0xFKSB7CiAgICAgICAgICAgIC8vJHJlc3VsdCA9IFJldmlldzo6Z2V0QnlVc2VySWRGdWxsKCRpZCwgJHRoaXMtPl91c2VyLT5pZCk7CiAgICAgICAgICAgICR2aWRlbyA9IFZpZGVvOjp3aGVyZSgnaWQnLCAkaWQpLT5zZWxlY3QoJ2lkJywgJ3VzZXJfaWQnLCAnc3RhdHVzJyktPmZpcnN0KCk7CiAgICAgICAgICAgICRyZXN1bHQgPSBSZXZpZXc6OndoZXJlKCd2aWRlb19pZCcsICRpZCktPmZpcnN0KCk7CiAgICAgICAgICAgICRwYWNrYWdlX2lkID0gVmlkZW86OmdldFZpZGVvUGFja2FnZSgkaWQpOwogICAgICAgICAgICBpZigkcGFja2FnZV9pZCA9PSAxKXsKICAgICAgICAgICAgICAgICRyZXN1bHQtPm92ZXJhbGxfcmF0aW5nID0gcm91bmQoKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJlc3VsdC0+cGVyZm9ybWFuY2VfcXVhbGl0eV9yYXRpbmcgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJlc3VsdC0+dGVjaG5pY2FsX2FiaWxpdHlfcmF0aW5nICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyZXN1bHQtPmVuZXJneV9zdHlsZV9yYXRpbmcgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJlc3VsdC0+c3Rvcnl0ZWxsaW5nX3JhdGluZyArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcmVzdWx0LT5sb29rX2FwcGVhcmFuY2VfcmF0aW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgLyA1LCAyKTsKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICAkcmVzdWx0LT5vdmVyYWxsX3JhdGluZyA9IHJvdW5kKCgKICAgICAgICAgICAgICAgICAgICAkcmVzdWx0LT5hcnRpc3R5ICsKICAgICAgICAgICAgICAgICAgICAkcmVzdWx0LT5mb3JtYXRpb24gKwogICAgICAgICAgICAgICAgICAgICRyZXN1bHQtPmludGVycHJldGF0aW9uICsKICAgICAgICAgICAgICAgICAgICAkcmVzdWx0LT5jcmVhdGl2aXR5ICsKICAgICAgICAgICAgICAgICAgICAkcmVzdWx0LT5zdHlsZSArCiAgICAgICAgICAgICAgICAgICAgJHJlc3VsdC0+ZW5lcmd5ICsKICAgICAgICAgICAgICAgICAgICAkcmVzdWx0LT5wcmVjaXNpb24gKwogICAgICAgICAgICAgICAgICAgICRyZXN1bHQtPnRpbWluZyArCiAgICAgICAgICAgICAgICAgICAgJHJlc3VsdC0+Zm9vdHdvcmsgKwogICAgICAgICAgICAgICAgICAgICRyZXN1bHQtPmFsaW5nbWVudCArCiAgICAgICAgICAgICAgICAgICAgJHJlc3VsdC0+YmFsYW5jZSArCiAgICAgICAgICAgICAgICAgICAgJHJlc3VsdC0+Zm9jdXMKICAgICAgICAgICAgICAgICkgLyAxMiwgMSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgJHRlbXAgPSAmJHJlc3VsdDsKICAgICAgICAgICAgJHRlbXAtPnBhY2thZ2VfaWQgPSAkcGFja2FnZV9pZDsKICAgICAgICAgICAgLy8kcmVzdWx0LT5kYXlzX2FnbyA9IGZsb29yKCh0aW1lKCkgLSBzdHJ0b3RpbWUoJHJlc3VsdC0+Y3JlYXRlZF9hdCkpLzM2MDAvMjQpOwogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgJHJlc3VsdC0+ZGF5c19hZ28gPSBDYXJib246OnBhcnNlKCRyZXN1bHQtPmNyZWF0ZWRfYXQpLT5kaWZmRm9ySHVtYW5zKCk7CiAgICAgICAgICAgIH0gY2F0Y2ggKFxFeGNlcHRpb24gJGV4Y2VwdGlvbikgewogICAgICAgICAgICAgICAgJHJlc3VsdC0+ZGF5c19hZ28gPSAnJzsKICAgICAgICAgICAgfQovLyAgICAgICAgICAgIGRkKCRyZXN1bHQtPnRvQXJyYXkoKSk7CiAgICAgICAgICAgIHJldHVybiB2aWV3KCdyZXZpZXcvc2hvdy1jb21wbGV0ZWQnLCBbInJldmlldyIgPT4gJHJlc3VsdCwgInZpZGVvX2lkIiA9PiAkaWQsICJ2aWRlb19zdGF0dXMiID0+ICR2aWRlby0+c3RhdHVzXSk7CiAgICAgICAgfQogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiBzYXZlQXVkaXRpb25SYXRpbmdzKFJlcXVlc3QgJHJlcXVlc3QpCiAgICB7CiAgICAgICAgCiAgICAgICAgaWYgKCRyZXF1ZXN0LT5pc01ldGhvZCgncG9zdCcpICYmICR0aGlzLT5fdXNlci0+cm9sZSA9PSBVc2VyOjpDT0FDSF9ST0xFKSB7CiAgICAgICAgICAgIAogICAgICAgICAgICAvKgogICAgICAgICAgICBUT0RPOjpDcmVhdGUgYSByZXZpZXcgdmlkZW8gc2VwYXJhdGVkIGludG8gZGlmZmVyZW50IGVudGl0aWVzLCBkYXRhIHZhbGlkYXRpb24gaXMgbm90IGZvdW5kLgogICAgICAgICAgICBJdCB3b3VsZCBiZSBuaWNlIHRvIGRvIG9uZSBoYW5kbGVyLiBBbmQgZG8gdmFsaWRhdGlvbiBhbmQgdmVyaWZpY2F0aW9uIHRoZXJlLiBJbiBvbmUgcGxhY2UuCiAgICAgICAgICAgICovCiAgICAgICAgICAgIC8qVEVDSE5JUVVFIFNDT1JFLCBFWFBSRVNTSU9OLCBDSE9SRU9HUkFQSFkgdmFsaWRhdGlvbiBibG9jayovCiAgICAgICAgICAgICRydWxlcyA9IFsKICAgICAgICAgICAgICAgJ3BxLXJhdGluZycgPT4gJ3JlcXVpcmVkfG51bWVyaWN8bWluOjB8bm90X2luOjAnLAogICAgICAgICAgICAgICAndGEtcmF0aW5nJyA9PiAncmVxdWlyZWR8bnVtZXJpY3xtaW46MHxub3RfaW46MCcsCiAgICAgICAgICAgICAgICdlcy1yYXRpbmcnID0+ICdyZXF1aXJlZHxudW1lcmljfG1pbjowfG5vdF9pbjowJywKICAgICAgICAgICAgICAgJ3N0b3J5dGVsbGluZy1yYXRpbmcnID0+ICdyZXF1aXJlZHxudW1lcmljfG1pbjowfG5vdF9pbjowJywKICAgICAgICAgICAgICAgJ2xhLXJhdGluZycgPT4gJ3JlcXVpcmVkfG51bWVyaWN8bWluOjB8bm90X2luOjAnLAogICAgICAgICAgICAgICAgJ3BlcmZvcm1hbmNlLXF1YWxpdHknID0+ICdyZXF1aXJlZHxtYXg6NTAwJywKICAgICAgICAgICAgICAgICd0ZWNobmljYWwtYWJpbGl0eScgPT4gICdyZXF1aXJlZHxtYXg6NTAwJywKICAgICAgICAgICAgICAgICdlbmVyZ3ktYW5kLXN0eWxlJyA9PiAncmVxdWlyZWR8bWF4OjUwMCcsCiAgICAgICAgICAgICAgICAnc3Rvcnl0ZWxsaW5nJyA9PiAgJ3JlcXVpcmVkfG1heDo1MDAnLAogICAgICAgICAgICAgICAgJ2xvb2stYW5kLWFwcGVhcmFuY2UnID0+J3JlcXVpcmVkfG1heDo1MDAnLAogICAgICAgICAgICBdOyAgICAgICAgICAgCiAgICAgICAgICAgICR2YWxNc2cgPSBbCiAgICAgICAgICAgICAgICdyZXF1aXJlZCcgPT4gJ1RoZSA6YXR0cmlidXRlIGZpZWxkIGlzIHJlcXVpcmVkIScsCiAgICAgICAgICAgICAgICdtYXgnID0+ICdNYXhpbXVtIGxlbmd0aCBvZiB0aGUgZmllbGQgOmF0dHJpYnV0ZSBpcyA1MDAgY2hhcmFjdGVycyEnLAogICAgICAgICAgICBdOwogICAgICAgICAgICAkZmVhbGROYW1lID0gWwogICAgICAgICAgICAgICAncHEtcmF0aW5nJyA9PiAnUGVyZm9ybWFuY2UgUXVhbGl0eSBSYXRpbmcnLAogICAgICAgICAgICAgICAndGEtcmF0aW5nJyA9PiAnVGVjaG5pY2FsIEFiaWxpdHkgUmF0aW5nJywKICAgICAgICAgICAgICAgJ2VzLXJhdGluZycgPT4gJ0VuZXJneSBhbmQgU3R5bGUgUmF0aW5nJywKICAgICAgICAgICAgICAgJ3N0b3J5dGVsbGluZy1yYXRpbmcnID0+ICdTdG9yeSBUZWxsaW5nIFJhdGluZycsCiAgICAgICAgICAgICAgICdsYS1yYXRpbmcnID0+ICdMb29rIGFuZCBBcHBlYXJhbmNlIFJhdGluZycsCiAgICAgICAgICAgICAgICdwZXJmb3JtYW5jZS1xdWFsaXR5JyA9PiAnUGVyZm9ybWFuY2UgUXVhbGl0eScsCiAgICAgICAgICAgICAgICd0ZWNobmljYWwtYWJpbGl0eScgPT4gICdUZWNobmljYWwgQWJpbGl0eScsCiAgICAgICAgICAgICAgICdlbmVyZ3ktYW5kLXN0eWxlJyA9PiAnRW5lcmd5IGFuZCBTdHlsZScsCiAgICAgICAgICAgICAgICdzdG9yeXRlbGxpbmcnID0+ICAnU3RvcnkgVGVsbGluZycsCiAgICAgICAgICAgICAgICdsb29rLWFuZC1hcHBlYXJhbmNlJyA9PidMb29rIGFuZCBBcHBlYXJhbmNlJywKICAgICAgICAgICAgXTsKICAgICAgICAgICAgJHZhbGlkYXRvciA9IFxWYWxpZGF0b3I6Om1ha2UoJHJlcXVlc3QtPmFsbCgpLCAkcnVsZXMsICR2YWxNc2cpOwogICAgICAgICAgICAkdmFsaWRhdG9yLT5zZXRBdHRyaWJ1dGVOYW1lcygkZmVhbGROYW1lKTsgICAgICAgICAgICAKICAgICAgICAgICAgaWYgKCR2YWxpZGF0b3ItPmZhaWxzKCkpewogICAgICAgICAgICAgICAgLy9yZXR1cm4ganNvbl9lbmNvZGUoWydzdGF0dXMnID0+ICd2YWxfZXJyb3InLCAnZXJyb3JzJyA9PiAkdmFsaWRhdG9yLT5lcnJvcnMoKV0pOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlZGlyZWN0KCdyZXZpZXcvY3JlYXRlL3NlY29uZF9zdGVwLycuJHJlcXVlc3QtPnZpZGVvX2lkKS0+d2l0aEVycm9ycygkdmFsaWRhdG9yKS0+d2l0aElucHV0KCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLyp2YWxpZGF0aW9uIGJsb2NrIGVuZCovCgogICAgICAgICAgICAkdmlkZW8gPSBWaWRlbzo6d2hlcmVJZCgkcmVxdWVzdC0+dmlkZW9faWQpLT53aXRoKFsncmV2aWV3JywndGVtcG9yYXJ5X3JldmlldyddKS0+Zmlyc3QoKTsKICAgICAgICAgICAgJHRlbXBfcGF0aCA9IHB1YmxpY19wYXRoKGNvbmZpZygndmlkZW8udGVtcF9yZXZpZXdfcGF0aCcpKSAuIEAkdmlkZW8tPnRlbXBvcmFyeV9yZXZpZXctPnJldmlld191cmw7CiAgICAgICAgICAgIGlmKCEkdmlkZW8tPnRlbXBvcmFyeV9yZXZpZXcgfHwgZW1wdHkoQCR2aWRlby0+dGVtcG9yYXJ5X3Jldmlldy0+cmV2aWV3X3VybCkgfHwgZW1wdHkoQCR2aWRlby0+dGVtcG9yYXJ5X3Jldmlldy0+dXJsKSB8fCAhZmlsZV9leGlzdHMoJHRlbXBfcGF0aCkpewogICAgICAgICAgICAgICAgaWYoJHJlcXVlc3QtPndhbnRzSnNvbigpKXsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbJ3N0YXR1cycgPT4gJ2Vycm9yJywgIm1lc3NhZ2UiID0+ICJQbGVhc2UgUmUtcmVjb3JkIGFnYWluLiBUZW1wIHJldmlldyBvciBmaWxlIGRvZXMgbm90IGV4aXN0LiJdKTsKICAgICAgICAgICAgICAgIH0gICAgICAKICAgICAgICAgICAgICAgIHJldHVybiByZWRpcmVjdCgncmV2aWV3L2NyZWF0ZS8nLiRyZXF1ZXN0LT52aWRlb19pZCktPndpdGhFcnJvcnMoWydQbGVhc2UgUmUtcmVjb3JkIGFnYWluLiBUZW1wIHJldmlldyBvciBmaWxlIGRvZXMgbm90IGV4aXN0LiddKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZigkdmlkZW8tPnJldmlldyl7CiAgICAgICAgICAgICAgICBSZXZpZXc6OnJlbW92ZVJldmlld0ZpbGUoJHZpZGVvLT5yZXZpZXctPnJldmlld191cmwpOwogICAgICAgICAgICAgICAgJGlkID0gJHZpZGVvLT5yZXZpZXctPmlkOwogICAgICAgICAgICAgICAgUmV2aWV3Ojp3aGVyZUlkKCR2aWRlby0+cmV2aWV3LT5pZCktPnVwZGF0ZShbCiAgICAgICAgICAgICAgICAidXJsIiA9PiAkdmlkZW8tPnRlbXBvcmFyeV9yZXZpZXctPnVybCwKICAgICAgICAgICAgICAgICJ1c2VyX2lkIiA9PiAkdmlkZW8tPnVzZXJfaWQsCiAgICAgICAgICAgICAgICAidmlkZW9faWQiID0+ICR2aWRlby0+aWQsCiAgICAgICAgICAgICAgICAicmV2aWV3X3VybCIgPT4gJHZpZGVvLT50ZW1wb3JhcnlfcmV2aWV3LT5yZXZpZXdfdXJsLAogICAgICAgICAgICAgICAgInN0YXR1cyIgPT4gMywKICAgICAgICAgICAgICAgICJwbGF5X3RpbWUiID0+ICR2aWRlby0+dGVtcG9yYXJ5X3Jldmlldy0+cGxheV90aW1lLAogICAgICAgICAgICAgICAgInVwZGF0ZWRfYXQiID0+IG15c3FsX2RhdGUoKQogICAgICAgICAgICAgICAgXSk7CiAgICAgICAgICAgICAgICBWaWRlbzo6d2hlcmUoJ2lkJywgJHZpZGVvLT5pZCktPnVwZGF0ZShbJ3N0YXR1cycgPT4gM10pOwogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICRkYXRhWyd1cmwnXSA9ICR2aWRlby0+dGVtcG9yYXJ5X3Jldmlldy0+dXJsOwogICAgICAgICAgICAgICAgJGRhdGFbInVzZXJfaWQiXSA9ICR2aWRlby0+dXNlcl9pZDsKICAgICAgICAgICAgICAgICRkYXRhWyJ2aWRlb19pZCJdID0gJHZpZGVvLT5pZDsKICAgICAgICAgICAgICAgICRkYXRhWyJyZXZpZXdfdXJsIl0gPSAkdmlkZW8tPnRlbXBvcmFyeV9yZXZpZXctPnJldmlld191cmw7CiAgICAgICAgICAgICAgICAkZGF0YVsic3RhdHVzIl0gPTM7CiAgICAgICAgICAgICAgICAkZGF0YVsicGxheV90aW1lIl0gPSAkdmlkZW8tPnRlbXBvcmFyeV9yZXZpZXctPnBsYXlfdGltZTsKICAgICAgICAgICAgICAgICRkYXRhWyJjcmVhdGVkX2F0Il0gPSBteXNxbF9kYXRlKCk7CiAgICAgICAgICAgICAgICAkZGF0YVsidXBkYXRlZF9hdCJdID0gbXlzcWxfZGF0ZSgpOwogICAgICAgICAgICAgICAgJGlkID0gUmV2aWV3OjpzYXZlUmV2aWV3KCRkYXRhKTsKICAgICAgICAgICAgICAgIFZpZGVvOjp3aGVyZSgnaWQnLCAkdmlkZW8tPmlkKS0+dXBkYXRlKFsnc3RhdHVzJyA9PiAzXSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgJHJhdGluZ3MgPSBhcnJheSgKICAgICAgICAgICAgICAgICdwZXJmb3JtYW5jZV9xdWFsaXR5Jz0+JHJlcXVlc3QtPmlucHV0KCdwZXJmb3JtYW5jZS1xdWFsaXR5JyksCiAgICAgICAgICAgICAgICAncGVyZm9ybWFuY2VfcXVhbGl0eV9yYXRpbmcnPT4kcmVxdWVzdC0+aW5wdXQoJ3BxLXJhdGluZycpLAogICAgICAgICAgICAgICAgJ3RlY2huaWNhbF9hYmlsaXR5Jz0+JHJlcXVlc3QtPmlucHV0KCd0ZWNobmljYWwtYWJpbGl0eScpLAogICAgICAgICAgICAgICAgJ3RlY2huaWNhbF9hYmlsaXR5X3JhdGluZyc9PiRyZXF1ZXN0LT5pbnB1dCgndGEtcmF0aW5nJyksCiAgICAgICAgICAgICAgICAnZW5lcmd5X3N0eWxlJz0+JHJlcXVlc3QtPmlucHV0KCdlbmVyZ3ktYW5kLXN0eWxlJyksCiAgICAgICAgICAgICAgICAnZW5lcmd5X3N0eWxlX3JhdGluZyc9PiRyZXF1ZXN0LT5pbnB1dCgnZXMtcmF0aW5nJyksCiAgICAgICAgICAgICAgICAnc3Rvcnl0ZWxsaW5nJz0+JHJlcXVlc3QtPmlucHV0KCdzdG9yeXRlbGxpbmcnKSwKICAgICAgICAgICAgICAgICdzdG9yeXRlbGxpbmdfcmF0aW5nJz0+JHJlcXVlc3QtPmlucHV0KCdzdG9yeXRlbGxpbmctcmF0aW5nJyksCiAgICAgICAgICAgICAgICAnbG9va19hcHBlYXJhbmNlJz0+JHJlcXVlc3QtPmlucHV0KCdsb29rLWFuZC1hcHBlYXJhbmNlJyksCiAgICAgICAgICAgICAgICAnbG9va19hcHBlYXJhbmNlX3JhdGluZyc9PiRyZXF1ZXN0LT5pbnB1dCgnbGEtcmF0aW5nJyksCiAgICAgICAgICAgICAgICAnbWVzc2FnZSc9PiRyZXF1ZXN0LT5pbnB1dCgncmV2aWV3X21lc3NhZ2UnKSwKICAgICAgICAgICAgICAgICdwZXJmb3JtYW5jZV9sZXZlbF9pZCc9PiRyZXF1ZXN0LT5pbnB1dCgncGVyZm9ybWFuY2VfbGV2ZWxfcGxhY2VtZW50JyksCiAgICAgICAgICAgICk7CgogICAgICAgICAgICBSZXZpZXc6OnNldFJhdGluZygkaWQsICRyYXRpbmdzKTsKICAgICAgICAgICAgUmV2aWV3OjpsZXZlbFBsYWNlbWVudCgkaWQsICRyZXF1ZXN0LT5nZXQoJ3BlcmZvcm1hbmNlX2xldmVsX3BsYWNlbWVudCcpKTsKICAgICAgICAgICAgJGFuc3dlcnMgPSAkcmVxdWVzdC0+Z2V0KCdhbnN3ZXJzJyk7CiAgICAgICAgICAgICR2aWRlb19pZCA9ICRyZXF1ZXN0LT5nZXQoJ3ZpZGVvX2lkJyk7CiAgICAgICAgICAgICRyZXN1bHQgPSBSZXZpZXdRdWVzdGlvbjo6c2F2ZUFuc3dlcnMoJHZpZGVvX2lkLCAkYW5zd2Vycyk7CiAgICAgICAgICAgICRvd25lcl9pZCA9ICRyZXF1ZXN0LT5nZXQoJ293bmVyX2lkJyk7CgogICAgICAgICAgICAvL9Cy0YvQvdC10YHRgtC4CiAgICAgICAgICAgIC8qICAgICAgICAgICAgJG5vdGlmaWNhdGlvblsidXNlcl9pZCJdID0gJG93bmVyX2lkOwogICAgICAgICAgICAgICAgICAgICAgICAkbm90aWZpY2F0aW9uWyJzZW5kZXJfaWQiXSA9ICR0aGlzLT5fdXNlci0+aWQ7CiAgICAgICAgICAgICAgICAgICAgICAgICRub3RpZmljYXRpb25bInZpZGVvX2lkIl0gPSAkdmlkZW9faWQ7CiAgICAgICAgICAgICAgICAgICAgICAgICRub3RpZmljYXRpb25bInN0YXR1cyJdID0gMTsKICAgICAgICAgICAgICAgICAgICAgICAgJG5vdGlmaWNhdGlvblsibWVzc2FnZSJdID0gJzxhIGhyZWY9Ii9wcm9maWxlLycuICR0aGlzLT5fdXNlci0+aWQgLiAnIj4nIC4gJHRoaXMtPl91c2VyLT5maXJzdF9uYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuICcgJyAuICR0aGlzLT5fdXNlci0+bGFzdF9uYW1lIC4gJzwvYT4gYWRkIG5ldyByZXZpZXcuJzsKICAgICAgICAgICAgICAgICAgICAgICAgJG5vdGlmaWNhdGlvblsiY3JlYXRlZF9hdCJdID0gbXlzcWxfZGF0ZSgpOwogICAgICAgICAgICAgICAgICAgICAgICAkbm90aWZpY2F0aW9uWyJ1cGRhdGVkX2F0Il0gPSBteXNxbF9kYXRlKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIE5vdGlmaWNhdGlvbjo6c2F2ZU5vdGlmaWNhdGlvbigkbm90aWZpY2F0aW9uKTsqLwoKICAgICAgICAgICAgLy/QstGL0L3QtdGB0YLQuAogICAgICAgICAgICAvL1ZpZGVvOjpjaGFuZ2VTdGF0dXMoJHZpZGVvX2lkLCBWaWRlbzo6U1RBVFVTX1JFVklFV0VEKTsKCiAgICAgICAgICAgIFRlbXBvcmFyeVJldmlldzo6bW92ZVRlbXBvcmFyeVJldmlld0RhdGEoJHZpZGVvLT50ZW1wb3JhcnlfcmV2aWV3LT5pZCk7CiAgICAgICAgICAgIHNlbGY6OmNoZWNrSWZBcHByb3ZlZCgkdmlkZW8pOwogICAgICAgICAgICAvL3JldHVybiByZXNwb25zZSgpLT5qc29uKFsic3RhdHVzIiA9PiAic3VjY2VzcyIsICJtZXNzYWdlIiA9PiAiUmV2aWV3IHN1Y2Nlc3NmdWxseSBhZGRlZC4iLCAicmV2aWV3X2lkIiA9PiAkaWRdKTsKICAgICAgICAgICAgcmV0dXJuIHJlZGlyZWN0KCktPnRvKCcvcmV2aWV3L3Nob3ctbXkvJy4kdmlkZW9faWQpOwogICAgICAgICAgICAvL3JldHVybiByZWRpcmVjdCgpLT5iYWNrKCktPndpdGgoJ21lc3NhZ2UnLCAnUmV2aWV3IHN1Y2Nlc3NmdWxseSBhZGRlZC4nKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHJlZGlyZWN0KCktPnRvKCcvcmV2aWV3L3Nob3ctbXkvJy4kcmVxdWVzdC0+Z2V0KCd2aWRlb19pZCcpKTsKICAgICAgICAvL3JldHVybiByZWRpcmVjdCgpLT5iYWNrKCktPndpdGgoJ21lc3NhZ2UnLCAnUmV2aWV3IHN1Y2Nlc3NmdWxseSBhZGRlZC4nKTsKCiAgICB9Cgp9CiI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lc3BhY2VzIjthOjE6e3M6MjE6IlxBcHBcSHR0cFxDb250cm9sbGVycyI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjIxOiJcQXBwXEh0dHBcQ29udHJvbGxlcnMiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMToiQ29udHJvbGxlcnMiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MTp7czozODoiXEFwcFxIdHRwXENvbnRyb2xsZXJzXFJldmlld0NvbnRyb2xsZXIiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfIjoxMTp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Mzg6IlxBcHBcSHR0cFxDb250cm9sbGVyc1xSZXZpZXdDb250cm9sbGVyIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6IlJldmlld0NvbnRyb2xsZXIiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZG9jQmxvY2siO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHBhcmVudCI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjMyOiJcQXBwXEh0dHBcQ29udHJvbGxlcnNcQ29udHJvbGxlciI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEwOiJDb250cm9sbGVyIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGltcGxlbWVudHMiO2E6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBjb25zdGFudHMiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwcm9wZXJ0aWVzIjthOjE6e3M6NDY6IlxBcHBcSHR0cFxDb250cm9sbGVyc1xSZXZpZXdDb250cm9sbGVyOjokX3VzZXIiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkiOjg6e3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDY6IlxBcHBcSHR0cFxDb250cm9sbGVyc1xSZXZpZXdDb250cm9sbGVyOjokX3VzZXIiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo1OiJfdXNlciI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRvY0Jsb2NrIjtOO3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGVzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBkZWZhdWx0IjtzOjQ6Im51bGwiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Mjc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZSI7Tjt9fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBtZXRob2RzIjthOjExOntzOjUzOiJcQXBwXEh0dHBcQ29udHJvbGxlcnNcUmV2aWV3Q29udHJvbGxlcjo6X19jb25zdHJ1Y3QoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1MzoiXEFwcFxIdHRwXENvbnRyb2xsZXJzXFJldmlld0NvbnRyb2xsZXI6Ol9fY29uc3RydWN0KCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMToiX19jb25zdHJ1Y3QiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6Mjp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NzoicmVxdWVzdCI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI0OiJcSWxsdW1pbmF0ZVxIdHRwXFJlcXVlc3QiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo3OiJSZXF1ZXN0Ijt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fWk6MTtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6InJlZGlyZWN0IjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MzA6IlxJbGx1bWluYXRlXFJvdXRpbmdcUmVkaXJlY3RvciI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjEwOiJSZWRpcmVjdG9yIjt9fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NDc6IlxBcHBcSHR0cFxDb250cm9sbGVyc1xSZXZpZXdDb250cm9sbGVyOjppbmRleCgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czozNDoiRGlzcGxheSBhIGxpc3Rpbmcgb2YgdGhlIHJlc291cmNlLiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MjU6IlxJbGx1bWluYXRlXEh0dHBcUmVzcG9uc2UiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo4OiJSZXNwb25zZSI7fX1zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czoyMDoiQXBwXEh0dHBcQ29udHJvbGxlcnMiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjIwOntzOjE2OiJQZXJmb3JtYW5jZUxldmVsIjtzOjI3OiJBcHBcTW9kZWxzXFBlcmZvcm1hbmNlTGV2ZWwiO3M6MTQ6IlJldmlld1F1ZXN0aW9uIjtzOjI1OiJBcHBcTW9kZWxzXFJldmlld1F1ZXN0aW9uIjtzOjE1OiJUZW1wb3JhcnlSZXZpZXciO3M6MjY6IkFwcFxNb2RlbHNcVGVtcG9yYXJ5UmV2aWV3IjtzOjc6IlJlcXVlc3QiO3M6MjM6IklsbHVtaW5hdGVcSHR0cFxSZXF1ZXN0IjtzOjEwOiJSZWRpcmVjdG9yIjtzOjI5OiJJbGx1bWluYXRlXFJvdXRpbmdcUmVkaXJlY3RvciI7czo4OiJSZXF1ZXN0cyI7czoxNzoiQXBwXEh0dHBcUmVxdWVzdHMiO3M6NToiVmlkZW8iO3M6MTY6IkFwcFxNb2RlbHNcVmlkZW8iO3M6NDoiVXNlciI7czoxNToiQXBwXE1vZGVsc1xVc2VyIjtzOjY6IlJldmlldyI7czoxNzoiQXBwXE1vZGVsc1xSZXZpZXciO3M6MTI6Ik5vdGlmaWNhdGlvbiI7czoyMzoiQXBwXE1vZGVsc1xOb3RpZmljYXRpb24iO3M6MTE6IlRyYW5zYWN0aW9uIjtzOjIyOiJBcHBcTW9kZWxzXFRyYW5zYWN0aW9uIjtzOjQ6IkZpbGUiO3M6NDoiRmlsZSI7czo3OiJTdG9yYWdlIjtzOjc6IlN0b3JhZ2UiO3M6NjoiQ2FyYm9uIjtzOjEzOiJDYXJib25cQ2FyYm9uIjtzOjY6Ik1haWxlciI7czoyMzoiQXBwXEh0dHBcSGVscGVyc1xNYWlsZXIiO3M6MjoiREIiO3M6Mjk6IklsbHVtaW5hdGVcU3VwcG9ydFxGYWNhZGVzXERCIjtzOjIyOiJDb25jYXRSZXZpZXdWaWRlb0F1ZGlvIjtzOjMxOiJBcHBcSm9ic1xDb25jYXRSZXZpZXdWaWRlb0F1ZGlvIjtzOjM6IkxvZyI7czozMDoiSWxsdW1pbmF0ZVxTdXBwb3J0XEZhY2FkZXNcTG9nIjtzOjk6IlZhbGlkYXRvciI7czo5OiJWYWxpZGF0b3IiO3M6NzoiU2Vzc2lvbiI7czo3OiJTZXNzaW9uIjt9fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDc6IlxBcHBcSHR0cFxDb250cm9sbGVyc1xSZXZpZXdDb250cm9sbGVyOjppbmRleCgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NToiaW5kZXgiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDQ7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo0ODoiXEFwcFxIdHRwXENvbnRyb2xsZXJzXFJldmlld0NvbnRyb2xsZXI6OmNyZWF0ZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czo0MjoiU2hvdyB0aGUgZm9ybSBmb3IgY3JlYXRpbmcgYSBuZXcgcmVzb3VyY2UuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjE6e2k6MDtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xSZXR1cm5fIjozOntzOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyNToiXElsbHVtaW5hdGVcSHR0cFxSZXNwb25zZSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjg6IlJlc3BvbnNlIjt9fXM6NzoiACoAbmFtZSI7czo2OiJyZXR1cm4iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO3I6OTI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0ODoiXEFwcFxIdHRwXENvbnRyb2xsZXJzXFJldmlld0NvbnRyb2xsZXI6OmNyZWF0ZSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NjoiY3JlYXRlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjI6ImlkIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Nzg7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo1ODoiXEFwcFxIdHRwXENvbnRyb2xsZXJzXFJldmlld0NvbnRyb2xsZXI6OmNyZWF0ZVNlY29uZFN0ZXAoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo1ODoiXEFwcFxIdHRwXENvbnRyb2xsZXJzXFJldmlld0NvbnRyb2xsZXI6OmNyZWF0ZVNlY29uZFN0ZXAoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjE2OiJjcmVhdGVTZWNvbmRTdGVwIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjg6InZpZGVvX2lkIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTE2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NDc6IlxBcHBcSHR0cFxDb250cm9sbGVyc1xSZXZpZXdDb250cm9sbGVyOjpzdG9yZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2siOjc6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAc3VtbWFyeSI7czo0MjoiU3RvcmUgYSBuZXdseSBjcmVhdGVkIHJlc291cmNlIGluIHN0b3JhZ2UuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjI6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czo3OiJyZXF1ZXN0IjtzOjU2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNWYXJpYWRpYyI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbQBpc1JlZmVyZW5jZSI7YjowO3M6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI0OiJcSWxsdW1pbmF0ZVxIdHRwXFJlcXVlc3QiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo3OiJSZXF1ZXN0Ijt9fXM6NzoiACoAbmFtZSI7czo1OiJwYXJhbSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19aToxO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFJldHVybl8iOjM6e3M6NzoiACoAdHlwZSI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8iOjE6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjI1OiJcSWxsdW1pbmF0ZVxIdHRwXFJlc3BvbnNlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6ODoiUmVzcG9uc2UiO319czo3OiIAKgBuYW1lIjtzOjY6InJldHVybiI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX19fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjo5MjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ3OiJcQXBwXEh0dHBcQ29udHJvbGxlcnNcUmV2aWV3Q29udHJvbGxlcjo6c3RvcmUoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjU6InN0b3JlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjc6InJlcXVlc3QiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyNDoiXElsbHVtaW5hdGVcSHR0cFxSZXF1ZXN0IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NzoiUmVxdWVzdCI7fX1zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxNTQ7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo1NjoiXEFwcFxIdHRwXENvbnRyb2xsZXJzXFJldmlld0NvbnRyb2xsZXI6OnN0b3JlQXVkaW9GaWxlKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTY6IlxBcHBcSHR0cFxDb250cm9sbGVyc1xSZXZpZXdDb250cm9sbGVyOjpzdG9yZUF1ZGlvRmlsZSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTQ6InN0b3JlQXVkaW9GaWxlIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjc6InJlcXVlc3QiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyNDoiXElsbHVtaW5hdGVcSHR0cFxSZXF1ZXN0IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NzoiUmVxdWVzdCI7fX1zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxOTM7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo1MzoiXEFwcFxIdHRwXENvbnRyb2xsZXJzXFJldmlld0NvbnRyb2xsZXI6OnNhdmVSYXRpbmdzKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTM6IlxBcHBcSHR0cFxDb250cm9sbGVyc1xSZXZpZXdDb250cm9sbGVyOjpzYXZlUmF0aW5ncygpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTE6InNhdmVSYXRpbmdzIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjc6InJlcXVlc3QiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfIjoxOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE9iamVjdF8AZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoyNDoiXElsbHVtaW5hdGVcSHR0cFxSZXF1ZXN0IjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NzoiUmVxdWVzdCI7fX1zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMjI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e319czo1NzoiXEFwcFxIdHRwXENvbnRyb2xsZXJzXFJldmlld0NvbnRyb2xsZXI6OmNoZWNrSWZBcHByb3ZlZCgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6OTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjU3OiJcQXBwXEh0dHBcQ29udHJvbGxlcnNcUmV2aWV3Q29udHJvbGxlcjo6Y2hlY2tJZkFwcHJvdmVkKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxNToiY2hlY2tJZkFwcHJvdmVkIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjU6InZpZGVvIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MzU4O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NDY6IlxBcHBcSHR0cFxDb250cm9sbGVyc1xSZXZpZXdDb250cm9sbGVyOjpzaG93KCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjMxOiJEaXNwbGF5IHRoZSBzcGVjaWZpZWQgcmVzb3VyY2UuIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjI6e2k6MDtPOjQ0OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xQYXJhbSI6Njp7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAHZhcmlhYmxlTmFtZSI7czoyOiJpZCI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFBhcmFtAGlzVmFyaWFkaWMiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUGFyYW0AaXNSZWZlcmVuY2UiO2I6MDtzOjc6IgAqAHR5cGUiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xJbnRlZ2VyIjowOnt9czo3OiIAKgBuYW1lIjtzOjU6InBhcmFtIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX1pOjE7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcUmV0dXJuXyI6Mzp7czo3OiIAKgB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MjU6IlxJbGx1bWluYXRlXEh0dHBcUmVzcG9uc2UiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo4OiJSZXNwb25zZSI7fX1zOjc6IgAqAG5hbWUiO3M6NjoicmV0dXJuIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtyOjkyO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAbG9jYXRpb24iO047czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlU3RhcnQiO2I6MDtzOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVFbmQiO2I6MDt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NDY6IlxBcHBcSHR0cFxDb250cm9sbGVyc1xSZXZpZXdDb250cm9sbGVyOjpzaG93KCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo0OiJzaG93Ijt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjI6ImlkIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDY1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NDg6IlxBcHBcSHR0cFxDb250cm9sbGVyc1xSZXZpZXdDb250cm9sbGVyOjpzaG93TXkoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjk6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0ODoiXEFwcFxIdHRwXENvbnRyb2xsZXJzXFJldmlld0NvbnRyb2xsZXI6OnNob3dNeSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6Njoic2hvd015Ijt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjI6ImlkIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NDk0O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fXM6NjE6IlxBcHBcSHR0cFxDb250cm9sbGVyc1xSZXZpZXdDb250cm9sbGVyOjpzYXZlQXVkaXRpb25SYXRpbmdzKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjo5OntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NjE6IlxBcHBcSHR0cFxDb250cm9sbGVyc1xSZXZpZXdDb250cm9sbGVyOjpzYXZlQXVkaXRpb25SYXRpbmdzKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxOToic2F2ZUF1ZGl0aW9uUmF0aW5ncyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo3OiJyZXF1ZXN0IjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcT2JqZWN0XyI6MTp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xPYmplY3RfAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6MjQ6IlxJbGx1bWluYXRlXEh0dHBcUmVxdWVzdCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjc6IlJlcXVlc3QiO319czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NTM5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9fX1zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AdXNlZFRyYWl0cyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyNTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO319fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";